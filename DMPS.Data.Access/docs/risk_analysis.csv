"risk_id","risk_category","risk_description","probability","impact","risk_score","priority_level","affected_tasks","root_cause","mitigation_strategy","contingency_plan","monitoring_trigger","owner","due_date","status"
"RISK-001","Technical","The custom GPU-accelerated rendering pipeline using WPF and DirectX interop (`Vortice.Windows`) is exceptionally complex. This introduces a high probability of encountering driver compatibility issues, unmanaged memory leaks, and subtle rendering artifacts that are difficult to debug, potentially jeopardizing the core viewing functionality of the application.","4","5","20","High","EPIC-004 (DICOM Viewer & Manipulation), especially WI-018 and WI-020. The performance and stability of the entire user experience depend on this component.","Bypassing the standard WPF rendering engine for performance gains introduces significant low-level graphics programming complexity and dependencies on hardware/drivers.","1. Conduct a time-boxed technical spike (2-3 weeks) to build a proof-of-concept (POC) focused solely on the rendering pipeline. 2. Develop a rigorous test harness for the POC to validate performance, stability, and memory usage with a wide range of DICOM image types and sizes. 3. Ensure developers assigned to this task have prior experience with DirectX or similar graphics APIs.","If the DirectX interop proves too unstable, revert to a simpler rendering mechanism using WPF's native `WriteableBitmap`. This will be lower performance but significantly lower risk, ensuring a functional viewer for an initial release while deferring advanced optimization.","The POC fails to render a standard DICOM test set without crashing, or performance benchmarks are less than 50% better than the `WriteableBitmap` contingency plan.","Lead Developer","2025-02-28","Not Started"
"RISK-002","Quality","Failure to achieve and maintain strict HIPAA compliance (REQ-1-012) represents a critical business risk. A single implementation flaw in data encryption (at rest or in transit), audit logging, access control, or PHI redaction could lead to a data breach, resulting in severe legal penalties and reputational damage.","3","5","15","High","Affects all epics, particularly EPIC-002 (Auth), EPIC-003 (Admin), and cross-cutting concerns related to logging (REQ-1-039) and data storage (REQ-1-083).","The multifaceted and stringent nature of HIPAA rules requires meticulous implementation across the entire technology stack, where a single oversight can constitute a major compliance failure.","1. Create a 'Compliance Traceability Matrix' mapping every HIPAA-related requirement to specific code modules and tests. 2. Engage a third-party security firm specializing in healthcare applications to perform a code audit and penetration test before the first production release. 3. Implement automated SAST scanning in the CI/CD pipeline.","If a critical compliance gap is found late in the development cycle, delay the release to remediate the issue. Prioritize fixing any identified HIPAA vulnerabilities over all other development work. Have a pre-approved incident response plan ready for execution.","The Compliance Traceability Matrix shows a requirement that is not covered by a specific implementation and test case. A high-severity issue is reported by the security audit.","Project Manager / Security Lead","2025-07-31","Not Started"
"RISK-003","External","The system's dependency on pre-installed and correctly configured third-party services (PostgreSQL 16 with `pgcrypto`, RabbitMQ) creates a significant operational risk. Deployment will fail if the customer's environment is misconfigured (e.g., firewalls, incorrect versions, missing extensions), leading to user frustration and increased support costs.","4","3","12","Medium","System deployment and initial setup. Directly relates to requirements REQ-1-002 and REQ-1-076.","The application's functionality is tightly coupled with external services that are outside the installer's direct control, making it vulnerable to environmental variables.","1. Enhance the MSIX installer's prerequisite check (REQ-1-076) to be extremely thorough, providing clear, actionable error messages for each failed check (e.g., 'Connection to PostgreSQL failed: Port 5432 is blocked'). 2. Create a standalone 'Environment Test Utility' that customers can run before installation to validate their infrastructure. 3. Produce a detailed Deployment Guide with step-by-step configuration instructions for PostgreSQL and RabbitMQ.","Develop a 'portable' version of the application for demonstration purposes that uses lightweight, embedded alternatives (e.g., SQLite, in-memory queue) to bypass these external dependencies, allowing for quick feature validation in hostile environments.","More than 15% of initial test deployments fail due to environment configuration issues.","DevOps Lead","2025-06-30","Not Started"
"RISK-004","Technical","The decoupled C-STORE SCP architecture (REQ-1-010) creates a risk of data inconsistency. If the background consumer fails to process a message from the queue after multiple retries and the message is sent to the DLQ, the associated DICOM files will be orphaned on the file system without corresponding database records, requiring manual intervention to fix.","3","4","12","Medium","EPIC-005 (DICOM Network Comms), specifically tasks WI-024 and WI-025. This impacts the core data integrity of the system.","Decoupling file reception from database processing for performance reasons breaks the atomicity of the overall 'study import' transaction, relying on a message queue and eventual consistency.","1. Implement a robust monitoring and alerting system for the Dead-Letter Queue (DLQ) as part of the System Health Dashboard (REQ-1-091). 2. Develop an administrator-run utility to 'reprocess' messages from the DLQ. 3. Ensure the scheduled data integrity check (REQ-1-058) is implemented and run regularly to identify orphaned files.","If the DLQ grows unexpectedly, the system should trigger a critical alert (REQ-1-092) and potentially halt C-STORE reception (by stopping the listener) to prevent further data inconsistency until the root cause of consumer failure is addressed.","The number of messages in the DLQ, as displayed on the System Health Dashboard, is greater than zero.","Backend Lead","2025-08-15","Not Started"
"RISK-005","Timeline","The estimated complexity for several critical path features, particularly DICOM GSPS object creation (WI-022) and annotation tools (WI-021), may be significantly underestimated. The DICOM standard is notoriously complex, and creating compliant Presentation State objects that work across different systems is a deep technical challenge that could cause major schedule overruns.","4","3","12","Medium","Work stream WS-008, especially WI-021 and WI-022. This could delay the delivery of key clinical features.","The functional requirement seems simple ('save annotations'), but the technical implementation requires deep, specialized knowledge of a complex international standard (DICOM).","1. Prioritize the development of GSPS functionality early. 2. Acquire a set of third-party DICOM viewers and a DICOM validation tool (e.g., dciodvfy) to continuously test the generated GSPS objects for compliance and interoperability. 3. Consider delivering basic annotation viewing first, and phasing in GSPS saving as a separate deliverable if complexity proves too high for the initial release.","If GSPS generation proves too complex for the timeline, the MVP will save annotations in a proprietary format, with a documented limitation that they are only viewable within this application. A data migration path to GSPS will be planned for a future release.","Integration tests show that generated GSPS files fail validation or are not correctly interpreted by two or more major third-party DICOM viewers.","Lead Developer","2025-07-01","Not Started"
"RISK-006","Resource","The project requires a rare combination of high-level expertise in multiple domains: WPF, DirectX, `fo-dicom`, RabbitMQ, and PostgreSQL security (`pgcrypto`). A key person dependency exists, where the loss of a single developer with this combined skillset could severely delay or halt the project.","2","5","10","Medium","This risk impacts all technical work items, but most critically the GPU rendering (WI-018), DICOM networking (EPIC-005), and security implementation.","The technology stack is modern and powerful but highly specialized, reducing the pool of available experts and concentrating knowledge in a few individuals.","1. Enforce pair programming on the most complex modules (especially the rendering engine). 2. Mandate comprehensive documentation for all core architectural components. 3. Conduct regular internal knowledge-sharing sessions where the lead developer on a complex module explains its design and implementation to the rest of the team. 4. Identify and pre-vet external consultants who could be brought in on short notice if needed.","If a key developer is lost, immediately use the documentation and knowledge-sharing records to onboard their replacement. Engage the pre-vetted external consultant to bridge the gap and assist with the transition.","Project velocity drops by more than 30% for two consecutive sprints in a specific area (e.g., viewer development).","Project Manager","2025-03-31","Not Started"