"task_id","task_name","primary_skill","secondary_skills","complexity_level","estimated_hours","required_experience","productivity_factor","adjusted_hours","team_size","collaboration_required","dependencies","critical_path","skill_learning_curve","ramp_up_hours","resource_notes","alternative_approach","risk_factors","mitigation_strategy","quality_overhead","review_hours","documentation_hours","testing_coordination","integration_overhead"
"TASK-ARC-001","Scaffold Solution and Projects",".NET 8","Visual Studio,Architecture","Low","6","Senior","1.3","4.6","1","","","true","None","","Foundation task, requires lead oversight to ensure architectural correctness from the start.","N/A","Incorrect initial setup can cause significant rework later.","Code review by a second senior developer or architect.","0.9","0.6","0.3","",""
"TASK-DICOM-002","Technical Spike: WPF/DirectX Rendering POC","DirectX","WPF,HLSL,C#,Performance Analysis","Critical","25.3","Lead","1.4","18.1","1","","TASK-DICOM-001","true","Medium","8","Highest technical risk task. Assign to the most senior developer with graphics experience. This task's outcome dictates future work.","Use WPF's native WriteableBitmap as a fallback if POC fails.","RISK-001: High complexity, potential for memory leaks, driver issues. Key person dependency.","Time-box the spike strictly. Develop a clear go/no-go success criteria based on performance and stability benchmarks.","3.8","2.5","5","",""
"TASK-DICOM-003","Implement Core GPU Rendering Pipeline","DirectX","WPF,HLSL,C#","Critical","40.7","Lead","1.4","29.1","1","true","TASK-DICOM-002","true","Low","","Direct follow-up to the POC. Requires dedicated focus from the lead developer. High impact on project success.","Implement the WriteableBitmap version if the POC failed.","RISK-001: Integration of POC into the main app can uncover new issues. RISK-006: Key person dependency.","Pair programming with another developer (e.g., frontend) to transfer knowledge and reduce dependency risk.","6.1","4.1","2","8","4"
"TASK-NET-004","Integration Test for End-to-End C-STORE Flow","Test Automation","xUnit,Testcontainers,DICOM,RabbitMQ,PostgreSQL","Critical","16.7","Senior","1.2","13.9","1","true","TASK-NET-003","true","Medium","4","Complex E2E test requiring orchestration of multiple services. Requires a QA engineer with strong Testcontainers/Docker skills.","Manual testing, but it would be slow, error-prone, and non-repeatable.","RISK-004: Test must correctly simulate failure scenarios to validate the DLQ mechanism.","Allocate sufficient time for test development. Backend dev must collaborate to define failure injection points.","2.5","1.7","0.8","","2"