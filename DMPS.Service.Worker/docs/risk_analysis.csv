risk_id,risk_category,risk_description,probability,impact,risk_score,priority_level,affected_tasks,root_cause,mitigation_strategy,contingency_plan,monitoring_trigger,owner,due_date,status
R-TEC-001,Technical,"The implementation of a GPU-accelerated DICOM rendering pipeline using low-level DirectX interop (Vortice.Windows) is highly complex and may lead to instability, visual artifacts, memory leaks, or significant development delays.",5,5,25,Critical,"WI-021, WI-022, WI-023",High technical complexity and reliance on low-level graphics APIs within a managed framework (WPF).,"1. Allocate a dedicated, time-boxed technical spike (proof-of-concept) for the rendering pipeline before committing to the full implementation. 2. Define strict performance and stability acceptance criteria for the spike. 3. Ensure the assigned developer has proven experience with DirectX; if not, provide training or hire a specialist.",If the spike fails to produce a stable and performant solution, revert to a simpler, less performant rendering engine (e.g., WPF's WriteableBitmap) and document the performance trade-offs. Defer GPU acceleration to a future release.,Failure to meet performance benchmarks (e.g., FPS, memory usage) on target hardware during the initial PoC phase.,Tech Lead,TBD,Open
R-RES-001,Resource,"The project requires a rare combination of senior-level skills (WPF, DirectX, fo-dicom, RabbitMQ, PostgreSQL Security). A key person dependency on one or two developers creates a significant risk if they become unavailable.",4,5,20,High,"WI-002, WI-004, WI-009, WI-018, WI-019, WI-021",Niche skill requirements leading to a small pool of qualified developers and lack of redundancy.,"1. Implement mandatory pair programming for the most complex tasks (WI-021, WI-019). 2. Maintain high-quality, up-to-date documentation for architecture and complex components. 3. Cross-train at least one other developer on critical systems like DICOM ingestion and the rendering pipeline.",Engage a pre-vetted external contractor or consultant specializing in medical imaging or high-performance .NET development to backfill the role or provide support.,A key developer being assigned to another high-priority project or giving notice of leave/departure.,Project Manager,TBD,Open
R-TEC-002,Technical,"The decoupled DICOM C-STORE ingestion pipeline, while architecturally sound, creates operational complexity. A persistent failure or bug in the DicomIngestionConsumer (WI-019) could cause the RabbitMQ queue to grow indefinitely, leading to data loss if the broker's resources are exhausted or messages expire.",4,4,16,High,"WI-019, WI-018",Architectural complexity and reliance on asynchronous processing for a critical data path.,"1. Implement robust monitoring and alerting on the RabbitMQ queue depth and the DLQ count (WI-030). 2. Ensure the consumer is idempotent to allow for safe reprocessing of messages. 3. Implement comprehensive unit and integration tests for the entire ingestion flow, including failure scenarios.",Develop a documented manual procedure and/or a script for an administrator to re-queue messages from the DLQ after a bug fix has been deployed. The procedure should allow for batching to avoid overwhelming the system.,The number of messages in the main processing queue or the dead-letter queue (DLQ) exceeds a predefined threshold (e.g., >1000 for main queue, >0 for DLQ).,DevOps Lead,TBD,Open
R-TEC-003,Technical,"The requirement to redact all PHI from logs (WI-003) is critical for HIPAA compliance. An incomplete redaction filter (e.g., a flawed regex or a missed DICOM tag) could lead to sensitive data leaks into log files or the Windows Event Log, causing a major compliance breach.",3,5,15,High,WI-003,Complexity of identifying all possible forms of PHI in unstructured log messages and structured data.,_x000D_
"1. Base the redaction logic on a comprehensive, version-controlled list of PHI-containing DICOM tags. _x000D_
2. Mandate peer reviews specifically for any changes to the redaction filter. _x000D_
3. Create a dedicated suite of unit tests that assert that various sample log messages containing PHI are correctly sanitized.",If a leak is detected in production, an emergency hotfix will be deployed to change the logging level to 'Fatal' or disable the affected log sinks entirely until the redaction filter is corrected. An incident response plan for purging the leaked logs must be initiated.,A manual or automated audit of log files reveals any unmasked PHI data.,Security Officer,TBD,Open
R-QLT-001,Quality,"The creation of DICOM Grayscale Softcopy Presentation State (GSPS) objects for annotations (WI-023) is complex. Generating non-compliant or incorrect GSPS objects could render annotations unusable by other DICOM-compliant systems or even corrupt study data if handled improperly.",4,3,12,Medium,WI-023,Complexity of the DICOM standard and the need for strict adherence to the specification for interoperability.,"1. Use a standard DICOM validation tool (e.g., dciodvfy) as part of the CI pipeline to validate generated GSPS files. 2. Create a test suite that includes saving annotations and then attempting to load and render the resulting GSPS in a reference DICOM viewer (e.g., Horos, OsiriX).",If GSPS generation proves too unreliable, switch to a proprietary annotation format for the initial release, clearly documenting it as a limitation. Prioritize full GSPS compliance for a subsequent release.,Generated GSPS files fail validation against a standard DICOM toolkit during automated testing.,QA Lead,TBD,Open
R-TEC-004,Technical,"Using low-level Windows hooks via P/Invoke for the session inactivity monitor (WI-014) can be fragile. It may cause instability, performance degradation, or fail to work correctly across different Windows versions or with certain accessibility software.",4,3,12,Medium,WI-014,Dependency on unmanaged OS-level APIs, which can be brittle and hard to debug in a managed application.,"1. Isolate the P/Invoke code in a dedicated, well-tested class with robust error handling. 2. Perform targeted testing of this feature on all supported Windows versions (Win 10 20H2+, Win 11) and with common accessibility tools enabled. 3. Research alternative, higher-level WPF mechanisms for detecting idle state as a backup.",If the P/Invoke method proves unstable, switch to a less precise but more stable polling mechanism that checks for the last input time at a regular interval (e.g., every 30 seconds).,Reports of application crashes or freezes during QA testing that are traced back to the inactivity monitor.,Tech Lead,TBD,Open
R-EXT-001,External,"The system's C-FIND/C-MOVE functionality (WI-020) is dependent on the compliance and stability of external, third-party PACS systems. These systems can have unique implementation quirks, be unresponsive, or have network issues, leading to a poor user experience and data retrieval failures.",4,3,12,Medium,WI-020,Dependency on external systems outside of the project's control.,"1. Implement configurable timeouts and retry logic for all DICOM network operations. 2. Provide clear, user-friendly error messages that distinguish between local application errors and remote PACS errors. 3. Test against multiple different PACS simulators or known PACS vendors during the QA phase.",Develop a comprehensive troubleshooting guide for administrators to diagnose connectivity issues with specific PACS vendors. Provide an alternative file-based import mechanism (drag-and-drop) as a primary workflow for users experiencing persistent PACS issues.,Consistent C-ECHO or C-FIND failures against a specific configured PACS during development or QA.,Tech Lead,TBD,Open
R-DEP-001,Operational,"The MSIX installer's prerequisite check (WI-033) for PostgreSQL and RabbitMQ connectivity creates a hard dependency that could block installation in environments with strict network policies (e.g., firewalls). A failure in this check prevents the software from being installed at all.",4,3,12,Medium,WI-033,A strict installation gate can be a single point of failure and may be difficult to debug for end-users.,"1. Ensure the check provides very specific error messages (e.g., 'Connection refused', 'Authentication failed', 'pgcrypto extension not found'). 2. Provide a 'Test Connection' button in the installer UI so users can iterate on settings without restarting the installer. 3. Create detailed documentation on required firewall ports and user permissions for PostgreSQL/RabbitMQ.",Provide a command-line flag or a separate 'administrator' version of the installer that can bypass the prerequisite checks, allowing the application to be installed but not run. The application would then perform the checks on first launch, providing more flexibility for configuration.,Feedback from early user acceptance testing (UAT) indicates a high failure rate during installation due to environmental factors.,DevOps Lead,TBD,Open
R-TIM-001,Timeline,"The project contains a high number of tasks rated with 'High' or 'Critical' complexity (e.g., WI-002, WI-004, WI-021, WI-019). The initial effort estimates for these tasks are likely to be inaccurate, leading to a high risk of schedule slippage for the entire project.",4,3,12,Medium,"WI-002, WI-004, WI-007, WI-009, WI-012, WI-013, WI-014, WI-018, WI-019, WI-020, WI-021, WI-022, WI-023, WI-024, WI-030, WI-031, WI-033, WI-034",Over-optimistic estimation for complex, research-heavy tasks.,"1. Break down all 'High' and 'Critical' complexity tasks into smaller, more manageable sub-tasks. 2. Prioritize developing technical spikes or Proof-of-Concepts for the highest risk items (e.g., WI-021) to de-risk them early. 3. Maintain a risk-adjusted backlog and communicate potential timeline impacts to stakeholders proactively.",If a major task is significantly delayed, conduct a re-planning session with stakeholders to de-scope non-critical features (e.g., deferring advanced print layout options or less-used admin UIs) to protect the core release date.,Velocity charts showing a consistent failure to complete the planned number of high-complexity story points sprint-over-sprint.,Project Manager,TBD,Open
R-TEC-005,Technical,"The atomicity of application actions and their corresponding audit log entries (WI-031) is critical for compliance. Failure to wrap these operations in a single database transaction could lead to an inconsistent state, where an action occurs but is not logged, violating non-repudiation requirements.",3,4,12,Medium,"WI-016, WI-029, WI-031",Implementation error in data access layer, failing to correctly manage transaction scopes.,"1. Enforce a policy in the data access layer where all service-level write operations are executed within an explicit database transaction. 2. Conduct specific code reviews on all service methods that modify data to ensure they also create and persist the audit entry within the same transaction scope. 3. Write integration tests that simulate a database failure after the primary action but before the audit log write, and assert that the entire transaction is rolled back.",If an inconsistency is found, create a high-priority task to develop a reconciliation script that can analyze application data and logs to identify and manually log missing audit entries. This is a corrective measure, not a preventive one.,An audit or data review finds a record of a user being created (in the Users table) without a corresponding 'User Created' event in the AuditLog table.,Tech Lead,TBD,Open
R-QLT-002,Quality,"The performance of the Audit Trail Viewer (WI-031) may degrade significantly as the audit log grows, leading to a slow and unusable UI for administrators. Queries with date ranges on a very large table without proper indexing will be slow.",4,2,8,Medium,WI-031,Lack of database performance considerations for a high-volume data table.,"1. Ensure the `AuditLog` table is indexed correctly, especially on the `eventTimestamp`, `userId`, and `eventType` columns. 2. Implement server-side pagination for all queries to the audit log, so the UI only ever requests a small chunk of data at a time. 3. Perform load testing by pre-populating the `AuditLog` table with millions of records and measuring query response times.",If UI performance remains poor, introduce a data archiving strategy. The UI will only query recent logs from the primary table, with an option to run a slower, explicit query against an archived log table for historical investigations.,The Audit Trail Viewer UI takes more than 3-5 seconds to load or filter results during QA testing with a large, seeded database.,DBA / Tech Lead,TBD,Open
R-SEC-001,Security,"Storing sensitive credentials (DB passwords, SMTP credentials) insecurely, such as in plaintext in appsettings.json, would be a major security vulnerability. The requirement to use Windows Credential Manager adds complexity and a dependency on a specific OS feature.",3,5,15,High,"WI-009, (Implied in WS-008, WS-009)",Developer oversight or convenience leading to insecure storage of secrets.,"1. Create a centralized, injectable `ISecretStore` service that abstracts access to the Windows Credential Manager. 2. Prohibit direct access to `IConfiguration` for retrieving secrets in the application code; all secret access must go through the `ISecretStore`. 3. Add a check to the CI/CD pipeline that scans configuration files for common password-like keys or high-entropy strings to detect accidentally committed secrets.",If a secret is compromised, immediately initiate the secret rotation protocol: change the password in the target system (database, email server), update the value in the Windows Credential Manager on all affected machines, and restart the application services.,A code review or a security scan detects a plaintext secret in a configuration file or source code.,Security Officer,TBD,Open
R-TEC-006,Technical,"The use of Named Pipes for synchronous IPC (WI-006) can be problematic regarding security and permissions. The Windows Service, running as a specific user (e.g., Local System), might create a pipe that the user-level WPF client does not have the permissions to access.",3,3,9,Medium,WI-006,Complexity of Windows security and permissions models for inter-process communication.,"1. Explicitly define an `AccessControlList` (ACL) when creating the Named Pipe server to grant access to authenticated users. 2. Test the IPC mechanism thoroughly on non-developer machines and under different user account types (standard user vs. admin). 3. Document the required security configuration for the Named Pipe.",If Named Pipes permissions prove too difficult to manage in diverse customer environments, replace it with a local-only TCP loopback connection, which has a more straightforward permission model, for the status check communication.,The application fails to connect to the service during QA testing on a machine where the user is not a local administrator.,Tech Lead,TBD,Open