"task_id","title","description","type","status","priority","assignee","reporter","due_date","estimated_hours","story_points","labels","sprint","sprint_goal","epic","epic_id","project","parent_id","dependencies","skills_required","complexity","risk_level","acceptance_criteria","definition_of_done","created_at","updated_at","sprint_start_date","sprint_end_date","capacity_allocation","collaboration_required","external_dependencies","testing_requirements","deployment_notes","business_value"
"TASK-US-010-01","Design & Scaffold .NET Solution Structure","Define and create the multi-project .NET solution structure following Clean/Onion Architecture principles. This includes projects for Client.Wpf, Service, Core (Domain), DataAccess, and Infrastructure.","Task","Sprint Backlog","Critical","dev1@company.com","product.owner@company.com","2024-11-04","4","1","architecture,setup,backend","Sprint 1","Establish foundational architecture, data persistence, and core security primitives.","Core Architecture & System Setup","EPIC-001","DICOM Management & Print System","US-010","",".NET Architecture,Visual Studio,Git","Low","Low","A diagram of the project structure is created and approved. The .NET solution and all .csproj files are created in source control.","Code reviewed; Solution compiles; Architecture diagram approved.","2024-10-26T09:00:00Z","2024-10-26T09:00:00Z","2024-11-04","2024-11-15","100%","Tech Lead for architecture review.","","N/A - Structural task.","Initial commit to source control repository.","Enables all subsequent development work within a structured framework."
"TASK-US-010-02","Implement Generic Host & DI for WPF Client","Configure the Generic Host (IHost) in the WPF App.xaml.cs to set up and provide services via Microsoft.Extensions.DependencyInjection.","Task","Sprint Backlog","Critical","dev2@company.com","product.owner@company.com","2024-11-05","6.3","1","wpf,frontend,architecture","Sprint 1","Establish foundational architecture, data persistence, and core security primitives.","Core Architecture & System Setup","EPIC-001","DICOM Management & Print System","US-010","TASK-US-010-01","WPF,.NET Generic Host,Dependency Injection","Medium","Low","The App.xaml.cs uses Host.CreateDefaultBuilder. The MainWindow can resolve a sample service. Application starts and closes cleanly.","Code reviewed; Unit tests passing; Application starts successfully.","2024-10-26T09:00:00Z","2024-10-26T09:00:00Z","2024-11-04","2024-11-15","100%","","","Unit testing for DI registration.","","Provides dependency injection for the client application, enabling clean architecture."
"TASK-US-013-01","Implement Core EF Core Entities","Create the C# classes for the core entities: User, Role, PasswordHistory, Patient, Study, Series, Image.","Task","Sprint Backlog","Critical","dev1@company.com","product.owner@company.com","2024-11-06","8.3","2","database,ef-core,backend","Sprint 1","Establish foundational architecture, data persistence, and core security primitives.","Data Persistence & Management","EPIC-002","DICOM Management & Print System","US-013","TASK-US-010-01","C#,EF Core","Medium","Low","All specified entities exist as POCO classes in the Core/Domain project. Code compiles successfully.","Code reviewed; All entities defined as per ERD.","2024-10-26T09:00:00Z","2024-10-26T09:00:00Z","2024-11-04","2024-11-15","100%","","","N/A - Data modeling task.","","Defines the primary data structures for the application."
"TASK-US-013-03","Implement DbContext and Fluent API Configurations","Create the DicomAppDbContext class and use the Fluent API to configure all entity relationships, constraints, and indexes.","Task","Sprint Backlog","Critical","dev1@company.com","product.owner@company.com","2024-11-08","12","2","database,ef-core,backend","Sprint 1","Establish foundational architecture, data persistence, and core security primitives.","Data Persistence & Management","EPIC-002","DICOM Management & Print System","US-013","TASK-US-013-01","EF Core Fluent API,PostgreSQL","High","Medium","DbContext contains a DbSet for every entity. All relationships from the ERD are defined in OnModelCreating.","Code reviewed; EF Core migration generates without errors.","2024-10-26T09:00:00Z","2024-10-26T09:00:00Z","2024-11-04","2024-11-15","100%","","","Validation via migration generation.","","Connects the application's object model to the relational database schema."
"TASK-US-012-02","Implement Resilient RabbitMQ Connection Service","Create a singleton service to manage the connection to the RabbitMQ broker, handling automatic reconnection on failure.","Task","Sprint Backlog","Critical","dev3@company.com","product.owner@company.com","2024-11-08","10.3","2","rabbitmq,infrastructure,backend","Sprint 1","Establish foundational architecture, data persistence, and core security primitives.","Core Architecture & System Setup","EPIC-001","DICOM Management & Print System","US-012","TASK-US-010-03","RabbitMQ.Client,C#,Multithreading","High","High","Service establishes connection on start. Service reconnects if broker is restarted. Service exposes a stable IModel channel.","Code reviewed; Integration tests passing that simulate broker failure.","2024-10-26T09:00:00Z","2024-10-26T09:00:00Z","2024-11-04","2024-11-15","100%","","Running RabbitMQ instance.","Integration testing involving stopping/starting RabbitMQ broker.","","Ensures reliable communication for all asynchronous operations."
"TASK-US-011-02","Implement PHI Redaction Enricher for Serilog","Design and implement a custom Serilog ILogEventEnricher that inspects and redacts known PHI fields from log properties.","Task","Sprint Backlog","Critical","dev2@company.com","product.owner@company.com","2024-11-11","8.7","2","security,logging,hipaa","Sprint 1","Establish foundational architecture, data persistence, and core security primitives.","Core Architecture & System Setup","EPIC-001","DICOM Management & Print System","US-011","TASK-US-011-01","Serilog,C#,Regular Expressions","Medium","High","Enricher correctly identifies and redacts PHI properties. Log output shows '***' instead of patient name. Handles structured data.","Code reviewed; Unit tests passing; Security review of redaction logic complete.","2024-10-26T09:00:00Z","2024-10-26T09:00:00Z","2024-11-04","2024-11-15","100%","Security Lead for review.","","Unit tests covering all known PHI tags and edge cases.","","Critical for HIPAA compliance, preventing PHI leakage into system logs."
"TASK-US-016-02","Implement Windows Credential Manager Service","Implement a service to abstract interaction with the Windows Credential Manager for securely storing and retrieving secrets.","Task","Sprint Backlog","Critical","dev3@company.com","product.owner@company.com","2024-11-12","8","3","security,infrastructure,windows","Sprint 1","Establish foundational architecture, data persistence, and core security primitives.","System Administration & Auditing","EPIC-004","DICOM Management & Print System","US-016","","C#,P/Invoke,Windows API","High","High","Service can write a secret to the Credential Manager. Service can read a secret. Secrets are associated with the correct application/user context.","Code reviewed; Integration tests passing; Security review complete.","2024-10-26T09:00:00Z","2024-10-26T09:00:00Z","2024-11-04","2024-11-15","100%","","","Integration tests that write/read from the local Credential Manager.","Requires documentation on how to provision credentials in production.","Removes secrets from configuration files, drastically improving security posture."
"TASK-US-001-01","Implement BCrypt Password Hashing Service","Create a reusable service `IPasswordHasher` that encapsulates password hashing and verification using the BCrypt.Net.Next library.","Task","Sprint Backlog","Critical","dev1@company.com","product.owner@company.com","2024-11-18","6","1","security,backend,auth","Sprint 2","Implement secure user login, role-based access control, and data-at-rest encryption.","User Authentication & Authorization","EPIC-003","DICOM Management & Print System","US-001","TASK-US-010-02","Cryptography,BCrypt,C#","Medium","High","A HashPassword method returns a valid BCrypt hash. A VerifyPassword method returns true for correct pairs and false for incorrect pairs.","Code reviewed; Unit tests passing with 100% coverage; Security review approved.","2024-10-26T09:00:00Z","2024-10-26T09:00:00Z","2024-11-18","2024-11-29","100%","","","Comprehensive unit testing of hashing and verification logic.","","Provides the fundamental security mechanism for user passwords."
"TASK-US-001-03","Develop Authentication Service and Login Workflow","Create an `IAuthenticationService` that orchestrates the login process using `IUserRepository` and `IPasswordHasher`.","Task","Sprint Backlog","Critical","dev1@company.com","product.owner@company.com","2024-11-20","12","2","backend,auth,business-logic","Sprint 2","Implement secure user login, role-based access control, and data-at-rest encryption.","User Authentication & Authorization","EPIC-003","DICOM Management & Print System","US-001","TASK-US-001-01,TASK-US-013-05","C#,Dependency Injection","Medium","Medium","Service handles valid login, non-existent users, incorrect passwords, and disabled accounts correctly.","Code reviewed; Unit tests for all logic paths passing.","2024-10-26T09:00:00Z","2024-10-26T09:00:00Z","2024-11-18","2024-11-29","100%","","","Unit testing with mocked dependencies.","","Contains the core business logic for user authentication."
"TASK-US-014-02","Implement EF Core ValueConverter for pgcrypto","Create a custom EF Core `ValueConverter` that uses raw SQL DML (`pgp_sym_encrypt`, `pgp_sym_decrypt`) to handle column encryption.","Task","Sprint Backlog","Critical","dev3@company.com","product.owner@company.com","2024-11-22","14","5","security,database,ef-core,hipaa","Sprint 2","Implement secure user login, role-based access control, and data-at-rest encryption.","Data Persistence & Management","EPIC-002","DICOM Management & Print System","US-014","TASK-US-013-03,TASK-US-016-02","EF Core,C#,SQL,pgcrypto","Critical","High","The ValueConverter correctly calls pgcrypto functions. The encryption key is securely passed to the converter.","Code reviewed; Integration tests passing; Security review of key handling approved.","2024-10-26T09:00:00Z","2024-10-26T09:00:00Z","2024-11-18","2024-11-29","100%","Security Lead for design and code review.","pgcrypto extension enabled on PostgreSQL.","Integration test to verify data is encrypted at rest and decrypted in the application.","Requires pgcrypto extension to be enabled on production database.","Implements the core mechanism for HIPAA-compliant data-at-rest encryption."
"TASK-US-002-02","Implement Authorization Service and Policies","Implement a central authorization service that uses policies (e.g., 'AdminOnly') to check if the current user has the required role for an action.","Task","Sprint Backlog","Critical","dev2@company.com","product.owner@company.com","2024-11-25","8","2","security,backend,rbac,auth","Sprint 2","Implement secure user login, role-based access control, and data-at-rest encryption.","User Authentication & Authorization","EPIC-003","DICOM Management & Print System","US-002","TASK-US-001-04","C#,.NET Authorization","Medium","Medium","An 'AdminOnly' policy correctly validates users with the 'Administrator' role. A 'Technician' policy validates both Technicians and Administrators.","Code reviewed; Unit tests for policies passing.","2024-10-26T09:00:00Z","2024-10-26T09:00:00Z","2024-11-18","2024-11-29","100%","","","Unit tests mocking different user roles.","","Provides the reusable mechanism for enforcing role-based access control throughout the application."
"TASK-US-015-01","Implement Centralized Audit Logging Service","Create a service to abstract the creation of audit log entries, ensuring they are saved to the database within a transaction.","Task","Sprint Backlog","High","dev1@company.com","product.owner@company.com","2024-11-27","8","2","auditing,backend,hipaa","Sprint 2","Implement secure user login, role-based access control, and data-at-rest encryption.","System Administration & Auditing","EPIC-004","DICOM Management & Print System","US-015","TASK-US-013-05","C#,EF Core","Medium","Medium","Service provides a method like `LogAuditEventAsync`. The method saves an `AuditLog` entity to the database.","Code reviewed; Integration tests confirm logs are saved.","2024-10-26T09:00:00Z","2024-10-26T09:00:00Z","2024-11-18","2024-11-29","100%","","","Integration tests to confirm atomicity with other DB operations.","","Provides a reliable and consistent way to record all auditable events."
"TASK-US-003-01","Implement Application-Wide User Activity Monitor","Implement a low-level hook to monitor global mouse and keyboard input to detect user activity for the session lock timer.","Task","Sprint Backlog","Critical","dev2@company.com","product.owner@company.com","2024-12-04","16","5","security,frontend,wpf,hipaa","Sprint 3","Deliver advanced security features and initial DICOM C-STORE functionality.","User Authentication & Authorization","EPIC-003","DICOM Management & Print System","US-003","TASK-US-001-04","WPF,P/Invoke,C#","High","High","Service correctly detects user activity (mouse move, click, key press). The activity detection has negligible performance impact.","Code reviewed; Performance testing confirms low CPU usage.","2024-10-26T09:00:00Z","2024-10-26T09:00:00Z","2024-12-02","2024-12-13","100%","","","Manual and performance testing.","","Provides the core mechanism for detecting user inactivity for security purposes."
"TASK-US-018-01","Implement fo-dicom C-STORE SCP Service","Using fo-dicom, create a `DicomServer` implementation that listens for C-STORE requests, receives DICOM files, and saves them to a temporary location.","Task","Sprint Backlog","Critical","dev3@company.com","product.owner@company.com","2024-12-06","16","5","dicom,backend,integration","Sprint 3","Deliver advanced security features and initial DICOM C-STORE functionality.","DICOM Functionality","EPIC-005","DICOM Management & Print System","US-018","TASK-US-010-03","fo-dicom,DICOM,C#","High","High","The Windows Service can start a DICOM listener on a configurable port. The service successfully receives and saves files from a C-STORE SCU.","Code reviewed; Integration test with a DICOM toolkit (e.g., DCMTK) passes.","2024-10-26T09:00:00Z","2024-10-26T09:00:00Z","2024-12-02","2024-12-13","100%","","","Integration testing with a DICOM C-STORE SCU simulator.","Requires firewall rules to be configured for the listener port.","Implements the primary data ingestion point for medical images."
"TASK-US-018-02","Integrate SCP with RabbitMQ Publisher","Upon successful receipt of a study, the C-STORE SCP will parse the metadata and publish a `ProcessDicomStoreCommand` message to RabbitMQ.","Task","Sprint Backlog","Critical","dev3@company.com","product.owner@company.com","2024-12-09","8","3","dicom,rabbitmq,backend,integration","Sprint 3","Deliver advanced security features and initial DICOM C-STORE functionality.","DICOM Functionality","EPIC-005","DICOM Management & Print System","US-018","TASK-US-018-01,TASK-US-012-03","fo-dicom,RabbitMQ.Client,C#","Medium","Medium","A message appears in the correct RabbitMQ queue after a C-STORE operation completes. The message payload contains the correct DICOM metadata.","Code reviewed; Integration test passes; Message verified in RabbitMQ Management UI.","2024-10-26T09:00:00Z","2024-10-26T09:00:00Z","2024-12-02","2024-12-13","100%","","","End-to-end integration test from C-STORE to RabbitMQ.","","Decouples DICOM ingestion from database persistence, ensuring high throughput."
"TASK-US-017-01","Create 'Password Policy' Admin UI","Create a WPF view and viewmodel for administrators to configure password policy settings (length, complexity, etc.).","Task","Sprint Backlog","Medium","dev2@company.com","product.owner@company.com","2024-12-11","6","2","frontend,wpf,admin,security","Sprint 3","Deliver advanced security features and initial DICOM C-STORE functionality.","System Administration & Auditing","EPIC-004","DICOM Management & Print System","US-017","US-002","WPF,XAML,MVVM","Low","Low","UI provides controls for all configurable password policy parameters. Save button persists the settings.","Code reviewed; UI approved by product owner.","2024-10-26T09:00:00Z","2024-10-26T09:00:00Z","2024-12-02","2024-12-13","100%","","","Manual UI testing.","","Allows administrators to enforce organizational security standards."