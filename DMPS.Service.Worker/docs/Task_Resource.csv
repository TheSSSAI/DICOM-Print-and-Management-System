"task_id","task_name","primary_skill","secondary_skills","complexity_level","estimated_hours","required_experience","productivity_factor","adjusted_hours","team_size","collaboration_required","dependencies","critical_path","skill_learning_curve","ramp_up_hours","resource_notes","alternative_approach","risk_factors","mitigation_strategy","quality_overhead","review_hours","documentation_hours","testing_coordination","integration_overhead"
"TASK-US-013-03","Implement DbContext and Fluent API Configurations","EF Core Fluent API","PostgreSQL,C#,Database Architecture","High","12","Senior","1.2","14.4","1","true","TASK-US-013-01","true","Low","","Requires deep understanding of EF Core's Fluent API to correctly model all relationships and constraints from the ERD.","Use Data Annotations for simple configurations, but Fluent API is required for complex mappings and indexes.","Incorrect configuration can lead to performance issues or data integrity problems.","Code review by Tech Lead; validation via automated generation of EF Core migration.","1.8","1.2","0.6","2.4","1"
"TASK-US-012-02","Implement Resilient RabbitMQ Connection Service","RabbitMQ.Client","C#,Multithreading,Resiliency Patterns","High","10.3","Senior","1.2","12.36","1","","TASK-US-010-03","true","Medium","4","Handles connection lifecycle, including automatic reconnection logic, which is critical for system stability.","Use a third-party library like EasyNetQ, but this adds another dependency.","Logic for handling network partitions and broker failures is complex and hard to test.","Use Testcontainers for integration tests that simulate RabbitMQ broker failures and restarts.","1.55","1","0.55","3","2"
"TASK-US-014-02","Implement EF Core ValueConverter for pgcrypto","EF Core","pgcrypto,SQL,Security,C#","Critical","14","Senior","1.3","18.2","1","true","TASK-US-013-03,TASK-US-016-02","true","High","8","Core HIPAA compliance feature. Requires expertise in both EF Core internals and PostgreSQL's pgcrypto functions.","Application-level encryption, but this is less secure and more complex to manage.","High risk of incorrect implementation leading to data breaches or data loss (RISK-002, RISK-005). Key management is critical.","Mandatory security design and code review by Security Lead. Extensive integration testing to verify data is encrypted at rest.","4.2","2.8","1.4","5","3"
"TASK-US-018-01","Implement fo-dicom C-STORE SCP Service","fo-dicom","DICOM,C#,Networking","High","16","Senior","1.2","19.2","1","","TASK-US-010-03","","High","8","Requires specialized domain knowledge of the DICOM C-STORE protocol.","Use a commercial DICOM toolkit, but this would incur licensing costs.","High risk of interoperability issues with different modality vendors (RISK-004).","Integration testing with multiple DICOM toolkits (e.g., DCMTK) to simulate different C-STORE SCUs.","2.4","1.6","0.8","4","4"