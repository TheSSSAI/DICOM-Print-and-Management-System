"sprint_number","sprint_name","sprint_goal","start_date","end_date","duration_days","total_story_points","estimated_hours","team_capacity_hours","capacity_utilization","task_count","epic_coverage","key_deliverables","demo_objectives","success_criteria","risk_factors","mitigation_strategies","dependencies_resolved","team_members","external_dependencies","integration_windows","review_schedule","retrospective_date","burndown_target"
"1","Sprint 1: Foundational Architecture & Data","Establish the application's core architecture, data persistence, and core security primitives.","2024-11-04","2024-11-15","10","34","169","176","96%","22","Core Architecture & System Setup,Data Persistence & Management,System Administration & Auditing","Scaffolded .NET Solution, Configured DI Hosts, Complete DB Schema via EF Core Migrations, Resilient RabbitMQ Infrastructure, PHI-Redacted Logging Framework, Secure Credential Storage via Win Credential Manager.","Show the solution structure. Demonstrate a log message being written and redacted. Show the generated database schema. Demonstrate RabbitMQ connection recovery. Show a secret being retrieved from Credential Manager.","All foundational frameworks (DI, EF Core, RabbitMQ, Serilog) are implemented and unit/integration tested. Database schema is finalized and applied. Secure credential storage is functional.","Complexity of resilient RabbitMQ connection logic. Ensuring secure key management for pgcrypto is designed correctly. High number of foundational, interdependent tasks.","Prioritize integration testing for RabbitMQ. Conduct thorough design review for all security-related components. Pair programming on critical path tasks.","true","dev1@company.com,dev2@company.com,dev3@company.com,qa1@company.com","Availability of local PostgreSQL and RabbitMQ instances for development.","Continuous integration via CI server.","Sprint Review on 2024-11-15 at 2 PM","2024-11-15","Complete 50% of hours by day 5."
"2","Sprint 2: Authentication & Core Admin","Implement secure user login, role-based access control, data-at-rest encryption, and core user management.","2024-11-18","2024-11-29","10","34","173.3","176","98%","16","User Authentication & Authorization,Data Persistence & Management,System Administration & Auditing","Functional User Login screen, Role-Based Access Control service, Column-level encryption for PHI in the database, User creation UI/service, System Audit Trail viewer.","Log in as an Admin. Log in as a Technician and show restricted UI. Create a new user. View the user creation event in the audit trail. Show encrypted data in the database using pgAdmin.","User authentication is fully functional and secure. PHI data is confirmed to be encrypted at rest. RBAC correctly restricts access for Technician role. All demonstrated actions are recorded in the audit trail.","High risk in implementing pgcrypto integration correctly (RISK-002, RISK-005). Complexity in ensuring RBAC is enforced consistently.","Allocate dedicated QA time for security testing of encryption and RBAC. Mandate security code reviews for all auth and encryption code. Use Testcontainers for reliable encryption integration tests.","true","dev1@company.com,dev2@company.com,dev3@company.com,qa1@company.com","All dependencies on Sprint 1 deliverables.","Integration testing of login, RBAC, and auditing flow mid-sprint.","Sprint Review on 2024-11-29 at 2 PM","2024-11-29","Linear burndown with all critical auth features done by day 7."
"3","Sprint 3: Advanced Security & DICOM Ingestion","Deliver advanced security features (session lock, password policy) and initial DICOM C-STORE functionality.","2024-12-02","2024-12-13","10","20","111.7","176","63%","10","User Authentication & Authorization,System Administration & Auditing,DICOM Functionality","Automatic session lock after 15 mins of inactivity. Forced password change workflow. Configurable password policy UI. Functional DICOM C-STORE SCP listener.","Show application locking automatically. Unlock the session. Show the password policy admin UI. Use a DICOM toolkit to send a study and show it being received and queued in RabbitMQ.","Session lock feature is reliable and cannot be bypassed. DICOM C-STORE SCP successfully receives studies from a standard toolkit. Lighter capacity utilization allows for bug fixing and stabilization.","High complexity of low-level user activity monitoring for session lock. High risk of interoperability issues with DICOM C-STORE (RISK-004).","Prototype activity monitor early. Use standard DICOM toolkits (DCMTK) for integration testing. The lighter sprint load provides a buffer for tackling these complex features.","true","dev1@company.com,dev2@company.com,dev3@company.com,qa1@company.com","Availability of DICOM testing tools (DCMTK, etc.).","Dedicated DICOM integration testing window in the second week.","Sprint Review on 2024-12-13 at 2 PM","2024-12-13","Complete security features in the first week to focus on DICOM integration in the second."