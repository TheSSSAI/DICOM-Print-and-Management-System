risk_id,risk_category,risk_description,probability,impact,risk_score,priority_level,affected_tasks,root_cause,mitigation_strategy,contingency_plan,monitoring_trigger,owner,due_date,status
RISK-TEC-001,Technical,"High complexity of the custom GPU-accelerated rendering pipeline using DirectX interop (Vortice.Windows) may lead to performance bottlenecks, visual artifacts, or driver compatibility issues across different hardware.","4","5","20","High","WI-015, WI-016","Reliance on a low-level graphics API for a core feature, which is inherently complex and sensitive to hardware/driver variations.","1. Develop a dedicated proof-of-concept (PoC) early in the project to validate the rendering approach on minimum and recommended hardware. 2. Assign a developer with demonstrated experience in DirectX or low-level graphics programming. 3. Create a comprehensive suite of automated performance tests and visual regression tests.","If the PoC fails to meet performance targets, investigate alternative rendering engines (e.g., SkiaSharp, a commercial WPF control) or implement a fallback software rendering path for unsupported hardware.","Performance benchmarks during development fall below 30 FPS during standard interactions (WW/WL, pan, zoom). Visual glitches are reported on more than one type of GPU during QA testing.",Tech Lead,TBD,Identified
RISK-TEC-002,Technical,"The decoupled DICOM ingestion pipeline could be overwhelmed if the C-STORE SCP (producer) ingests data faster than the database consumer can process it, leading to a perpetually growing RabbitMQ queue and delayed data availability.","4","4","16","High","WI-012, WI-013","A potential mismatch between high-speed network I/O (DICOM reception) and slower, transactional database I/O (metadata persistence).","1. Implement consumer scaling logic (e.g., allow for a configurable number of concurrent consumers). 2. Implement backpressure monitoring on the RabbitMQ queue. 3. Vigorously load-test the ingestion pipeline to identify the sustainable throughput.","Implement a circuit breaker on the C-STORE SCP listener. If the queue size exceeds a critical threshold, the SCP will temporarily start responding with a 'Refused: Out of Resources' status to new association requests, throttling the input.","The message count in the primary DICOM ingestion queue consistently increases over a 1-hour period during load testing or production monitoring.",Backend Lead,TBD,Identified
RISK-TEC-003,Technical,"Incorrect implementation of data-at-rest encryption using pgcrypto and EF Core could lead to a critical security vulnerability, data corruption, or irreversible data loss if encryption keys are mismanaged.","3","5","15","High","WI-010","Complexity of integrating application-level logic with database-level cryptographic functions and managing encryption keys securely.","1. Create detailed developer documentation for the encryption/decryption process. 2. Implement a dedicated integration test suite that writes, reads back, and verifies data integrity for all encrypted columns. 3. Conduct a peer code review specifically focused on the encryption converters and DbContext configuration.","If the encrypted data cannot be decrypted or is corrupted, revert to a database backup taken before the feature was deployed. Disable the encryption feature and perform a root cause analysis before re-deploying.","Integration tests for encrypted columns fail. Manual inspection of the database shows plaintext PHI data in columns that should be encrypted.",Security Champion,TBD,Identified
RISK-OPR-001,Operational,"The MSIX installer's prerequisite check for external services (PostgreSQL, RabbitMQ) could be unreliable across different Windows environments and network configurations, leading to failed installations and a high support burden.","4","4","16","High","WI-024","Reliance on network connectivity and correct user-provided credentials during the installation phase, which is an inherently fragile process.","1. Develop the prerequisite check as a standalone command-line utility first for easier testing. 2. Provide a manual override option in the installer for advanced users. 3. Create very clear documentation and troubleshooting steps for connection errors in the Deployment Guide.","Provide a separate configuration utility that can be run post-installation to test and set the connection strings, bypassing the installer check. Update the service configuration files manually.","The installation fails the prerequisite check step, but manual connection tests from the same machine using standard tools (e.g., psql, RabbitMQ admin) succeed.",DevOps Engineer,TBD,Identified
RISK-EXT-001,External,"The project's hard dependency on pre-installed and configured instances of PostgreSQL 16 and RabbitMQ places a significant configuration burden on the end-user/customer, increasing the likelihood of deployment failures due to misconfiguration.","5","4","20","High","WI-024, EPIC-001","The application offloads critical infrastructure setup to the customer, which is an uncontrolled external factor.","1. Provide a comprehensive, step-by-step Deployment Guide with recommended configurations for both PostgreSQL and RabbitMQ. 2. Develop a standalone pre-flight check tool that customers can run to validate their environment before attempting installation. 3. Clearly state the exact required versions in all documentation.","Offer paid professional services for installation and configuration. Develop a 'troubleshooting' section in the Admin Guide that details common PostgreSQL and RabbitMQ configuration errors.","A high volume of support tickets are related to initial setup and connectivity issues with PostgreSQL or RabbitMQ post-launch.",Product Owner,TBD,Identified
RISK-RSC-001,Resource,"A key person dependency exists on the developer assigned to the GPU rendering task (WI-015) due to the niche skills required for DirectX programming, posing a significant risk to the project timeline if that person becomes unavailable.","3","5","15","High","WI-015","The 'Critical' complexity of the task requires specialized skills that may not be readily available among other team members.","1. Mandate pair programming for the most complex parts of the rendering pipeline development. 2. Require the lead developer to create thorough documentation and code comments for the DirectX interop logic. 3. Identify a secondary developer who can act as a backup and allocate them time to study the PoC code.","If the primary developer is lost, engage a short-term contractor specializing in graphics programming to assist the backup developer and review the existing code. Extend the project timeline for that epic.","The primary graphics developer is on unplanned leave for more than 5 consecutive workdays.",Project Manager,TBD,Identified
RISK-QLT-001,Quality,"The creation and parsing of DICOM GSPS (Grayscale Softcopy Presentation State) objects for annotations is complex and error-prone. An incorrect implementation could lead to annotations not being saved, displayed correctly, or being non-compliant with the DICOM standard, making them unusable by other systems.","4","3","12","Medium","WI-017","The DICOM standard for GSPS is highly detailed and complex, leaving significant room for implementation error.","1. Use a known-good, third-party DICOM viewer to validate the GSPS objects created by the application. 2. Create a test suite that includes saving and reloading various complex annotations (multiple layers, different types). 3. Source sample DICOM studies that already contain GSPS objects to test the parsing and display logic.","If GSPS objects are found to be non-compliant, switch to a simpler, proprietary annotation format for the short term while the GSPS implementation is fixed. This would be clearly communicated as a temporary limitation.","QA testing reveals that annotations are not displayed correctly after being saved and reloaded. GSPS files created by the application fail validation in a third-party DICOM tool.",QA Lead,TBD,Identified
RISK-SEC-001,Security,"The transactional integrity between a business operation (e.g., user creation) and its corresponding audit log entry might fail, leading to an auditable event occurring without a record, which is a major HIPAA compliance violation.","3","5","15","High","WI-009, WI-021","The need to wrap disparate database operations (e.g., updating 'Users' table, inserting into 'AuditLog' table) into a single atomic transaction, which can be missed by developers.","1. Enforce a policy where all service methods that perform auditable actions must accept a DbContext transaction object. 2. Create a specific code review checklist item: ""Does this change correctly wrap the business logic and audit log creation in a single transaction?"". 3. Write integration tests that attempt to force a failure after the primary action but before the audit log is written, and assert that the primary action is rolled back.","Perform a manual audit log reconciliation against database records to identify any discrepancies. Manually create missing audit log entries based on database timestamps and other evidence. Trigger a full security review of the codebase.","A periodic automated check comparing recent user table changes to audit log entries finds a mismatch.",Security Champion,TBD,Identified
RISK-TIM-001,Timeline,"The cumulative effect of multiple 'High' and 'Critical' complexity tasks (WI-015, WI-012, WI-013, WI-017, WI-018, WI-020, WI-021, WI-023, WI-024) is likely to cause significant delays, as initial time estimates for such complex work are often optimistic.","4","4","16","High","All 'High'/'Critical' WIs","Underestimation of effort for highly complex and specialized technical tasks.","1. Time-box proof-of-concept spikes for the highest-risk items (e.g., WI-015) to get more accurate estimates. 2. Break down 'High' complexity work items into smaller, more manageable sub-tasks. 3. Build a buffer into the schedule for each epic containing high-complexity work.","De-scope non-critical features from the initial release to protect the launch date. Re-prioritize the backlog to focus only on the core MVP functionality and move 'nice-to-have' features to a phase 2.","Velocity tracking shows the team is completing less than 70% of the planned story points for two consecutive sprints, specifically due to overruns on high-complexity tasks.",Project Manager,TBD,Identified
RISK-TEC-004,Technical,"The use of Named Pipes for synchronous IPC, while efficient, can be brittle. A deadlock or an unhandled exception in the pipe server (Windows Service) could cause the client application to hang when checking service status.","3","3","9","Medium","WI-004, WI-019, WI-023","Improper implementation of timeouts and exception handling in synchronous, blocking communication channels.","1. Implement aggressive, short timeouts on all Named Pipe client calls. 2. Wrap all client-side pipe communication in a try-catch block that specifically handles `TimeoutException`. 3. Ensure the server-side pipe handling is executed on a background thread so it cannot lock up the main service loop.","If the client hangs, the user will have to force-quit. The application logic should treat a timeout exception as equivalent to 'service is unavailable' and disable dependent features (like the 'Print' button) gracefully.","During testing, the WPF client UI becomes unresponsive after attempting to check the service status via the Named Pipe.",Tech Lead,TBD,Identified
RISK-OPR-002,Operational,"The system's reliance on the Windows Credential Manager for storing secrets can fail if the Windows Service's user account (e.g., Local System, Network Service) does not have the necessary permissions to access the credential store, leading to a service startup failure.","3","4","12","Medium","WI-011","Lack of permissions for the service's runtime account to access OS-level security features.","1. The Deployment Guide must explicitly state the required permissions or the specific user account the service needs to run as. 2. During the service startup sequence, perform a check for credential access and write a clear, detailed error to the Windows Event Log if it fails.","Revert to an encrypted configuration file for storing secrets as a fallback. This is less secure but would allow the service to start. The issue would be escalated for manual permission fixes on the host machine.","The 'DICOM Service' fails to start, and the Windows Event Log contains an 'Access Denied' error related to the Credential Manager.",DevOps Engineer,TBD,Identified