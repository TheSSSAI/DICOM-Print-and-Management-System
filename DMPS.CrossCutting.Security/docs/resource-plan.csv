task_id,task_name,primary_skill,secondary_skill,complexity_level,estimated_hours,required_experience,team_size,dependencies,critical_path,resource_notes,alternative_approach
EPIC-001,"EPIC-001: Core Application Architecture & Setup",Backend Development,DevOps,Critical,146.1,Lead,2,"",Yes,"Requires a Tech Lead with strong .NET architecture skills and a DevOps engineer for CI/CD setup. Foundational epic for the entire project.",N/A
TS-001,"TS-001: Establish Solution Foundation and IPC",Backend Development,DevOps,High,82.5,Senior,1,EPIC-001,Yes,"Core architectural work. Requires strong experience with .NET 8, microservice patterns (even if monolithic), and messaging systems.",Use a simpler IPC mechanism like gRPC if RabbitMQ expertise is unavailable, but this would deviate from requirements.
TASK-001,"TASK-001: [WI-001] Scaffold .NET 8 Solution and Project Structure",Backend Development,DevOps,Low,4.2,Mid,1,TS-001,Yes,"Straightforward task, but critical as it's the first step for all code. Must adhere to clean architecture principles.",Use a pre-built .NET solution template to accelerate setup.
TASK-002,"TASK-002: [WI-002] Configure Dependency Injection in WPF Client",Frontend Development,Backend Development,Low,5,Mid,1,"TS-001,TASK-001",No,"Requires understanding of .NET Generic Host in a WPF context. Standard but important setup.",N/A
TASK-003,"TASK-003: [WI-002] Configure Dependency Injection in Windows Service",Backend Development,DevOps,Low,4,Mid,1,"TS-001,TASK-001",No,"Standard setup for a .NET Worker Service. Should be a quick task for a mid-level developer.",N/A
TASK-004,"TASK-004: [WI-003] Implement RabbitMQ Connection Management",Backend Development,DevOps,Medium,6.3,Mid,1,"TS-001,TASK-002,TASK-003",Yes,"Requires knowledge of RabbitMQ client library and resiliency patterns like connection retries.",Use a higher-level library like MassTransit or NServiceBus to abstract away connection management, but adds another dependency.
TASK-005,"TASK-005: [WI-003] Develop Generic RabbitMQ Message Producer Service",Backend Development,DevOps,Medium,8.2,Mid,1,"TS-001,TASK-004",Yes,"Creating a generic producer is key for reusability. Needs thorough unit testing.",N/A
TASK-006,"TASK-006: [WI-003] Implement RabbitMQ Queue Declaration and DLX Configuration",Backend Development,DevOps,High,9.3,Senior,1,"TS-001,TASK-004",Yes,"Requires deep understanding of RabbitMQ topology and error handling patterns (DLX/DLQ). Critical for system reliability.",Perform queue declaration manually via RabbitMQ management UI for simpler setups, but this is not scalable or repeatable.
TASK-007,"TASK-007: [WI-003] Develop Generic RabbitMQ Consumer Hosted Service",Backend Development,DevOps,High,12,Senior,1,"TS-001,TASK-004",Yes,"Architecturally important base class. Must handle threading, message lifecycle (ack/nack), and error handling robustly.",Instead of a generic base class, implement consumers individually. This is faster initially but leads to code duplication.
TASK-008,"TASK-008: [WI-004] Implement Named Pipe Server in Windows Service",Backend Development,DevOps,Medium,8.2,Mid,1,"TS-001,TASK-003",Yes,"Requires understanding of multithreading and System.IO.Pipes. Potential for deadlocks if not implemented carefully (RISK-TEC-004).","Use a lightweight HTTP server (e.g., Kestrel) within the service for status checks, which is more standardized but has higher overhead."
TASK-009,"TASK-009: [WI-004] Implement Named Pipe Client in Infrastructure Library",Backend Development,Frontend Development,Medium,6.2,Mid,1,"TS-001,TASK-008",Yes,"Must include robust timeout handling to prevent the client UI from freezing. Critical for UI responsiveness.",N/A
TASK-010,"TASK-010: [WI-005] Define User, Role, PasswordHistory EF Core Entities",Backend Development,Data Engineering,Low,4.2,Mid,1,"US-101,TASK-001",Yes,"Defines the core security schema. Requires understanding of EF Core conventions and data annotations.",Use a database-first approach if a schema already exists.
TASK-011,"TASK-011: [WI-005] Configure AppDbContext and Generate Initial Migration",Backend Development,Data Engineering,Medium,5.2,Mid,1,"US-101,TASK-010",Yes,"Critical step for database setup. Requires attention to detail for configuring relationships and unique constraints.",Use a tool like EF Core Power Tools to reverse-engineer an existing context and entities.
TASK-020,"TASK-020: [WI-009] Define AuditLog Entity and Service Interface",Backend Development,Data Engineering,Low,4.2,Mid,1,"US-107,TASK-011",Yes,"Design of the AuditLog table is important for future querying performance. Use of JSONB for details provides flexibility.",Log to a flat file or a separate logging service (like Seq) instead of the primary database to reduce DB load.
TASK-024,"TASK-024: [WI-010] Research and PoC for EF Core with pgcrypto",Backend Development,Data Engineering,High,6.3,Senior,1,"US-108,TASK-011",Yes,"High-risk security task (RISK-TEC-003). Requires a developer comfortable with both EF Core internals and database-level encryption.",Use transparent data encryption (TDE) at the filesystem/disk level if pgcrypto proves too complex, but this offers less granular protection.
TASK-035,"TASK-035: [WI-015] PoC: DirectX Interop with Vortice.Windows in WPF",Frontend Development,Backend Development,Critical,12,Lead,1,US-111,Yes,"Highest technical risk task (RISK-TEC-001, RISK-RSC-001). Requires a specialized graphics developer with DirectX expertise.","Use a commercial WPF DICOM viewer control, or a higher-level 2D graphics library like SkiaSharp, accepting a potential performance hit."
TASK-068,"TASK-068: [WI-022] Create PACS Configuration Data Model and DB Schema",Backend Development,Data Engineering,Low,3,Mid,1,"US-117,TASK-011",No,"Standard EF Core entity and migration task.",Store configuration in a JSON file instead of the database for simpler, single-node deployments.
TASK-071,"TASK-071: [WI-022] Create Auto-Routing Rule Data Model and DB Schema",Backend Development,Data Engineering,Low,3,Mid,1,"US-118,TASK-068",No,"JSONB is a good choice for the criteria field to allow for flexible rule definitions.",Use a simple, hardcoded routing logic in the service if only a few routing rules are ever expected.
TS-002,"TS-002: Automate Build and Vulnerability Scanning",DevOps,Quality Assurance,High,15.9,Senior,1,EPIC-010,Yes,"Foundational for code quality and security. Requires a dedicated DevOps engineer.",Manually build and test, which is not scalable and is highly error-prone.
TASK-082,"TASK-082: [WI-025] Set up Basic CI Pipeline for Build and Test",DevOps,Quality Assurance,Medium,6,Mid,1,"TS-002,TASK-001",Yes,"Standard CI setup. Requires familiarity with the chosen CI/CD platform (e.g., GitHub Actions, Azure DevOps).",Use local build scripts on developer machines. Not a viable long-term strategy.
TASK-083,"TASK-083: [WI-025] Integrate OWASP Dependency-Check Scan",DevOps,Backend Development,High,8.2,Senior,1,"TS-002,TASK-082",Yes,"Security-critical task. Requires experience with security scanning tools and interpreting their results to avoid false positives.",Rely on manual library audits, which are infrequent and likely to miss new vulnerabilities.
EPIC-002,"EPIC-002: Security & Compliance",Backend Development,Frontend Development,Critical,141.2,Lead,2,"",Yes,"HIPAA compliance is non-negotiable. Requires a Security Champion or a Lead with a strong security focus to oversee all work.",N/A
US-101,"US-101: Log In to the Application",Frontend Development,Backend Development,Medium,45.2,Mid,2,"EPIC-002,TS-001",Yes,"Standard but critical feature. Involves both frontend (UI) and backend (authentication logic) work.",Use a third-party identity provider (e.g., Auth0, Azure AD B2C) to handle authentication.
TASK-012,"TASK-012: [WI-006] Implement AuthenticationService with BCrypt",Backend Development,Quality Assurance,High,7.2,Senior,1,"US-101,TASK-011",Yes,"Security-critical. Implementation of BCrypt must be correct. Needs thorough testing.",Use a less secure hashing algorithm, which is not recommended and would violate requirements.
TASK-013,"TASK-013: [WI-007] Develop LoginView.xaml Layout",Frontend Development,Design,Low,5.2,Mid,1,"US-101,TASK-002",No,"Standard WPF/XAML work. Requires familiarity with the chosen UI toolkit (Material Design).",N/A
TASK-014,"TASK-014: [WI-007] Implement LoginViewModel Logic",Frontend Development,Backend Development,Medium,8.3,Mid,1,"US-101,TASK-012,TASK-013",No,"Standard MVVM implementation. Involves data binding, commands, and service calls.",Use code-behind instead of MVVM, which leads to less maintainable code.
TASK-015,"TASK-015: [WI-007] Implement Main Window Navigation on Successful Login",Frontend Development,Backend Development,Low,4.2,Mid,1,"US-101,TASK-014",No,"Requires management of the application's window lifecycle.",N/A
TASK-016,"TASK-016: Write Integration Tests for Authentication Flow",Quality Assurance,Backend Development,High,10.3,Senior,1,"US-101,TASK-012",Yes,"Critical for verifying security logic. Using Testcontainers is recommended to ensure a clean database for each test run.",Rely solely on manual testing, which is error-prone for security features.
US-102,"US-102: Access Features Based on Role",Frontend Development,Backend Development,Medium,32.8,Mid,2,"EPIC-002,US-101",Yes,"Cross-cutting concern affecting many parts of the application. Requires a clean, centralized authorization mechanism.",Implement authorization checks with simple `if(user.Role == 'Admin')` statements scattered throughout the code, which is hard to maintain.
TASK-017,"TASK-017: [WI-008] Implement a Current User Session Service",Backend Development,Frontend Development,Low,4.2,Mid,1,"US-102,TASK-012",Yes,"A simple singleton service to hold session state. Foundational for all authorization checks.",Pass user object as a parameter to every method that needs it, which is cumbersome and inefficient.
TASK-018,"TASK-018: [WI-008] Implement Authorization Logic in ViewModels",Frontend Development,Backend Development,Medium,9.3,Mid,1,"US-102,TASK-017",No,"Requires consistent application of visibility/enabling bindings across the UI.",N/A
TASK-019,"TASK-019: [WI-008] Implement Backend Authorization Checks",Backend Development,Quality Assurance,Medium,6,Mid,1,"US-102,TASK-017",Yes,"Crucial for security to prevent bypassing the UI. Best implemented with attributes or middleware if using an API framework.",Rely only on hiding UI elements, which is insecure and can be bypassed.
US-107,"US-107: View and Export Audit Trail",Frontend Development,Backend Development,Medium,28.6,Mid,2,"EPIC-002,US-102",No,"Requires both backend (querying data) and frontend (displaying data). The export feature can be complex depending on data size.",Export raw data directly from the database, requiring an admin to have DB access.
TASK-021,"TASK-021: [WI-009] Implement AuditService for Event Persistence",Backend Development,Data Engineering,Medium,5,Mid,1,"US-107,TASK-20",Yes,"The service must be thread-safe and efficient. Key security feature (RISK-SEC-001).",N/A
TASK-022,"TASK-022: [WI-009] Develop Audit Trail Viewer UI",Frontend Development,Design,Medium,9.3,Mid,1,"US-107,TASK-21",No,"A data-heavy UI. Performance of the DataGrid with potentially large datasets should be considered.",Use a simpler UI with basic filtering, deferring advanced features.
TASK-023,"TASK-023: [WI-009] Implement Filtering and Export-to-CSV Logic",Frontend Development,Backend Development,Medium,8.2,Mid,1,"US-107,TASK-22",No,"Filtering logic should be translated to efficient database queries (LINQ to SQL).",Perform filtering in-memory on the client after fetching all data, which is inefficient.
US-108,"US-108: Ensure Data is Securely Stored",Backend Development,DevOps,Critical,35.7,Senior,1,"EPIC-002,US-101,TASK-024",Yes,"Highly critical for HIPAA compliance. Involves complex database integration and OS-level security features.",Rely on full-disk encryption only, which does not protect data if the database itself is compromised.
TASK-025,"TASK-025: [WI-010] Implement EF Core Value Converters for pgcrypto",Backend Development,Data Engineering,Critical,10.3,Senior,1,"US-108,TASK-024",Yes,"High-risk implementation (RISK-TEC-003). Requires meticulous testing to prevent data corruption.",Encrypt/decrypt data manually in the application layer before saving/after reading, which is less efficient and more error-prone.
TASK-026,"TASK-026: [WI-011] Implement Windows Credential Manager Service",Backend Development,DevOps,High,8.2,Senior,1,"US-108,TASK-001",Yes,"Requires P/Invoke or a wrapper library for Windows APIs. Security-sensitive code.",Store secrets in an encrypted configuration file, which is less secure as the key must be stored with the app.
TASK-027,"TASK-027: [WI-011] Integrate Credential Manager for DB Connection",Backend Development,DevOps,Medium,5.2,Mid,1,"US-108,TASK-026",Yes,"Requires modifying the application's startup and configuration logic. Risk of service startup failure (RISK-OPR-002).",Fall back to reading credentials from environment variables.
EPIC-003,"EPIC-003: DICOM Core Functionality",Backend Development,Data Engineering,Critical,130.6,Lead,2,"",Yes,"Core value proposition of the application. Requires deep DICOM knowledge.",N/A
US-109,"US-109: Receive and Ingest DICOM Studies",Backend Development,DevOps,Critical,46.5,Senior,1,"EPIC-003,TS-001",Yes,"High-risk, high-throughput feature (RISK-TEC-002). Performance and reliability are paramount.",Ingest DICOM data directly into the database from the C-STORE listener, which would block the listener and reduce throughput.
TASK-028,"TASK-028: [WI-012] Implement C-STORE SCP Hosted Service",Backend Development,DevOps,High,9.3,Senior,1,"US-109,TASK-003",Yes,"Requires expertise with the `fo-dicom` library and DICOM network protocols.",N/A
TASK-029,"TASK-029: [WI-012] Implement C-STORE Request Handler Logic",Backend Development,Data Engineering,Critical,12,Senior,1,"US-109,TASK-028,TASK-005",Yes,"Core of the ingestion pipeline. Must be highly efficient to avoid blocking the network listener.",Perform metadata extraction and file moving synchronously, which would be a performance bottleneck.
TASK-030,"TASK-030: [WI-013] Implement DICOM Ingestion Queue Consumer",Backend Development,DevOps,Medium,7.2,Mid,1,"US-109,TASK-007",Yes,"Implements the generic consumer for the specific DICOM ingestion task.",N/A
TASK-031,"TASK-031: [WI-013] Implement Transactional DICOM Metadata Persistence",Backend Development,Data Engineering,High,12,Senior,1,"US-109,TASK-030",Yes,"Complex business logic. Transactional integrity and idempotency are critical to prevent data duplication or loss.",Insert records without a transaction, risking partial data saves on failure.
EPIC-004,"EPIC-004: DICOM Viewer & Tools",Frontend Development,Backend Development,Critical,136.1,Lead,2,"",Yes,"Contains the highest technical risk (DirectX) and is central to the user experience.",Use a third-party commercial DICOM viewer component, increasing licensing costs but reducing development risk.
US-111,"US-111: View High-Performance DICOM Images",Frontend Development,Backend Development,Critical,41.9,Lead,1,"EPIC-004,TASK-035",Yes,"Depends on the high-risk DirectX PoC. Performance is the key acceptance criteria.",Use WPF's built-in image rendering, which will be too slow for large DICOM series.
TASK-036,"TASK-036: [WI-015] Implement DICOM Pixel Data to GPU Texture Pipeline",Frontend Development,Backend Development,Critical,12,Lead,1,"US-111,TASK-035",Yes,"Specialized graphics programming. Requires understanding of both DICOM pixel data formats and GPU texture formats.",Process pixel data on the CPU and send a ready-to-display bitmap to the GPU, which is less flexible and slower.
TASK-037,"TASK-037: [WI-015] Develop HLSL Shader for WW/WL and Rendering",Frontend Development,Backend Development,Critical,9.3,Lead,1,"US-111,TASK-036",Yes,"Requires HLSL and GPU programming knowledge. The shader is key for interactive performance.",Apply WW/WL on the CPU, which would be far too slow for real-time mouse interaction.
TASK-038,"TASK-038: [WI-015] Implement Progressive Loading Strategy",Frontend Development,Backend Development,High,12,Senior,1,"US-111,TASK-036",Yes,"Improves user-perceived performance. Requires good multithreading/async implementation.",Load the full-resolution image synchronously, causing the UI to freeze for several seconds on large studies.
US-112,"US-112: Manipulate Images with Viewer Tools",Frontend Development,Design,High,39.5,Senior,1,"EPIC-004,US-111",No,"Depends on the core viewer rendering pipeline. Focus is on user interaction and state management.",N/A
TASK-039,"TASK-039: [WI-016] Implement Viewer State Management for Pan/Zoom",Frontend Development,Backend Development,Medium,8.3,Mid,1,"US-112,TASK-037",No,"Standard state management in an MVVM context, but needs to feed parameters to the GPU shader.",N/A
TASK-040,"TASK-040: [WI-016] Implement Interactive Window/Level (WW/WL) Tool",Frontend Development,Backend Development,High,7.2,Senior,1,"US-112,TASK-037",No,"Critical for usability. Must feel responsive, which depends on the efficiency of the shader pipeline.",Update WW/WL only on mouse-up, providing a clunky user experience.
TASK-041,"TASK-041: [WI-016] Implement WW/WL Presets",Frontend Development,Design,Low,4.2,Mid,1,"US-112,TASK-040",No,"Relatively simple feature, involving a UI menu and updating ViewModel properties.",Require users to manually set WW/WL values every time.
US-110,"US-110: Query and Retrieve Studies from a Remote PACS",Backend Development,Frontend Development,Critical,42.7,Senior,2,"EPIC-003,US-109,US-117",Yes,"Core DICOM feature. Involves both backend (network communication) and frontend (UI) work.",Require users to use a separate, third-party query/retrieve tool and then import the files manually.
TASK-032,"TASK-032: [WI-014] Implement DicomScuService for C-FIND Operations",Backend Development,Quality Assurance,High,10.3,Senior,1,"US-110,TASK-001",Yes,"Complex network protocol implementation. Requires thorough testing against real or simulated PACS.",N/A
TASK-033,"TASK-033: [WI-014] Implement DicomScuService for C-MOVE Operations",Backend Development,Quality Assurance,High,8.3,Senior,1,"US-110,TASK-032,TASK-028",Yes,"Depends on C-FIND and the local C-STORE SCP being operational. Requires robust error handling.",N/A
TASK-034,"TASK-034: [WI-014] Develop PACS Query UI",Frontend Development,Design,Medium,12,Mid,1,"US-110,TASK-033",No,"UI needs to handle asynchronous operations gracefully, showing progress and final status to the user.",Provide a command-line interface for PACS queries instead of a GUI.
EPIC-006,"EPIC-006: System Administration & Configuration",Frontend Development,Backend Development,Critical,151.7,Lead,2,"",No,"Essential for making the application manageable and configurable in a production environment.",Require all configuration to be done via direct database edits or modifying config files, which is error-prone.
US-103,"US-103: Create a New User Account",Frontend Development,Backend Development,High,36.3,Mid,2,"EPIC-006,US-102,US-107",No,"Core administrative feature involving UI, backend logic, security, and auditing.",Provide a script for admins to create users directly in the database.
TASK-059,"TASK-059: [WI-021] Implement Backend 'Create User' Logic",Backend Development,Quality Assurance,Medium,8.3,Mid,1,"US-103,TASK-012",No,"Standard backend CRUD logic with added security considerations (hashing, temporary password flag).",N/A
TASK-060,"TASK-060: [WI-009] Integrate Audit Logging for User Creation",Backend Development,Quality Assurance,High,4.2,Senior,1,"US-103,TASK-059,TASK-021",Yes,"Critical for compliance (RISK-SEC-001). Transactional integrity is key.",Log to a separate system and risk the two falling out of sync.
TASK-057,"TASK-057: [WI-021] Develop User Management View and ViewModel",Frontend Development,Design,Medium,7.2,Mid,1,"US-103,TASK-018",No,"Main entry point for all user management tasks. Needs to be clear and easy to use.",N/A
TASK-058,"TASK-058: [WI-021] Implement 'Add User' Dialog and ViewModel",Frontend Development,Design,Medium,7.2,Mid,1,"US-103,TASK-057",No,"Standard modal dialog implementation.",Use the main view for adding users, which might clutter the UI.
US-104,"US-104: Edit a User's Role or Status",Frontend Development,Backend Development,High,24.3,Mid,2,"EPIC-006,US-102,US-107",No,"Important for user lifecycle management. The 'last admin' check is a critical business rule.",N/A
TASK-062,"TASK-062: [WI-021] Implement Backend 'Update User' Logic",Backend Development,Quality Assurance,Medium,8.3,Mid,1,"US-104,TASK-059",No,"Business logic to prevent admin lockout is the most complex part of this task.",Omit the 'last admin' check, risking a situation where the system has no administrators.
TASK-063,"TASK-063: [WI-009] Integrate Audit Logging for User Updates",Backend Development,Quality Assurance,High,5,Senior,1,"US-104,TASK-062,TASK-021",Yes,"Critical for compliance. Must log old and new values for accountability.",Only log that a change occurred, without details of what changed.
TASK-061,"TASK-061: [WI-021] Implement 'Edit User' Dialog and Logic",Frontend Development,Design,Medium,8.3,Mid,1,"US-104,TASK-057",No,"Standard modal dialog, pre-populated with data.",N/A
US-105,"US-105: Delete a User Account",Frontend Development,Backend Development,High,14.8,Mid,2,"EPIC-006,US-102,US-107",No,"Security-sensitive operation. Must include clear confirmation dialogs.",Implement a 'soft delete' (marking as inactive) instead of a permanent delete.
TASK-065,"TASK-065: [WI-021] Implement Backend 'Delete User' Logic with Auditing",Backend Development,Quality Assurance,High,8.3,Senior,1,"US-105,TASK-062,TASK-021",Yes,"Transactional integrity between the delete and the audit log is critical. Self-deletion prevention is a key rule.",N/A
TASK-064,"TASK-064: [WI-021] Implement 'Delete User' UI and Confirmation",Frontend Development,Design,Low,4.2,Mid,1,"US-105,TASK-057",No,"Simple UI work, but the confirmation dialog wording is important to prevent accidental deletions.",N/A
US-106,"US-106: Reset a User's Password",Frontend Development,Backend Development,High,16.5,Mid,2,"EPIC-006,US-102,US-107",No,"Critical user support feature with security implications.",N/A
TASK-067,"TASK-067: [WI-021] Implement Backend 'Reset Password' Logic with Auditing",Backend Development,Quality Assurance,High,7.2,Senior,1,"US-106,TASK-065",Yes,"Security-sensitive. Must generate a cryptographically secure temporary password.",Generate a predictable temporary password, which would be a major security flaw.
TASK-066,"TASK-066: [WI-021] Implement 'Reset Password' UI Flow",Frontend Development,Design,Medium,7.2,Mid,1,"US-106,TASK-057",No,"The UI flow needs to be secure and user-friendly for the admin (e.g., providing a 'copy to clipboard' button).",Email the temporary password to the user, which requires separate email configuration and may be insecure.
US-117,"US-117: Configure and Verify PACS Connections",Frontend Development,Backend Development,High,20.8,Mid,2,"EPIC-006,US-102,US-110",No,"Essential for interoperability. The C-ECHO verification is a key usability feature.",Require configuration via a text file, which is less user-friendly and more error-prone.
TASK-069,"TASK-069: [WI-022] Develop PACS Configuration UI and ViewModel",Frontend Development,Design,Medium,10.3,Mid,1,"US-117,TASK-068",No,"Standard admin CRUD screen.",N/A
TASK-070,"TASK-070: [WI-014] Implement C-ECHO Verification Logic",Backend Development,Quality Assurance,Medium,5,Mid,1,"US-117,TASK-032",No,"Extends the existing DICOM SCU service. Provides immediate feedback to the admin.",Force the admin to use a separate DICOM tool to verify connectivity.
US-118,"US-118: Configure Automated DICOM Routing Rules",Frontend Development,Backend Development,Medium,17.5,Mid,2,"EPIC-006,US-102,US-109",No,"Improves operational efficiency and organization.",Use a fixed, hardcoded folder structure for all incoming studies.
TASK-073,"TASK-073: [WI-013] Integrate Routing Rule Evaluation into Ingestion Pipeline",Backend Development,Data Engineering,High,6,Senior,1,"US-118,TASK-031,TASK-071",Yes,"Modifies a critical, high-throughput data pipeline. Must be implemented efficiently to avoid slowing down ingestion.",N/A
TASK-072,"TASK-072: [WI-022] Develop Auto-Routing Rule UI",Frontend Development,Design,Medium,8.3,Mid,1,"US-118,TASK-071",No,"The UI for defining rule criteria can be complex. Needs to be intuitive for non-developers.",Require admins to write JSON manually to define routing rules.
US-113,"US-113: Create and Save Annotations",Frontend Development,Backend Development,Critical,49.4,Senior,2,"EPIC-004,US-111",No,"High-risk feature due to the complexity of the DICOM GSPS standard (RISK-QLT-001).",Save annotations in a proprietary, non-standard format, which prevents interoperability with other DICOM systems.
TASK-042,"TASK-042: [WI-017] Implement Annotation Drawing on a WPF Canvas",Frontend Development,Design,High,12,Senior,1,"US-113,TASK-039",No,"Requires good understanding of WPF's rendering and layout system, including coordinate transformations.",N/A
TASK-043,"TASK-043: [WI-017] Implement Measurement Calculation",Frontend Development,Backend Development,Medium,6.2,Mid,1,"US-113,TASK-042",No,"Requires parsing DICOM metadata (PixelSpacing) and applying correct geometric calculations.",Display measurements in pixels only, which is not clinically useful.
TASK-044,"TASK-044: [WI-017] Implement GSPS Object Creation Service",Backend Development,Quality Assurance,Critical,14.3,Lead,1,"US-113,TASK-042",Yes,"Very high complexity. Requires deep knowledge of the DICOM standard. High risk of creating non-compliant objects.",N/A
TASK-045,"TASK-045: [WI-017] Implement GSPS Parsing and Display Logic",Frontend Development,Backend Development,Critical,12,Lead,1,"US-113,TASK-044",No,"Complex parsing logic. Needs to be robust against variations in GSPS objects created by other systems.",Only support saving annotations, not loading them back.
US-119,"US-119: Monitor Real-Time System Health",Frontend Development,Backend Development,High,34.2,Mid,2,"EPIC-006,US-102,TS-001",No,"Provides crucial visibility for administrators to maintain system uptime.",Require admins to check logs and service statuses manually on the server.
TASK-074,"TASK-074: [WI-023] Implement System Health Probe Hosted Service",Backend Development,DevOps,Medium,10.3,Mid,1,"US-119,TASK-003",Yes,"The core of the monitoring feature. Needs to be reliable and have low performance overhead.",N/A
TASK-075,"TASK-075: [WI-023] Expose Health Status from Service to Client",Backend Development,Frontend Development,Low,5,Mid,1,"US-119,TASK-008,TASK-074",No,"Extends the existing IPC mechanism. The data transfer object (DTO) needs to be well-defined.",Have the client connect directly to PostgreSQL/RabbitMQ to check status, which is a bad security practice.
TASK-076,"TASK-076: [WI-023] Develop System Health Dashboard UI",Frontend Development,Design,Medium,10.3,Mid,1,"US-119,TASK-075,TASK-009",No,"The UI needs to clearly present the health status and update in near-real-time.",Display health information as raw text in a log view.
EPIC-005,"EPIC-005: Printing & Exporting",Frontend Development,Backend Development,Critical,87,Senior,2,"",No,"Key feature set for users to share and distribute their work.",Outsource printing/PDF generation to a third-party reporting tool.
US-114,"US-114: Prepare a Custom Print Layout",Frontend Development,Design,High,35.8,Senior,1,"EPIC-005,US-111",No,"Complex UI work, especially the drag-and-drop layout editor.",Provide only a few fixed, non-customizable layouts.
TASK-046,"TASK-046: [WI-018] Develop Print Preview View and ViewModel",Frontend Development,Design,Medium,8.3,Mid,1,"US-114",No,"Standard WPF view/viewmodel setup.",N/A
TASK-047,"TASK-047: [WI-018] Implement Layout Templates and Page Preview",Frontend Development,Design,High,12,Senior,1,"US-114,TASK-046",No,"Requires advanced WPF skills to create a dynamic and accurate visual representation of the final printout.",N/A
TASK-048,"TASK-048: [WI-018] Implement Drag-and-Drop Image Rearrangement",Frontend Development,Design,High,10.3,Senior,1,"US-114,TASK-047",No,"Complex UI interaction to implement robustly in WPF.",Require users to re-order images by changing a numeric index in a list.
TASK-049,"TASK-049: [WI-018] Implement Branding and Dynamic Text Fields",Frontend Development,Backend Development,Low,5.2,Mid,1,"US-114,TASK-047",No,"Involves simple UI controls and string replacement logic.",Do not support branding or custom text.
US-115,"US-115: Print a Study Asynchronously",Backend Development,Frontend Development,Critical,27.2,Senior,2,"EPIC-005,US-114,TS-001",Yes,"Asynchronous processing is key to good UX. Depends on the core IPC architecture.",Print synchronously from the client, freezing the UI for the duration of the print spooling.
TASK-050,"TASK-050: [WI-019] Implement Service Status Check for Print Button",Frontend Development,Backend Development,Medium,5,Mid,1,"US-115,TASK-009,TASK-046",Yes,"Important for user experience, providing immediate feedback about service availability.",Allow the user to click 'Print' even if the service is down, resulting in a delayed failure notification.
TASK-051,"TASK-051: [WI-019] Implement Print Job Submission to RabbitMQ",Frontend Development,Backend Development,Medium,6,Mid,1,"US-115,TASK-005,TASK-050",Yes,"Core of the asynchronous handoff. The DTO for the print job needs to be carefully designed.",N/A
TASK-052,"TASK-052: [WI-020] Implement Print Job Consumer in Windows Service",Backend Development,DevOps,Medium,6,Mid,1,"US-115,TASK-007,TASK-051",Yes,"Implements the generic consumer for the print job queue.",N/A
TASK-053,"TASK-053: [WI-020] Implement Print Spooling Logic",Backend Development,DevOps,High,10.3,Senior,1,"US-115,TASK-052",Yes,"Requires use of the `System.Printing` API and rendering WPF visuals off-screen, which can be complex.",Generate an image file and then shell-execute the print command for that file, offering less control.
US-116,"US-116: Export a Study to a Secure PDF",Backend Development,Frontend Development,High,24,Mid,2,"EPIC-005,US-114,TS-001",No,"PDF generation and encryption add complexity.",Export as a simple image format (JPEG, PNG) instead of a secure PDF.
TASK-054,"TASK-054: [WI-019] Implement PDF Export Job Submission",Frontend Development,Backend Development,Medium,6,Mid,1,"US-116,TASK-051",No,"Reuses the asynchronous submission pattern from the printing feature.",N/A
TASK-055,"TASK-055: [WI-020] Implement PDF Generation Consumer",Backend Development,DevOps,Low,4.2,Mid,1,"US-116,TASK-054",No,"A new consumer for a dedicated PDF job queue.",N/A
TASK-056,"TASK-056: [WI-020] Implement PDF Generation with QuestPDF",Backend Development,Quality Assurance,High,12,Senior,1,"US-116,TASK-055",Yes,"Requires learning the QuestPDF library. PDF/A compliance and encryption are non-trivial features to implement correctly.",Use a simpler PDF library that may not support PDF/A or strong encryption.
EPIC-010,"EPIC-010: Deployment & Operations",DevOps,Quality Assurance,Critical,48.8,Lead,1,"",Yes,"Critical for delivering the software to customers. A failed deployment can render all other features useless.",Provide customers with a zip file of binaries and a manual instruction document.
US-120,"US-120: Install the Application and Service",DevOps,Quality Assurance,Critical,32.5,Senior,1,"EPIC-010,TS-001",Yes,"High-risk due to environmental dependencies (RISK-OPR-001, RISK-EXT-001). A robust installer is crucial for a good customer experience.",Use a simple PowerShell script for installation, which is less user-friendly and harder to manage.
TASK-077,"TASK-077: [WI-024] Create and Configure MSIX Packaging Project",DevOps,Frontend Development,Medium,6,Mid,1,"US-120,TASK-001",Yes,"Requires familiarity with Visual Studio packaging projects and the MSIX manifest.",N/A
TASK-078,"TASK-078: [WI-024] Integrate Windows Service Installation",DevOps,Backend Development,High,8.3,Senior,1,"US-120,TASK-077",Yes,"Requires knowledge of the Desktop Bridge extensions for MSIX to correctly register a Windows Service.",Require the admin to install the service manually using `sc.exe`.
TASK-079,"TASK-079: [WI-024] Implement Prerequisite Check Logic",DevOps,Backend Development,Critical,12,Senior,1,"US-120,TASK-078",Yes,"High-risk and complex logic. Needs to be very robust to handle different network environments.",Do not perform any prerequisite checks, leading to a higher rate of installation failures.
US-121,"US-121: Access Deployment and Admin Guides",Product Management,DevOps,High,16.3,Mid,1,"EPIC-010",No,"Documentation is often overlooked but is critical for customer success.",Provide no documentation, leading to a high volume of support requests.
TASK-080,"TASK-080: [WI-026] Write Deployment Guide",Product Management,DevOps,Medium,8.3,Mid,1,"US-121,TASK-079",Yes,"A technical writer is the ideal resource. Must be detailed and accurate.",N/A
TASK-081,"TASK-081: [WI-026] Write Administrator's Guide",Product Management,Frontend Development,Medium,8.3,Mid,1,"US-121,TASK-076",No,"A technical writer is the ideal resource. Needs to cover all admin UI features.",N/A
TS-002,"TS-002: Automate Build and Vulnerability Scanning",DevOps,Quality Assurance,High,14.2,Senior,1,"",Yes,"This is a duplicate of the story with estimate 15.9, using the new estimate. Foundational for code quality and security. Requires a dedicated DevOps engineer.",Manually build and test, which is not scalable and is highly error-prone.