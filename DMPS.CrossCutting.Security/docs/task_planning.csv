Title,Description,Type,Status,Priority,Assignee,Reporter,Due Date,Estimate,Labels,Sprint,Epic,Project,Attachments,Comments,Parent ID,Dependencies,Created At,Updated At,Skills Required
"EPIC-001: Core Application Architecture & Setup","Establish the foundational architecture, project structure, inter-process communication (IPC), and continuous integration pipeline for the entire application.","Epic","Backlog","Critical","tech-lead@project.com","pm@project.com","",146.1,"Architecture,Setup,CI/CD","","Core Application Architecture & Setup","DICOM Management & Printing System","","This epic contains all foundational work required before feature development can begin.","","","2024-01-01 09:00","2024-01-01 09:00",""
"TS-001: Establish Solution Foundation and IPC","As a Developer, I need the solution and project structure to be created with Dependency Injection and Inter-Process Communication (IPC) frameworks configured, so that there is a clean, maintainable, and decoupled foundation for building application features.","User Story","Backlog","Critical","backend-dev@project.com","pm@project.com","",82.5,"Architecture,IPC,DI","Sprint 1","Core Application Architecture & Setup","DICOM Management & Printing System","","Requires successful setup of RabbitMQ for async messaging and Named Pipes for synchronous status checks.","EPIC-001","","2024-01-01 09:00","2024-01-01 09:00",".NET,C#,RabbitMQ,WPF"
"TASK-001: [WI-001] Scaffold .NET 8 Solution and Project Structure","Create the multi-project .NET solution file and all required .csproj files (Client, Service, Core, Application, Infrastructure, Persistence). Configure project references to establish the dependency hierarchy.","Task","Backlog","Critical","backend-dev@project.com","tech-lead@project.com","",4.2,"Architecture,Setup,WI-001","Sprint 1","Core Application Architecture & Setup","DICOM Management & Printing System","","This is the foundational task for all other code-related work.","TS-001","","2024-01-01 09:00","2024-01-01 09:00",".NET CLI,Visual Studio"
"TASK-002: [WI-002] Configure Dependency Injection in WPF Client","Set up the `Microsoft.Extensions.DependencyInjection` container in the WPF client's `App.xaml.cs`. Configure the Generic Host builder to register and provide services throughout the client application.","Task","Backlog","High","frontend-dev@project.com","tech-lead@project.com","",5,"DI,Architecture,Client,WI-002","Sprint 1","Core Application Architecture & Setup","DICOM Management & Printing System","","Requires the client project to exist.","TS-001","TASK-001","2024-01-01 09:00","2024-01-01 09:00","C#,.NET DI,WPF"
"TASK-003: [WI-002] Configure Dependency Injection in Windows Service","Set up the `Microsoft.Extensions.DependencyInjection` container in the Windows Service's `Program.cs` using the Worker Service template's Host builder. Ensure services and hosted services can be registered.","Task","Backlog","High","backend-dev@project.com","tech-lead@project.com","",4,"DI,Architecture,Service,WI-002","Sprint 1","Core Application Architecture & Setup","DICOM Management & Printing System","","Requires the service project to exist.","TS-001","TASK-001","2024-01-01 09:00","2024-01-01 09:00","C#,.NET DI"
"TASK-004: [WI-003] Implement RabbitMQ Connection Management","Create a singleton service responsible for establishing and maintaining a persistent connection to the RabbitMQ broker. This service should handle automatic retries on connection failure.","Task","Backlog","High","backend-dev@project.com","tech-lead@project.com","",6.3,"RabbitMQ,IPC,Infrastructure,WI-003","Sprint 1","Core Application Architecture & Setup","DICOM Management & Printing System","","Requires DI to be set up in both client and service.","TS-001","TASK-002,TASK-003","2024-01-01 09:00","2024-01-01 09:00","C#,RabbitMQ"
"TASK-005: [WI-003] Develop Generic RabbitMQ Message Producer Service","Create a generic `IMessageProducer` service that can serialize and publish a message to a specified exchange and routing key. Implement logic for publishing messages as 'persistent'.","Task","Backlog","High","backend-dev@project.com","tech-lead@project.com","",8.2,"RabbitMQ,IPC,Infrastructure,WI-003","Sprint 1","Core Application Architecture & Setup","DICOM Management & Printing System","","Requires the connection management service.","TS-001","TASK-004","2024-01-01 09:00","2024-01-01 09:00","C#,RabbitMQ"
"TASK-006: [WI-003] Implement RabbitMQ Queue Declaration and DLX Configuration","Create a utility or startup service that handles the declaration of exchanges and queues. Implement logic to declare durable queues and configure the dead-letter exchange (DLX) and dead-letter queue (DLQ) arguments for specified queues.","Task","Backlog","High","backend-dev@project.com","tech-lead@project.com","",9.3,"RabbitMQ,IPC,Resiliency,WI-003","Sprint 1","Core Application Architecture & Setup","DICOM Management & Printing System","","Requires the connection management service.","TS-001","TASK-004","2024-01-01 09:00","2024-01-01 09:00","C#,RabbitMQ"
"TASK-007: [WI-003] Develop Generic RabbitMQ Consumer Hosted Service","Create a base class for hosted services (`IHostedService`) that subscribes to a RabbitMQ queue. It should handle message deserialization, invoking a message handler, and performing message acknowledgment (ack/nack).","Task","Backlog","High","backend-dev@project.com","tech-lead@project.com","",12,"RabbitMQ,IPC,Infrastructure,WI-003","Sprint 1","Core Application Architecture & Setup","DICOM Management & Printing System","","Requires the connection management service.","TS-001","TASK-004","2024-01-01 09:00","2024-01-01 09:00","C#,RabbitMQ,.NET Hosted Services"
"TASK-008: [WI-004] Implement Named Pipe Server in Windows Service","In the Windows Service, create a hosted service that initializes a `NamedPipeServerStream`. It should listen for client connections in a background thread, read incoming messages, and write responses.","Task","Backlog","High","backend-dev@project.com","tech-lead@project.com","",8.2,"IPC,NamedPipes,Service,WI-004","Sprint 1","Core Application Architecture & Setup","DICOM Management & Printing System","","Hosted within the Windows Service project.","TS-001","TASK-003","2024-01-01 09:00","2024-01-01 09:00","C#,System.IO.Pipes,Multithreading"
"TASK-009: [WI-004] Implement Named Pipe Client in Infrastructure Library","Create a client-side service that can connect to the `NamedPipeServerStream`. It must implement request/reply logic with a configurable timeout to prevent the client application from hanging.","Task","Backlog","High","backend-dev@project.com","tech-lead@project.com","",6.2,"IPC,NamedPipes,Client,WI-004","Sprint 1","Core Application Architecture & Setup","DICOM Management & Printing System","","Requires the Named Pipe server to be running for integration testing.","TS-001","TASK-008","2024-01-01 09:00","2024-01-01 09:00","C#,System.IO.Pipes"
"TASK-010: [WI-005] Define User, Role, PasswordHistory EF Core Entities","Create the C# classes for `User`, `Role`, and `PasswordHistory` entities. Annotate properties with data types, constraints, and relationships needed for the database schema.","Task","Backlog","High","backend-dev@project.com","tech-lead@project.com","",4.2,"Database,EFCore,Security,WI-005","Sprint 1","Core Application Architecture & Setup","DICOM Management & Printing System","","Requires the Core and Persistence projects.","US-101","TASK-001","2024-01-01 09:00","2024-01-01 09:00","C#,EF Core"
"TASK-011: [WI-005] Configure AppDbContext and Generate Initial Migration","Add `DbSet` properties for the new entities to `AppDbContext`. Configure relationships, indexes (e.g., unique index on username), and other constraints in `OnModelCreating`. Generate the initial EF Core migration.","Task","Backlog","High","backend-dev@project.com","tech-lead@project.com","",5.2,"Database,EFCore,Migration,WI-005","Sprint 1","Core Application Architecture & Setup","DICOM Management & Printing System","","Requires the entity classes to be defined.","US-101","TASK-010","2024-01-01 09:00","2024-01-01 09:00","EF Core,PostgreSQL"
"TASK-020: [WI-009] Define AuditLog Entity and Service Interface","Create the `AuditLog` EF Core entity with fields for user ID, timestamp, event type, details (JSONB), etc. Define the `IAuditService` interface with a method like `LogEventAsync(AuditEvent data)`.","Task","Backlog","High","backend-dev@project.com","tech-lead@project.com","",4.2,"Audit,Security,Database,WI-009","Sprint 1","Security & Compliance","DICOM Management & Printing System","","Builds upon the existing database schema.","US-107","TASK-011","2024-01-01 09:00","2024-01-01 09:00","C#,EF Core"
"TASK-024: [WI-010] Research and PoC for EF Core with pgcrypto","Investigate the best method for integrating EF Core with PostgreSQL's `pgcrypto` extension. Build a small proof-of-concept to validate the approach, likely using Value Converters and custom DbFunctions.","Task","Backlog","Critical","backend-dev@project.com","tech-lead@project.com","",6.3,"Security,Encryption,Database,PoC,WI-010","Sprint 1","Security & Compliance","DICOM Management & Printing System","","Requires a database schema to experiment with.","US-108","TASK-011","2024-01-01 09:00","2024-01-01 09:00","EF Core,PostgreSQL,pgcrypto"
"TASK-035: [WI-015] PoC: DirectX Interop with Vortice.Windows in WPF","Create a proof-of-concept to validate the core technical approach. This involves creating a custom WPF control that hosts a DirectX 11 swap chain and can clear the background to a solid color. This validates the interop setup.","Task","Backlog","Critical","graphics-dev@project.com","tech-lead@project.com","",12,"PoC,Viewer,DirectX,High-Risk,WI-015","Sprint 1","DICOM Viewer & Tools","DICOM Management & Printing System","","Blocks all other viewer development.","US-111","","2024-01-01 09:00","2024-01-01 09:00","C#,WPF,DirectX,Vortice.Windows"
"TASK-068: [WI-022] Create PACS Configuration Data Model and DB Schema","Define the `PacsConfiguration` entity in EF Core and generate the corresponding migration to create the database table.","Task","Backlog","High","backend-dev@project.com","tech-lead@project.com","",3,"Admin,Database,PACS,WI-022","Sprint 1","System Administration & Configuration","DICOM Management & Printing System","","Adds to the existing database schema.","US-117","TASK-011","2024-01-01 09:00","2024-01-01 09:00","C#,EF Core"
"TASK-071: [WI-022] Create Auto-Routing Rule Data Model and DB Schema","Define the `AutoRoutingRule` entity in EF Core, including fields for criteria (JSONB) and destination path. Generate the migration.","Task","Backlog","High","backend-dev@project.com","tech-lead@project.com","",3,"Admin,Database,DICOM,WI-022","Sprint 1","System Administration & Configuration","DICOM Management & Printing System","","Adds to the existing DB schema.","US-118","TASK-068","2024-01-01 09:00","2024-01-01 09:00","C#,EF Core"
"TS-002: Automate Build and Vulnerability Scanning","As a Developer, I want a Continuous Integration (CI) pipeline that automatically builds the code, runs tests, and scans for known vulnerabilities in third-party libraries, so that we can ensure code quality and security with every change.","User Story","Backlog","Critical","devops@project.com","pm@project.com","",15.9,"CI/CD,DevOps,Security","Sprint 1","Deployment & Operations","DICOM Management & Printing System","","Establishes the CI foundation for the project.","EPIC-010","","2024-01-01 09:00","2024-01-01 09:00","CI/CD,YAML,Security"
"TASK-082: [WI-025] Set up Basic CI Pipeline for Build and Test","Create the CI pipeline configuration file (e.g., YAML for GitHub Actions). Define steps to check out the code, set up the .NET 8 SDK, restore dependencies, build the solution, and run all xUnit tests.","Task","Backlog","High","devops@project.com","tech-lead@project.com","",6,"CI/CD,DevOps,Testing,WI-025","Sprint 1","Deployment & Operations","DICOM Management & Printing System","","Requires a solution to build.","TS-002","TASK-001","2024-01-01 09:00","2024-01-01 09:00","YAML,CI/CD"
"TASK-083: [WI-025] Integrate OWASP Dependency-Check Scan","Add a step to the CI pipeline to execute the OWASP Dependency-Check tool against the solution. Configure it to generate a report and to fail the build if vulnerabilities above a certain severity (e.g., 'High') are found.","Task","Backlog","High","devops@project.com","tech-lead@project.com","",8.2,"CI/CD,DevOps,Security,WI-025","Sprint 1","Deployment & Operations","DICOM Management & Printing System","","Requires the basic CI pipeline to be in place.","TS-002","TASK-082","2024-01-01 09:00","2024-01-01 09:00","YAML,CI/CD,Security"
"EPIC-002: Security & Compliance","Implement all security features including user authentication, role-based access control (RBAC), data encryption, secure secret storage, and audit trails to ensure HIPAA compliance.","Epic","Backlog","Critical","security-champion@project.com","pm@project.com","",141.2,"Security,Compliance,HIPAA","","Security & Compliance","DICOM Management & Printing System","","This epic is critical for regulatory compliance and protecting patient data.","","","2024-01-01 09:00","2024-01-01 09:00",""
"US-101: Log In to the Application","As a Registered User, I want to securely log in with my username and password, so that I can access the application's features based on my role.","User Story","Backlog","Critical","frontend-dev@project.com","pm@project.com","",45.2,"Security,Authentication,UI","Sprint 2","Security & Compliance","DICOM Management & Printing System","","Depends on the foundational architecture (TS-001).","EPIC-002","TS-001","2024-01-01 09:00","2024-01-01 09:00","C#,WPF,MVVM,EF Core"
"TASK-012: [WI-006] Implement AuthenticationService with BCrypt","Create the `AuthenticationService`. This service will use the user repository to fetch a user by username and then use the BCrypt.Net library to securely verify the provided password against the stored hash.","Task","Backlog","Critical","backend-dev@project.com","tech-lead@project.com","",7.2,"Security,Authentication,Backend,WI-006","Sprint 2","Security & Compliance","DICOM Management & Printing System","","Requires the database schema and a way to access it.","US-101","TASK-011","2024-01-01 09:00","2024-01-01 09:00","C#,BCrypt,EF Core"
"TASK-013: [WI-007] Develop LoginView.xaml Layout","Create the XAML for the login window. It should include a `TextBox` for the username, a `PasswordBox` for the password, a `Button` for login, and a `TextBlock` for displaying error messages. Use the Material Design in XAML toolkit.","Task","Backlog","High","frontend-dev@project.com","tech-lead@project.com","",5.2,"UI,WPF,Login,WI-007","Sprint 2","Security & Compliance","DICOM Management & Printing System","","Requires the WPF project setup.","US-101","TASK-002","2024-01-01 09:00","2024-01-01 09:00","WPF,XAML,Material Design"
"TASK-014: [WI-007] Implement LoginViewModel Logic","Create the `LoginViewModel`. Implement properties for username and password, an `ICommand` for the login action, and properties for displaying error messages. The command will invoke the `AuthenticationService`.","Task","Backlog","High","frontend-dev@project.com","tech-lead@project.com","",8.3,"UI,WPF,ViewModel,WI-007","Sprint 2","Security & Compliance","DICOM Management & Printing System","","Requires the authentication service to call and the view to bind to.","US-101","TASK-012,TASK-013","2024-01-01 09:00","2024-01-01 09:00","WPF,MVVM,C#"
"TASK-015: [WI-007] Implement Main Window Navigation on Successful Login","Implement the logic that closes the `LoginView` and opens the `MainView` upon successful authentication. This includes creating a placeholder `MainView`/`MainViewModel` and managing the application's window lifecycle.","Task","Backlog","High","frontend-dev@project.com","tech-lead@project.com","",4.2,"UI,WPF,Navigation,WI-007","Sprint 2","Security & Compliance","DICOM Management & Printing System","","Depends on the successful login event from the LoginViewModel.","US-101","TASK-014","2024-01-01 09:00","2024-01-01 09:00","WPF,C#"
"TASK-016: Write Integration Tests for Authentication Flow","Create integration tests that use a real test database (e.g., via Testcontainers) to validate the end-to-end authentication process from the service layer.","Task","Backlog","High","backend-dev@project.com","tech-lead@project.com","",10.3,"Testing,Integration","Sprint 2","Security & Compliance","DICOM Management & Printing System","","Requires the AuthenticationService and data model to be complete.","US-101","TASK-012","2024-01-01 09:00","2024-01-01 09:00","xUnit,EF Core,Testcontainers"
"US-102: Access Features Based on Role","As a System User, I want the application's UI and features to be restricted based on my assigned role (Technician or Administrator), so that I can only perform authorized actions, ensuring security.","User Story","Backlog","Critical","backend-dev@project.com","pm@project.com","",32.8,"Security,Authorization,RBAC","Sprint 2","Security & Compliance","DICOM Management & Printing System","","Depends on a successful user login (US-101).","EPIC-002","US-101","2024-01-01 09:00","2024-01-01 09:00","C#,WPF,MVVM"
"TASK-017: [WI-008] Implement a Current User Session Service","Create a singleton service (`ICurrentUserService` or `ISessionContext`) that holds the state of the currently logged-in user, including their UserId and Role. This service will be populated after a successful login.","Task","Backlog","High","backend-dev@project.com","tech-lead@project.com","",4.2,"Security,Session,Architecture,WI-008","Sprint 2","Security & Compliance","DICOM Management & Printing System","","Depends on the login process to be populated.","US-102","TASK-012","2024-01-01 09:00","2024-01-01 09:00","C#,.NET DI"
"TASK-018: [WI-008] Implement Authorization Logic in ViewModels","Inject the `ICurrentUserService` into key ViewModels (e.g., `MainViewModel`, `DicomViewerViewModel`). Create boolean properties like `IsAdmin` that are bound to the Visibility or IsEnabled properties of UI elements in the corresponding Views.","Task","Backlog","High","frontend-dev@project.com","tech-lead@project.com","",9.3,"Security,Authorization,UI,WPF,WI-008","Sprint 2","Security & Compliance","DICOM Management & Printing System","","Requires the session service to provide the user's role.","US-102","TASK-017","2024-01-01 09:00","2024-01-01 09:00","WPF,MVVM,XAML"
"TASK-019: [WI-008] Implement Backend Authorization Checks","In Application Service methods that perform admin-only actions (e.g., `UserService.DeleteUserAsync`), add a check at the beginning of the method to verify the `ICurrentUserService.Role` is 'Administrator'. If not, throw an `UnauthorizedAccessException`.","Task","Backlog","High","backend-dev@project.com","tech-lead@project.com","",6,"Security,Authorization,Backend,WI-008","Sprint 2","Security & Compliance","DICOM Management & Printing System","","Requires the session service to provide the user's role.","US-102","TASK-017","2024-01-01 09:00","2024-01-01 09:00","C#"
"US-107: View and Export Audit Trail","As an Administrator, I want to view a log of all significant system events, with the ability to filter and export, so that I can investigate security incidents and ensure compliance.","User Story","Backlog","Critical","frontend-dev@project.com","pm@project.com","",28.6,"Security,Audit,Admin","Sprint 2","Security & Compliance","DICOM Management & Printing System","","Depends on role-based access to restrict the view to Admins (US-102).","EPIC-002","US-102","2024-01-01 09:00","2024-01-01 09:00","C#,WPF,EF Core"
"TASK-021: [WI-009] Implement AuditService for Event Persistence","Implement the `AuditService` class. It will take audit event data, map it to the `AuditLog` entity, and save it to the database using `AppDbContext`. Ensure this service is registered for DI.","Task","Backlog","High","backend-dev@project.com","tech-lead@project.com","",5,"Audit,Security,Backend,WI-009","Sprint 2","Security & Compliance","DICOM Management & Printing System","","Requires the AuditLog entity and DbContext configuration.","US-107","TASK-020","2024-01-01 09:00","2024-01-01 09:00","C#,EF Core"
"TASK-022: [WI-009] Develop Audit Trail Viewer UI","Create the `AuditTrailView.xaml` and its `AuditTrailViewModel.cs`. The UI will feature a `DataGrid` to display logs, `DatePicker` controls for date range filtering, and a text box for user filtering.","Task","Backlog","High","frontend-dev@project.com","tech-lead@project.com","",9.3,"UI,WPF,Audit,Admin,WI-009","Sprint 2","Security & Compliance","DICOM Management & Printing System","","Requires a service to fetch audit log data.","US-107","TASK-021","2024-01-01 09:00","2024-01-01 09:00","WPF,XAML,MVVM"
"TASK-023: [WI-009] Implement Filtering and Export-to-CSV Logic","In the `AuditTrailViewModel`, implement the logic to re-query the database when filter criteria change. Add a command for the 'Export to CSV' button that generates a CSV file from the currently displayed data.","Task","Backlog","High","frontend-dev@project.com","tech-lead@project.com","",8.2,"UI,WPF,Audit,Admin,WI-009","Sprint 2","Security & Compliance","DICOM Management & Printing System","","Requires the Audit Trail UI to exist.","US-107","TASK-022","2024-01-01 09:00","2024-01-01 09:00","C#,MVVM,LINQ"
"US-108: Ensure Data is Securely Stored","As the System Owner, I want all Protected Health Information (PHI) in the database to be encrypted and all application secrets to be stored securely, so that we are compliant with HIPAA and protected against data breaches.","User Story","Backlog","Critical","backend-dev@project.com","pm@project.com","",35.7,"Security,Encryption,Database,Compliance","Sprint 2","Security & Compliance","DICOM Management & Printing System","","Depends on the basic database schema from login (US-101).","EPIC-002","US-101,TASK-024","2024-01-01 09:00","2024-01-01 09:00","C#,EF Core,PostgreSQL,Windows API"
"TASK-025: [WI-010] Implement EF Core Value Converters for pgcrypto","Based on the PoC, implement the `EncryptedStringConverter` and apply it to all PHI properties within the `AppDbContext.OnModelCreating` method. Ensure the encryption key is fetched from a secure configuration source.","Task","Backlog","Critical","backend-dev@project.com","tech-lead@project.com","",10.3,"Security,Encryption,Database,WI-010","Sprint 2","Security & Compliance","DICOM Management & Printing System","","Requires the validated approach from the PoC.","US-108","TASK-024","2024-01-01 09:00","2024-01-01 09:00","EF Core,PostgreSQL,C#"
"TASK-026: [WI-011] Implement Windows Credential Manager Service","Create a service that wraps the native Windows Credential Manager APIs. It should provide methods to `SaveSecret(name, secret)` and `ReadSecret(name)`. This will be used for storing database passwords, API keys, etc.","Task","Backlog","High","backend-dev@project.com","tech-lead@project.com","",8.2,"Security,Infrastructure,WI-011","Sprint 2","Security & Compliance","DICOM Management & Printing System","","Belongs in the Infrastructure library.","US-108","TASK-001","2024-01-01 09:00","2024-01-01 09:00","C#,Windows API"
"TASK-027: [WI-011] Integrate Credential Manager for DB Connection","Modify the application startup code in both the Client and Service to use the `CredentialManagerService` to fetch the database password at runtime and construct the final connection string.","Task","Backlog","High","backend-dev@project.com","tech-lead@project.com","",5.2,"Security,Configuration,WI-011","Sprint 2","Security & Compliance","DICOM Management & Printing System","","Requires the Credential Manager service to be implemented.","US-108","TASK-026","2024-01-01 09:00","2024-01-01 09:00","C#,.NET DI"
"EPIC-003: DICOM Core Functionality","Implement the core DICOM capabilities of the system, including receiving studies (C-STORE), querying and retrieving from remote systems (C-FIND, C-MOVE), and managing DICOM network configurations.","Epic","Backlog","Critical","backend-dev@project.com","pm@project.com","",130.6,"DICOM,C-STORE,C-FIND,C-MOVE","","DICOM Core Functionality","DICOM Management & Printing System","","This epic delivers the primary value proposition of the system as a DICOM node.","","","2024-01-01 09:00","2024-01-01 09:00",""
"US-109: Receive and Ingest DICOM Studies","As a Technician, I want the system to automatically receive and store studies sent from our imaging modalities, so that new imaging data is available for viewing quickly and reliably, even under heavy load.","User Story","Backlog","Critical","backend-dev@project.com","pm@project.com","",46.5,"DICOM,C-STORE,Ingestion,High-Risk","Sprint 3","DICOM Core Functionality","DICOM Management & Printing System","","Depends on the core architecture and IPC messaging (TS-001).","EPIC-003","TS-001","2024-01-01 09:00","2024-01-01 09:00","C#,fo-dicom,RabbitMQ,EF Core"
"TASK-028: [WI-012] Implement C-STORE SCP Hosted Service","In the Windows Service, create a `CStoreScpService` as an `IHostedService`. Use `DicomServer.Create` from `fo-dicom` to start a listener on a configurable port. Implement the `IDicomCStoreProvider` interface.","Task","Backlog","Critical","backend-dev@project.com","tech-lead@project.com","",9.3,"DICOM,C-STORE,Service,Backend,WI-012","Sprint 3","DICOM Core Functionality","DICOM Management & Printing System","","Hosted within the Windows Service project.","US-109","TASK-003","2024-01-01 09:00","2024-01-01 09:00","C#,fo-dicom,DICOM"
"TASK-029: [WI-012] Implement C-STORE Request Handler Logic","In the `IDicomCStoreProvider` implementation, handle the `OnCStoreRequest` event. Save the incoming `DicomFile` to a temporary directory, extract the necessary metadata, and publish it as a message to a RabbitMQ queue.","Task","Backlog","Critical","backend-dev@project.com","tech-lead@project.com","",12,"DICOM,C-STORE,Backend,WI-012","Sprint 3","DICOM Core Functionality","DICOM Management & Printing System","","Requires the SCP listener and the RabbitMQ producer service.","US-109","TASK-028,TASK-005","2024-01-01 09:00","2024-01-01 09:00","C#,fo-dicom,RabbitMQ"
"TASK-030: [WI-013] Implement DICOM Ingestion Queue Consumer","Create a `DicomIngestionConsumer` hosted service that subscribes to the ingestion queue. This service will be responsible for orchestrating the database persistence and file movement.","Task","Backlog","High","backend-dev@project.com","tech-lead@project.com","",7.2,"DICOM,RabbitMQ,Service,Backend,WI-013","Sprint 3","DICOM Core Functionality","DICOM Management & Printing System","","Implements the generic consumer base class.","US-109","TASK-007","2024-01-01 09:00","2024-01-01 09:00","C#,RabbitMQ"
"TASK-031: [WI-013] Implement Transactional DICOM Metadata Persistence","Create a service that takes DICOM metadata, maps it to the Patient, Study, Series, and Image entities, and saves them to the PostgreSQL database within a single transaction. This service should be idempotent.","Task","Backlog","High","backend-dev@project.com","tech-lead@project.com","",12,"DICOM,Database,Backend,WI-013","Sprint 3","DICOM Core Functionality","DICOM Management & Printing System","","This logic is called by the ingestion consumer.","US-109","TASK-030","2024-01-01 09:00","2024-01-01 09:00","C#,EF Core,PostgreSQL"
"EPIC-004: DICOM Viewer & Tools","Develop the high-performance, GPU-accelerated DICOM viewer, including all user-facing manipulation tools like zoom, pan, WW/WL, and annotations.","Epic","Backlog","Critical","graphics-dev@project.com","pm@project.com","",136.1,"Viewer,DirectX,High-Risk,UI","","DICOM Viewer & Tools","DICOM Management & Printing System","","This epic contains the highest technical risk (RISK-TEC-001) and is critical for the application's usability.","","","2024-01-01 09:00","2024-01-01 09:00",""
"US-111: View High-Performance DICOM Images","As a Technician, I want a high-performance viewer to open and display DICOM images of any size, so that I can perform clinical review without lag or delay.","User Story","Backlog","Critical","graphics-dev@project.com","pm@project.com","",41.9,"Viewer,DirectX,High-Risk,Performance","Sprint 4","DICOM Viewer & Tools","DICOM Management & Printing System","","Depends on the successful completion of the DirectX interop PoC (TASK-035).","EPIC-004","TASK-035","2024-01-01 09:00","2024-01-01 09:00","C#,WPF,DirectX,fo-dicom"
"TASK-036: [WI-015] Implement DICOM Pixel Data to GPU Texture Pipeline","Develop the logic to take raw pixel data from a `fo-dicom` `DicomPixelData` object, process it (e.g., apply modality LUT), and upload it to a DirectX texture on the GPU.","Task","Backlog","Critical","graphics-dev@project.com","tech-lead@project.com","",12,"Viewer,DirectX,High-Risk,WI-015","Sprint 4","DICOM Viewer & Tools","DICOM Management & Printing System","","Requires the DirectX interop to be working.","US-111","TASK-035","2024-01-01 09:00","2024-01-01 09:00","C#,fo-dicom,DirectX"
"TASK-037: [WI-015] Develop HLSL Shader for WW/WL and Rendering","Write a simple pixel shader in HLSL that takes the DICOM texture, applies the window width and level formula, and outputs the final grayscale or color value to be rendered on the screen.","Task","Backlog","Critical","graphics-dev@project.com","tech-lead@project.com","",9.3,"Viewer,DirectX,Shader,WI-015","Sprint 4","DICOM Viewer & Tools","DICOM Management & Printing System","","Requires the texture pipeline to provide input to the shader.","US-111","TASK-036","2024-01-01 09:00","2024-01-01 09:00","HLSL,DirectX"
"TASK-038: [WI-015] Implement Progressive Loading Strategy","Modify the image loading logic to first create a low-resolution, downsampled version of the image for immediate display. Then, in a background task, load the full-resolution image data and swap it in when ready.","Task","Backlog","High","graphics-dev@project.com","tech-lead@project.com","",12,"Viewer,Performance,WI-015","Sprint 4","DICOM Viewer & Tools","DICOM Management & Printing System","","Requires the basic image loading pipeline.","US-111","TASK-036","2024-01-01 09:00","2024-01-01 09:00","C#,Multithreading,async/await"
"US-112: Manipulate Images with Viewer Tools","As a Technician, I want to use standard tools like zoom, pan, and window/level adjustment, so that I can properly examine the details of a DICOM image.","User Story","Backlog","Critical","frontend-dev@project.com","pm@project.com","",39.5,"Viewer,Tools,UI,Interaction","Sprint 4","DICOM Viewer & Tools","DICOM Management & Printing System","","Depends on the core viewer being able to render an image (US-111).","EPIC-004","US-111","2024-01-01 09:00","2024-01-01 09:00","WPF,MVVM,C#"
"TASK-039: [WI-016] Implement Viewer State Management for Pan/Zoom","In the `DicomViewerViewModel`, create properties to represent the current view state (e.g., `OffsetX`, `OffsetY`, `Scale`). Implement logic to update these properties based on mouse input.","Task","Backlog","High","frontend-dev@project.com","tech-lead@project.com","",8.3,"Viewer,Tools,UI,WI-016","Sprint 4","DICOM Viewer & Tools","DICOM Management & Printing System","","Requires the rendering pipeline to be in place.","US-112","TASK-037","2024-01-01 09:00","2024-01-01 09:00","WPF,MVVM,C#"
"TASK-040: [WI-016] Implement Interactive Window/Level (WW/WL) Tool","Capture mouse drag events (e.g., right-click + drag) and translate the mouse's X and Y movement into changes to the `WindowWidth` and `WindowLevel` properties on the ViewModel.","Task","Backlog","High","frontend-dev@project.com","tech-lead@project.com","",7.2,"Viewer,Tools,UI,WI-016","Sprint 4","DICOM Viewer & Tools","DICOM Management & Printing System","","Requires the WW/WL shader to be implemented.","US-112","TASK-037","2024-01-01 09:00","2024-01-01 09:00","WPF,MVVM"
"TASK-041: [WI-016] Implement WW/WL Presets","Create a data structure for WW/WL presets (e.g., 'Lung' -> W:1500, L:-600). Populate a menu in the UI with these presets. Selecting a preset should update the `WindowWidth` and `WindowLevel` properties on the ViewModel.","Task","Backlog","High","frontend-dev@project.com","tech-lead@project.com","",4.2,"Viewer,Tools,UI,WI-016","Sprint 4","DICOM Viewer & Tools","DICOM Management & Printing System","","Requires the ViewModel properties for WW/WL to exist.","US-112","TASK-040","2024-01-01 09:00","2024-01-01 09:00","WPF,XAML,MVVM"
"US-110: Query and Retrieve Studies from a Remote PACS","As a Technician, I want to search for studies on a remote PACS and retrieve them to the local system, so that I can access prior imaging or studies from other facilities.","User Story","Backlog","Critical","backend-dev@project.com","pm@project.com","",42.7,"DICOM,C-FIND,C-MOVE,PACS","Sprint 4","DICOM Core Functionality","DICOM Management & Printing System","","Depends on DICOM ingestion (US-109) and PACS configuration (US-117).","EPIC-003","US-109,US-117","2024-01-01 09:00","2024-01-01 09:00","C#,fo-dicom,WPF"
"TASK-032: [WI-014] Implement DicomScuService for C-FIND Operations","Create a `DicomScuService` in the Application layer. Implement a method that takes search criteria, creates a `DicomCFindRequest` using `fo-dicom`, sends it to a remote PACS, and collects the responses.","Task","Backlog","High","backend-dev@project.com","tech-lead@project.com","",10.3,"DICOM,C-FIND,Backend,WI-014","Sprint 4","DICOM Core Functionality","DICOM Management & Printing System","","Core service in the Application library.","US-110","TASK-001","2024-01-01 09:00","2024-01-01 09:00","C#,fo-dicom,DICOM"
"TASK-033: [WI-014] Implement DicomScuService for C-MOVE Operations","Add a method to `DicomScuService` to initiate a C-MOVE. It will create a `DicomCMoveRequest`, specifying the local C-STORE SCP as the destination, and send it to the remote PACS.","Task","Backlog","High","backend-dev@project.com","tech-lead@project.com","",8.3,"DICOM,C-MOVE,Backend,WI-014","Sprint 4","DICOM Core Functionality","DICOM Management & Printing System","","Requires the C-FIND logic and the local C-STORE SCP to be functional.","US-110","TASK-032,TASK-028","2024-01-01 09:00","2024-01-01 09:00","C#,fo-dicom,DICOM"
"TASK-034: [WI-014] Develop PACS Query UI","Create the `PacsQueryView.xaml` and `PacsQueryViewModel.cs`. The UI will have fields for search criteria, a 'Search' button, a results grid, and a 'Retrieve' button.","Task","Backlog","High","frontend-dev@project.com","tech-lead@project.com","",12,"UI,WPF,DICOM,PACS,WI-014","Sprint 4","DICOM Core Functionality","DICOM Management & Printing System","","Requires the SCU service to function.","US-110","TASK-033","2024-01-01 09:00","2024-01-01 09:00","WPF,XAML,MVVM"
"EPIC-006: System Administration & Configuration","Develop all administrative UIs and backend logic for managing system settings, users, and DICOM configurations.","Epic","Backlog","Critical","tech-lead@project.com","pm@project.com","",151.7,"Admin,Configuration,Users,PACS","","System Administration & Configuration","DICOM Management & Printing System","","Provides administrators with the tools needed to manage and maintain the application.","","","2024-01-01 09:00","2024-01-01 09:00",""
"US-103: Create a New User Account","As an Administrator, I want to create a new user account with a username, role, and a system-generated temporary password, so that I can provision access for new staff members.","User Story","Backlog","Critical","backend-dev@project.com","pm@project.com","",36.3,"Admin,Users,Security","Sprint 3, Sprint 5","System Administration & Configuration","DICOM Management & Printing System","","Depends on RBAC (US-102) and Auditing (US-107).","EPIC-006","US-102,US-107","2024-01-01 09:00","2024-01-01 09:00","C#,WPF,EF Core,BCrypt"
"TASK-059: [WI-021] Implement Backend 'Create User' Logic","In the `UserService`, create a method for adding a new user. This method must: check for username uniqueness, generate a secure temporary password, hash it with BCrypt, set the 'force password change' flag, and save the new user.","Task","Backlog","High","backend-dev@project.com","tech-lead@project.com","",8.3,"Admin,Backend,Users,WI-021","Sprint 3","System Administration & Configuration","DICOM Management & Printing System","","Depends on the user data model and hashing utilities.","US-103","TASK-012","2024-01-01 09:00","2024-01-01 09:00","C#,EF Core,BCrypt"
"TASK-060: [WI-009] Integrate Audit Logging for User Creation","Modify the 'Create User' service method to wrap the user creation and the call to `IAuditService.LogEventAsync` in a single database transaction to ensure atomicity.","Task","Backlog","High","backend-dev@project.com","tech-lead@project.com","",4.2,"Admin,Backend,Audit,Security,WI-009","Sprint 3","System Administration & Configuration","DICOM Management & Printing System","","Requires both the user creation logic and the audit service.","US-103","TASK-059,TASK-021","2024-01-01 09:00","2024-01-01 09:00","C#,EF Core"
"TASK-057: [WI-021] Develop User Management View and ViewModel","Create the `UserManagementView.xaml` and its ViewModel. The UI will feature a `DataGrid` to list users and buttons for 'Add', 'Edit', and 'Delete'. The ViewModel will load the list of users from a service.","Task","Backlog","High","frontend-dev@project.com","tech-lead@project.com","",7.2,"Admin,UI,Users,WI-021","Sprint 5","System Administration & Configuration","DICOM Management & Printing System","","This view is part of the Admin area, which depends on RBAC.","US-103","TASK-018","2024-01-01 09:00","2024-01-01 09:00","WPF,XAML,MVVM"
"TASK-058: [WI-021] Implement 'Add User' Dialog and ViewModel","Create a separate view/ViewModel for the 'Add User' modal dialog. It will contain fields for username and a role selector. The 'Create' button will invoke the user creation service.","Task","Backlog","High","frontend-dev@project.com","tech-lead@project.com","",7.2,"Admin,UI,Users,WI-021","Sprint 5","System Administration & Configuration","DICOM Management & Printing System","","Launched from the main User Management view.","US-103","TASK-057","2024-01-01 09:00","2024-01-01 09:00","WPF,XAML,MVVM"
"US-104: Edit a User's Role or Status","As an Administrator, I want to edit an existing user's role or disable their account, so that I can manage user permissions and revoke access when necessary.","User Story","Backlog","Critical","backend-dev@project.com","pm@project.com","",24.3,"Admin,Users,Security","Sprint 3, Sprint 5","System Administration & Configuration","DICOM Management & Printing System","","Depends on RBAC (US-102) and Auditing (US-107).","EPIC-006","US-102,US-107","2024-01-01 09:00","2024-01-01 09:00","C#,WPF,EF Core"
"TASK-062: [WI-021] Implement Backend 'Update User' Logic","In the `UserService`, create a method to update a user's role and status. Implement the business rule check to prevent demoting or disabling the last active administrator.","Task","Backlog","High","backend-dev@project.com","tech-lead@project.com","",8.3,"Admin,Backend,Users,WI-021","Sprint 3","System Administration & Configuration","DICOM Management & Printing System","","Extends the existing UserService.","US-104","TASK-059","2024-01-01 09:00","2024-01-01 09:00","C#,EF Core"
"TASK-063: [WI-009] Integrate Audit Logging for User Updates","Modify the 'Update User' service method to log user modification events to the audit trail. The log must include the old and new values for the changed fields. This must be part of the same transaction.","Task","Backlog","High","backend-dev@project.com","tech-lead@project.com","",5,"Admin,Backend,Audit,Security,WI-009","Sprint 3","System Administration & Configuration","DICOM Management & Printing System","","Requires the user update logic and the audit service.","US-104","TASK-062,TASK-021","2024-01-01 09:00","2024-01-01 09:00","C#,EF Core"
"TASK-061: [WI-021] Implement 'Edit User' Dialog and Logic","Create the UI and ViewModel for an 'Edit User' dialog. It should be pre-populated with the selected user's data. Allow editing of the user's Role and IsActive status.","Task","Backlog","High","frontend-dev@project.com","tech-lead@project.com","",8.3,"Admin,UI,Users,WI-021","Sprint 5","System Administration & Configuration","DICOM Management & Printing System","","Depends on the main user management view.","US-104","TASK-057","2024-01-01 09:00","2024-01-01 09:00","WPF,XAML,MVVM"
"US-105: Delete a User Account","As an Administrator, I want to permanently delete a user account, so that I can irrevocably remove a former employee's access in line with security policies.","User Story","Backlog","High","backend-dev@project.com","pm@project.com","",14.8,"Admin,Users,Security","Sprint 3, Sprint 5","System Administration & Configuration","DICOM Management & Printing System","","Depends on RBAC (US-102) and Auditing (US-107).","EPIC-006","US-102,US-107","2024-01-01 09:00","2024-01-01 09:00","C#,WPF,EF Core"
"TASK-065: [WI-021] Implement Backend 'Delete User' Logic with Auditing","In the `UserService`, create a method to delete a user. It must prevent self-deletion. The user deletion and the 'User Deleted' audit log entry must be created in a single database transaction.","Task","Backlog","High","backend-dev@project.com","tech-lead@project.com","",8.3,"Admin,Backend,Users,Audit,WI-021","Sprint 3","System Administration & Configuration","DICOM Management & Printing System","","Requires UserService and AuditService.","US-105","TASK-062,TASK-021","2024-01-01 09:00","2024-01-01 09:00","C#,EF Core"
"TASK-064: [WI-021] Implement 'Delete User' UI and Confirmation","Add a 'Delete' button to the user list. Clicking it should show a confirmation dialog that clearly states the action is irreversible. The 'Delete' button for the currently logged-in admin should be disabled.","Task","Backlog","High","frontend-dev@project.com","tech-lead@project.com","",4.2,"Admin,UI,Users,WI-021","Sprint 5","System Administration & Configuration","DICOM Management & Printing System","","Adds to the existing User Management view.","US-105","TASK-057","2024-01-01 09:00","2024-01-01 09:00","WPF,MVVM"
"US-106: Reset a User's Password","As an Administrator, I want to reset a user's password, so that I can restore their access if they have forgotten their credentials.","User Story","Backlog","High","backend-dev@project.com","pm@project.com","",16.5,"Admin,Users,Security","Sprint 3, Sprint 5","System Administration & Configuration","DICOM Management & Printing System","","Depends on RBAC (US-102) and Auditing (US-107).","EPIC-006","US-102,US-107","2024-01-01 09:00","2024-01-01 09:00","C#,WPF,EF Core,BCrypt"
"TASK-067: [WI-021] Implement Backend 'Reset Password' Logic with Auditing","In `UserService`, create a method to reset a password. It will generate a new secure temporary password, hash it, update the user record, and set the `isTemporaryPassword` flag. This action and its audit log must be a single transaction.","Task","Backlog","High","backend-dev@project.com","tech-lead@project.com","",7.2,"Admin,Backend,Users,Security,WI-021","Sprint 3","System Administration & Configuration","DICOM Management & Printing System","","Extends the UserService.","US-106","TASK-065","2024-01-01 09:00","2024-01-01 09:00","C#,EF Core,BCrypt"
"TASK-066: [WI-021] Implement 'Reset Password' UI Flow","Add a 'Reset Password' button to the user list. On click, show a confirmation dialog. On confirmation, call the backend service. On success, display the returned temporary password in a success dialog with a 'Copy to Clipboard' button.","Task","Backlog","High","frontend-dev@project.com","tech-lead@project.com","",7.2,"Admin,UI,Users,WI-021","Sprint 5","System Administration & Configuration","DICOM Management & Printing System","","Adds to the existing User Management view.","US-106","TASK-057","2024-01-01 09:00","2024-01-01 09:00","WPF,MVVM"
"US-117: Configure and Verify PACS Connections","As an Administrator, I want to add, edit, and verify connections to remote PACS servers, so that technicians can query and retrieve studies from them.","User Story","Backlog","Critical","backend-dev@project.com","pm@project.com","",20.8,"Admin,PACS,DICOM,Configuration","Sprint 3, Sprint 5","System Administration & Configuration","DICOM Management & Printing System","","Depends on RBAC (US-102) and provides configuration for C-FIND/C-MOVE (US-110).","EPIC-006","US-102,US-110","2024-01-01 09:00","2024-01-01 09:00","WPF,EF Core,fo-dicom"
"TASK-069: [WI-022] Develop PACS Configuration UI and ViewModel","Create the `PacsConfigView.xaml` and ViewModel. The UI will have a list of configured PACS and a form to add/edit a configuration. The form will include fields for AE Title, IP, Port, and a 'Verify' button.","Task","Backlog","High","frontend-dev@project.com","tech-lead@project.com","",10.3,"Admin,UI,PACS,WI-022","Sprint 5","System Administration & Configuration","DICOM Management & Printing System","","Requires the data model for PACS configs.","US-117","TASK-068","2024-01-01 09:00","2024-01-01 09:00","WPF,XAML,MVVM"
"TASK-070: [WI-014] Implement C-ECHO Verification Logic","Extend the `DicomScuService` with a method to perform a C-ECHO verification. The `PacsConfigViewModel` will call this method when the 'Verify' button is clicked and display the success/failure result.","Task","Backlog","High","backend-dev@project.com","tech-lead@project.com","",5,"Admin,Backend,DICOM,WI-014","Sprint 3","System Administration & Configuration","DICOM Management & Printing System","","Extends the existing DicomScuService.","US-117","TASK-032","2024-01-01 09:00","2024-01-01 09:00","C#,fo-dicom"
"US-118: Configure Automated DICOM Routing Rules","As an Administrator, I want to create rules to automatically route incoming studies to specific folders based on their metadata, so that our storage is organized and automated.","User Story","Backlog","High","backend-dev@project.com","pm@project.com","",17.5,"Admin,DICOM,Automation,Configuration","Sprint 3, Sprint 5","System Administration & Configuration","DICOM Management & Printing System","","Depends on RBAC (US-102) and DICOM ingestion (US-109).","EPIC-006","US-102,US-109","2024-01-01 09:00","2024-01-01 09:00","WPF,EF Core,C#"
"TASK-073: [WI-013] Integrate Routing Rule Evaluation into Ingestion Pipeline","Modify the `DicomPersistenceService` (or a new routing service). Before moving files to permanent storage, it must fetch and evaluate the list of routing rules against the incoming study's metadata. If a rule matches, use its destination path.","Task","Backlog","High","backend-dev@project.com","tech-lead@project.com","",6,"Admin,Backend,DICOM,WI-013","Sprint 3","System Administration & Configuration","DICOM Management & Printing System","","Modifies the ingestion persistence logic.","US-118","TASK-031,TASK-071","2024-01-01 09:00","2024-01-01 09:00","C#,EF Core"
"TASK-072: [WI-022] Develop Auto-Routing Rule UI","Create the `AutoRoutingView.xaml` and ViewModel for Admins to perform CRUD operations on routing rules. The UI should allow defining criteria (e.g., key-value pairs for DICOM tags) and a destination path.","Task","Backlog","High","frontend-dev@project.com","tech-lead@project.com","",8.3,"Admin,UI,DICOM,WI-022","Sprint 5","System Administration & Configuration","DICOM Management & Printing System","","Requires the routing rule data model.","US-118","TASK-071","2024-01-01 09:00","2024-01-01 09:00","WPF,XAML,MVVM"
"US-113: Create and Save Annotations","As a Technician, I want to draw annotations and measurements on an image and save them, so that I can highlight findings and communicate them to others.","User Story","Backlog","High","frontend-dev@project.com","pm@project.com","",49.4,"Viewer,Annotations,DICOM,High-Risk","Sprint 5","DICOM Viewer & Tools","DICOM Management & Printing System","","Depends on the core viewer (US-111).","EPIC-004","US-111","2024-01-01 09:00","2024-01-01 09:00","WPF,fo-dicom,DICOM"
"TASK-042: [WI-017] Implement Annotation Drawing on a WPF Canvas","Overlay a transparent `Canvas` on top of the DICOM viewer control. Implement the logic for drawing shapes (lines, rectangles, text) on this canvas based on mouse input.","Task","Backlog","High","frontend-dev@project.com","tech-lead@project.com","",12,"Viewer,Annotations,UI,WI-017","Sprint 5","DICOM Viewer & Tools","DICOM Management & Printing System","","Requires the viewer's pan/zoom state to correctly transform the annotation canvas.","US-113","TASK-039","2024-01-01 09:00","2024-01-01 09:00","WPF,C#,MVVM"
"TASK-043: [WI-017] Implement Measurement Calculation","For measurement tools (e.g., length), implement the logic to convert pixel coordinates from the drawing into real-world units (mm) using the `PixelSpacing` DICOM tag from the image metadata.","Task","Backlog","High","frontend-dev@project.com","tech-lead@project.com","",6.2,"Viewer,Annotations,DICOM,WI-017","Sprint 5","DICOM Viewer & Tools","DICOM Management & Printing System","","Requires the drawing tools to be in place.","US-113","TASK-042","2024-01-01 09:00","2024-01-01 09:00","C#,fo-dicom"
"TASK-044: [WI-017] Implement GSPS Object Creation Service","Create a service that takes a collection of annotation objects (representing what's on the canvas) and uses `fo-dicom` to construct a valid DICOM Grayscale Softcopy Presentation State (GSPS) object.","Task","Backlog","High","backend-dev@project.com","tech-lead@project.com","",14.3,"Viewer,Annotations,DICOM,High-Risk,WI-017","Sprint 5","DICOM Viewer & Tools","DICOM Management & Printing System","","Requires the annotation data structure to be defined.","US-113","TASK-042","2024-01-01 09:00","2024-01-01 09:00","C#,fo-dicom,DICOM Standard"
"TASK-045: [WI-017] Implement GSPS Parsing and Display Logic","Extend the viewer to detect if a loaded series has associated GSPS objects. If so, parse the GSPS file, extract the graphic annotation sequences, and render them on the annotation canvas.","Task","Backlog","High","frontend-dev@project.com","tech-lead@project.com","",12,"Viewer,Annotations,DICOM,High-Risk,WI-017","Sprint 5","DICOM Viewer & Tools","DICOM Management & Printing System","","Depends on having a way to create GSPS files for testing.","US-113","TASK-044","2024-01-01 09:00","2024-01-01 09:00","C#,fo-dicom,WPF"
"US-119: Monitor Real-Time System Health","As an Administrator, I want a single dashboard to view the real-time health of critical system components, so that I can proactively identify and troubleshoot issues.","User Story","Backlog","High","backend-dev@project.com","pm@project.com","",34.2,"Admin,Monitoring,Dashboard","Sprint 5","System Administration & Configuration","DICOM Management & Printing System","","Depends on RBAC (US-102) and core IPC (TS-001).","EPIC-006","US-102,TS-001","2024-01-01 09:00","2024-01-01 09:00","C#,WPF,IPC"
"TASK-074: [WI-023] Implement System Health Probe Hosted Service","In the Windows Service, create an `IHostedService` that runs on a periodic timer (e.g., every 30 seconds). In each tick, it will check connectivity to PostgreSQL, RabbitMQ, query queue depths, and check disk space.","Task","Backlog","High","backend-dev@project.com","tech-lead@project.com","",10.3,"Admin,Monitoring,Service,WI-023","Sprint 5","System Administration & Configuration","DICOM Management & Printing System","","Runs within the Windows Service.","US-119","TASK-003","2024-01-01 09:00","2024-01-01 09:00","C#,.NET Hosted Services"
"TASK-075: [WI-023] Expose Health Status from Service to Client","Extend the Named Pipe IPC mechanism. When the client sends a 'HEALTH' message, the server will respond with a serialized `SystemHealthDto` object containing the latest cached health status.","Task","Backlog","High","backend-dev@project.com","tech-lead@project.com","",5,"Admin,Monitoring,IPC,WI-023","Sprint 5","System Administration & Configuration","DICOM Management & Printing System","","Extends the Named Pipe server and uses the health probe's data.","US-119","TASK-008,TASK-074","2024-01-01 09:00","2024-01-01 09:00","C#,System.IO.Pipes"
"TASK-076: [WI-023] Develop System Health Dashboard UI","Create the `SystemHealthDashboardView.xaml` and ViewModel. The ViewModel will use the Named Pipe client to request the health status from the service and bind the results to UI elements (indicators, text blocks, progress bars).","Task","Backlog","High","frontend-dev@project.com","tech-lead@project.com","",10.3,"Admin,Monitoring,UI,WI-023","Sprint 5","System Administration & Configuration","DICOM Management & Printing System","","Requires the client-side IPC to fetch data.","US-119","TASK-075,TASK-009","2024-01-01 09:00","2024-01-01 09:00","WPF,XAML,MVVM"
"EPIC-005: Printing & Exporting","Develop the complete workflow for creating physical printouts and digital exports (PDF), including a rich print preview UI and asynchronous backend processing.","Epic","Backlog","Critical","frontend-dev@project.com","pm@project.com","",87,"Printing,PDF,Export,UI","","Printing & Exporting","DICOM Management & Printing System","","Delivers a key set of features for sharing and distributing imaging results.","","","2024-01-01 09:00","2024-01-01 09:00",""
"US-114: Prepare a Custom Print Layout","As a Technician, I want a print preview screen to arrange images, select layouts, and add custom branding, so that I can create professional and clear physical or digital printouts.","User Story","Backlog","Critical","frontend-dev@project.com","pm@project.com","",35.8,"Printing,UI,Layout","Sprint 6","Printing & Exporting","DICOM Management & Printing System","","Depends on the ability to view an image (US-111).","EPIC-005","US-111","2024-01-01 09:00","2024-01-01 09:00","WPF,XAML,MVVM"
"TASK-046: [WI-018] Develop Print Preview View and ViewModel","Create the `PrintPreviewView.xaml` and `PrintPreviewViewModel.cs`. Set up the basic layout with areas for the page preview, layout options, and branding settings.","Task","Backlog","High","frontend-dev@project.com","tech-lead@project.com","",8.3,"UI,WPF,Printing,WI-018","Sprint 6","Printing & Exporting","DICOM Management & Printing System","","Self-contained UI feature.","US-114","","2024-01-01 09:00","2024-01-01 09:00","WPF,XAML,MVVM"
"TASK-047: [WI-018] Implement Layout Templates and Page Preview","Implement logic to render a preview of the printed page based on the selected layout template (e.g., '2x2 grid'). Use `ItemsControl` with a `Grid` or `WrapPanel` and `DataTemplate`s to display the images in the correct positions.","Task","Backlog","High","frontend-dev@project.com","tech-lead@project.com","",12,"UI,WPF,Printing,WI-018","Sprint 6","Printing & Exporting","DICOM Management & Printing System","","Requires the base Print Preview view.","US-114","TASK-046","2024-01-01 09:00","2024-01-01 09:00","WPF,XAML"
"TASK-048: [WI-018] Implement Drag-and-Drop Image Rearrangement","Add drag-and-drop functionality to the layout preview, allowing users to move an image from one cell to another. This will involve using adorners and handling mouse events to update the underlying collection of images.","Task","Backlog","High","frontend-dev@project.com","tech-lead@project.com","",10.3,"UI,WPF,Printing,WI-018","Sprint 6","Printing & Exporting","DICOM Management & Printing System","","Requires the layout preview grid to be implemented.","US-114","TASK-047","2024-01-01 09:00","2024-01-01 09:00","WPF,C#"
"TASK-049: [WI-018] Implement Branding and Dynamic Text Fields","Add UI controls to allow users to upload a logo image and define custom text for headers/footers. Implement the logic to replace dynamic variables (e.g., `[PatientID]`) with actual DICOM metadata.","Task","Backlog","High","frontend-dev@project.com","tech-lead@project.com","",5.2,"UI,WPF,Printing,WI-018","Sprint 6","Printing & Exporting","DICOM Management & Printing System","","Requires the preview rendering to be in place.","US-114","TASK-047","2024-01-01 09:00","2024-01-01 09:00","WPF,MVVM,C#"
"US-115: Print a Study Asynchronously","As a Technician, I want to send a print job to a physical printer without locking up the application, so that I can continue working while the print job is processed in the background.","User Story","Backlog","Critical","backend-dev@project.com","pm@project.com","",27.2,"Printing,Asynchronous,IPC","Sprint 6","Printing & Exporting","DICOM Management & Printing System","","Depends on the Print Preview UI (US-114) and core IPC (TS-001).","EPIC-005","US-114,TS-001","2024-01-01 09:00","2024-01-01 09:00","WPF,RabbitMQ,System.Printing"
"TASK-050: [WI-019] Implement Service Status Check for Print Button","In the `PrintPreviewViewModel`, implement a periodic or on-load check of the background service status using the `NamedPipeClient`. Bind the `IsEnabled` property of the 'Print' button to the result of this check.","Task","Backlog","High","frontend-dev@project.com","tech-lead@project.com","",5,"UI,Printing,IPC,WI-019","Sprint 6","Printing & Exporting","DICOM Management & Printing System","","Requires the Named Pipe client and the Print Preview UI.","US-115","TASK-009,TASK-046","2024-01-01 09:00","2024-01-01 09:00","WPF,MVVM,C#"
"TASK-051: [WI-019] Implement Print Job Submission to RabbitMQ","When the 'Print' button is clicked, serialize the entire state of the `PrintPreviewViewModel` (or a dedicated DTO) into a JSON message and publish it to a durable, persistent 'print_jobs' queue in RabbitMQ.","Task","Backlog","High","frontend-dev@project.com","tech-lead@project.com","",6,"Printing,IPC,RabbitMQ,WI-019","Sprint 6","Printing & Exporting","DICOM Management & Printing System","","Requires the RabbitMQ producer and the Print button logic.","US-115","TASK-005,TASK-050","2024-01-01 09:00","2024-01-01 09:00","C#,MVVM,RabbitMQ"
"TASK-052: [WI-020] Implement Print Job Consumer in Windows Service","Create a `PrintJobConsumer` hosted service that subscribes to the 'print_jobs' queue. It will deserialize the `PrintJobDto` message.","Task","Backlog","High","backend-dev@project.com","tech-lead@project.com","",6,"Printing,RabbitMQ,Service,WI-020","Sprint 6","Printing & Exporting","DICOM Management & Printing System","","Requires the consumer base class and the DTO definition.","US-115","TASK-007,TASK-051","2024-01-01 09:00","2024-01-01 09:00","C#,RabbitMQ"
"TASK-053: [WI-020] Implement Print Spooling Logic","Within the `PrintJobConsumer`, use the received job data to construct a `FixedDocument` or similar WPF visual object. Then, use the `System.Printing` API to send this document to the specified Windows printer.","Task","Backlog","High","backend-dev@project.com","tech-lead@project.com","",10.3,"Printing,Service,Backend,WI-020","Sprint 6","Printing & Exporting","DICOM Management & Printing System","","Requires the print job consumer to be implemented.","US-115","TASK-052","2024-01-01 09:00","2024-01-01 09:00","C#,WPF Printing,System.Printing"
"US-116: Export a Study to a Secure PDF","As a Technician, I want to export my print layout as a secure, password-protected PDF/A-compliant file, so that I can share a digital copy of the study securely.","User Story","Backlog","High","backend-dev@project.com","pm@project.com","",24,"PDF,Export,Security","Sprint 6","Printing & Exporting","DICOM Management & Printing System","","Depends on the Print Preview UI (US-114) and core IPC (TS-001).","EPIC-005","US-114,TS-001","2024-01-01 09:00","2024-01-01 09:00","WPF,RabbitMQ,QuestPDF"
"TASK-054: [WI-019] Implement PDF Export Job Submission","Add an 'Export to PDF' button to the `PrintPreviewView`. When clicked, it should open a 'Save File' dialog. The logic will then serialize the print job DTO (similar to printing) and publish it to a dedicated 'pdf_export_jobs' RabbitMQ queue.","Task","Backlog","High","frontend-dev@project.com","tech-lead@project.com","",6,"PDF,Export,UI,WI-019","Sprint 6","Printing & Exporting","DICOM Management & Printing System","","Reuses the DTO and publishing mechanism from the print feature.","US-116","TASK-051","2024-01-01 09:00","2024-01-01 09:00","WPF,MVVM,RabbitMQ"
"TASK-055: [WI-020] Implement PDF Generation Consumer","Create a `PdfJobConsumer` (or extend the existing `PrintJobConsumer`) to process messages from the 'pdf_export_jobs' queue. It will deserialize the job DTO.","Task","Backlog","High","backend-dev@project.com","tech-lead@project.com","",4.2,"PDF,Export,Service,WI-020","Sprint 6","Printing & Exporting","DICOM Management & Printing System","","Requires messages to be published to the queue.","US-116","TASK-054","2024-01-01 09:00","2024-01-01 09:00","C#,RabbitMQ"
"TASK-056: [WI-020] Implement PDF Generation with QuestPDF","Use the QuestPDF library to programmatically generate a PDF document that matches the layout, branding, and content from the job DTO. Implement PDF/A-3 compliance and AES-256 encryption.","Task","Backlog","High","backend-dev@project.com","tech-lead@project.com","",12,"PDF,Export,Service,WI-020","Sprint 6","Printing & Exporting","DICOM Management & Printing System","","Requires the consumer to provide the job data.","US-116","TASK-055","2024-01-01 09:00","2024-01-01 09:00","C#,QuestPDF"
"EPIC-010: Deployment & Operations","Cover all tasks related to building, packaging, deploying, and documenting the application to ensure it can be successfully installed and maintained by system administrators.","Epic","Backlog","Critical","devops@project.com","pm@project.com","",48.8,"Deployment,Installer,Documentation,DevOps","","Deployment & Operations","DICOM Management & Printing System","","This epic is essential for the product to be deliverable to customers.","","","2024-01-01 09:00","2024-01-01 09:00",""
"US-120: Install the Application and Service","As a System Administrator, I want to use a single, signed MSIX installer to reliably deploy the client application and its background Windows Service, so that the deployment process is simple and repeatable.","User Story","Backlog","Critical","devops@project.com","pm@project.com","",32.5,"Deployment,Installer,MSIX,High-Risk","Sprint 6","Deployment & Operations","DICOM Management & Printing System","","Depends on the core application being complete (TS-001).","EPIC-010","TS-001","2024-01-01 09:00","2024-01-01 09:00","MSIX,PowerShell,DevOps"
"TASK-077: [WI-024] Create and Configure MSIX Packaging Project","Add a 'Windows Application Packaging Project' to the solution. Configure it to reference the WPF Client project. Set up the package manifest with application details, capabilities, and icons.","Task","Backlog","High","devops@project.com","tech-lead@project.com","",6,"Deployment,MSIX,Installer,WI-024","Sprint 6","Deployment & Operations","DICOM Management & Printing System","","Requires the client project to package.","US-120","TASK-001","2024-01-01 09:00","2024-01-01 09:00","MSIX,Visual Studio"
"TASK-078: [WI-024] Integrate Windows Service Installation","Integrate the Windows Service into the MSIX package. This typically involves using the 'Desktop Bridge' extensions to declare the service in the package manifest, so that MSIX handles its registration and lifecycle.","Task","Backlog","High","devops@project.com","tech-lead@project.com","",8.3,"Deployment,MSIX,Installer,Service,WI-024","Sprint 6","Deployment & Operations","DICOM Management & Printing System","","Builds upon the basic MSIX package.","US-120","TASK-077","2024-01-01 09:00","2024-01-01 09:00","MSIX,XML"
"TASK-079: [WI-024] Implement Prerequisite Check Logic","Create a mechanism to run pre-install checks. This could be a custom UI launched by the installer or a PowerShell script. The logic must attempt to connect to PostgreSQL and RabbitMQ using user-provided details.","Task","Backlog","Critical","devops@project.com","tech-lead@project.com","",12,"Deployment,MSIX,Installer,High-Risk,WI-024","Sprint 6","Deployment & Operations","DICOM Management & Printing System","","This logic needs to be integrated into the installer package.","US-120","TASK-078","2024-01-01 09:00","2024-01-01 09:00","PowerShell,MSIX,C#"
"US-121: Access Deployment and Admin Guides","As a System Administrator, I want to have clear and concise documentation for deploying and managing the application, so that I can perform my duties efficiently and correctly without needing direct developer support.","User Story","Backlog","High","tech-writer@project.com","pm@project.com","",16.3,"Documentation","Sprint 6","Deployment & Operations","DICOM Management & Printing System","","Should be finalized as features are completed.","EPIC-010","","2024-01-01 09:00","2024-01-01 09:00","Technical Writing"
"TASK-080: [WI-026] Write Deployment Guide","Create the `DeploymentGuide.md` document. It must cover system requirements, prerequisite installation steps for PostgreSQL (including enabling pgcrypto) and RabbitMQ, and a step-by-step guide for running the MSIX installer.","Task","Backlog","High","tech-writer@project.com","pm@project.com","",8.3,"Documentation,WI-026","Sprint 6","Deployment & Operations","DICOM Management & Printing System","","Should be written once the installer functionality is finalized.","US-121","TASK-079","2024-01-01 09:00","2024-01-01 09:00","Technical Writing"
"TASK-081: [WI-026] Write Administrator's Guide","Create the `AdminGuide.md` document. It must cover all features in the 'Administration' section of the application, including User Management, PACS Configuration, Auto-Routing, and interpreting the System Health Dashboard.","Task","Backlog","High","tech-writer@project.com","pm@project.com","",8.3,"Documentation,WI-026","Sprint 6","Deployment & Operations","DICOM Management & Printing System","","Should be written once the admin UIs are complete.","US-121","TASK-076","2024-01-01 09:00","2024-01-01 09:00","Technical Writing"