task_id,task_name,primary_skill,secondary_skill,complexity_level,estimated_hours,required_experience,team_size,dependencies,critical_path,resource_notes,alternative_approach
T-001,"Create VS Solution and Project Scaffolding",Backend Development,DevOps,Low,4,Mid,1,"",Yes,"Foundation task for all subsequent development. Must be completed first to unblock the team.","Use a .NET template script (`dotnet new`) to automate scaffolding for consistency across projects."
T-002,"Implement Generic Host and DI for WPF Client",Backend Development,Frontend Development,Medium,8.3,Mid,1,T-001,Yes,"Establishes the core application pattern for the WPF client, ensuring testability and maintainability.","Use a more lightweight DI container if Microsoft's proves too heavy, but this is the standard modern approach."
T-003,"Implement Generic Host for Windows Service",Backend Development,DevOps,Medium,8,Mid,1,T-001,Yes,"Establishes the core application pattern for the background service. Critical for service lifecycle management.","For simpler services, a basic `ServiceBase` implementation could be used, but Generic Host is superior for DI and logging integration."
T-004,"Implement Serilog PHI Redaction Enricher",Backend Development,Quality Assurance,Critical,8.3,Senior,1,"",Yes,"RISK-009: Critical HIPAA compliance feature. Incomplete redaction logic could lead to a data breach. Requires developer with security focus.","Use a commercial, pre-built PHI redaction library if available and vetted. Otherwise, implement manually with a focus on extensible regex patterns."
T-005,"Write Unit Tests for PHI Redaction Enricher",Quality Assurance,Backend Development,Medium,6.3,Mid,1,T-004,Yes,"Tests must be comprehensive to ensure no PHI leakage, covering all known data patterns and edge cases.","N/A - Unit testing is mandatory for this critical security feature."
T-006,"Research and select library for Windows Credential Manager access",Backend Development,DevOps,Medium,6.3,Senior,1,"",Yes,"RISK-012: Choice of library has significant security implications. A vetted, well-maintained library is preferred over raw P/Invoke to reduce risk.","If no suitable library is found, use P/Invoke calls wrapped in a well-tested service, but this increases implementation risk and effort."
T-007,"Define all POCO Entities for the DicomAppDB",Backend Development,Data Engineering,High,12,Mid,1,"",Yes,"Defines the core data model. Accuracy here is crucial to avoid refactoring later. Must align perfectly with the provided ERD.","Use an EF Core Power Tools or similar to reverse-engineer entities from a pre-defined database schema, but this task assumes a code-first approach."
T-008,"Implement ApplicationDbContext with Fluent API configuration",Backend Development,Data Engineering,High,12,Mid,1,T-007,Yes,"Central point for all database configuration. Requires careful implementation of constraints and relationships.","Use Data Annotations on POCO entities for simpler configurations, but Fluent API provides more control and is better for complex models."
T-009,"Implement Generic Repository Pattern (Interfaces and Base Class)",Backend Development,Data Engineering,Medium,8,Senior,1,T-008,Yes,"Architectural task that establishes a consistent data access pattern. A good implementation reduces boilerplate code significantly.","Directly use the `DbContext` in services. This is simpler initially but leads to less maintainable code and business logic leakage."
T-010,"Implement Specific Repositories (e.g., IStudyRepository)",Backend Development,Data Engineering,Medium,8.3,Mid,1,T-009,Yes,"Implements the specific data queries needed by the application services, extending the generic pattern.","Add all query methods directly to the `DbContext` as extension methods. This can be less organized than specific repositories."
T-011,"Write Integration Tests for Repositories",Quality Assurance,Backend Development,High,12,Mid,1,T-010,Yes,"Crucial for verifying that the data access layer works correctly against a real database. Use Testcontainers for reliable test environments.","Rely solely on unit tests with mocked repositories. This is faster but doesn't validate actual database queries or mappings."
T-012,"Implement BCrypt password hashing and verification utility",Backend Development,Quality Assurance,Medium,6.3,Senior,1,"",Yes,"Critical security task. Must use a standard, well-vetted BCrypt library. Incorrect implementation is a major vulnerability.","Use a different hashing algorithm like Argon2, but BCrypt is a very strong and widely accepted standard."
T-013,"Implement RabbitMQ Connection and Channel Management Service",Backend Development,DevOps,High,10.3,Senior,1,"T-002;T-003",Yes,"RISK-003, RISK-008: Foundational IPC task. Robust connection recovery is complex but essential for system reliability.","Use a simpler message queue if requirements allow, but RabbitMQ is specified. Alternatively, use a higher-level library like MassTransit to handle connection management."
T-014,"Implement a generic RabbitMQ Publisher Service for the Client",Backend Development,Frontend Development,Medium,6.3,Mid,1,T-013,Yes,"Creates a reusable component for sending commands from the client to the service, a core part of the architecture.","Create specific publisher methods for each command type. This is less reusable but might be simpler for a small number of commands."
T-015,"Implement a base RabbitMQ Consumer Hosted Service",Backend Development,DevOps,High,12,Senior,1,T-013,Yes,"RISK-008: Architectural task to create a reusable, robust consumer. Needs to handle message deserialization, error handling, and acknowledgement logic.","Implement each consumer from scratch. This leads to code duplication and inconsistent error handling."
T-016,"Implement Topology Declaration for Queues, Exchanges, DLX, and DLQ",Backend Development,DevOps,Medium,8.7,Mid,1,T-013,Yes,"Ensures the message broker is correctly configured for durable messaging and dead-lettering. Should be idempotent.","Configure the topology manually in the RabbitMQ management UI. This is brittle and not suitable for automated deployments."
T-017,"Implement Named Pipe Server in Windows Service",Backend Development,DevOps,High,10.3,Senior,1,T-003,Yes,"Used for critical, low-latency status checks. Requires careful handling of streams and threading to be reliable.","Use a lightweight HTTP server (e.g., Kestrel) within the service for status checks. This is more complex to set up but more flexible than Named Pipes."
T-018,"Implement Named Pipe Client Service in WPF App",Backend Development,Frontend Development,Medium,8.7,Mid,1,T-002,Yes,"Encapsulates the client-side logic for synchronous IPC. Must handle timeouts gracefully to prevent UI freezing.","Expose the PipeStream logic directly in ViewModels. This violates MVVM principles and makes the code harder to test."
T-019,"Integrate Serilog and Redaction into Client and Service",Backend Development,DevOps,Medium,9.3,Mid,1,"T-002;T-003;T-005",Yes,"Applies the critical PHI redaction feature to both applications. Configuration must be correct to ensure no data leaks.","Use a different logging framework, but Serilog is powerful and specified. Deferring redaction is not an option due to compliance."
T-020,"Create initial EF Core Migration and apply to database",Backend Development,Data Engineering,Low,4.3,Mid,1,T-008,Yes,"Generates the initial database schema. The migration script must be reviewed for correctness before applying.","Use `EnsureCreated()` for development, but this doesn't support migrations and is unsuitable for production."
T-021,"Write Integration Tests for Named Pipe Communication",Quality Assurance,Backend Development,Medium,8.3,Mid,1,"T-017;T-018",Yes,"Verifies the entire request/reply flow for the synchronous IPC channel, including timeout and failure scenarios.","Perform manual testing only. This is unreliable and slow for regression testing."
T-022,"Implement CredentialManagerService for storing/retrieving secrets",Backend Development,DevOps,Medium,8.7,Senior,1,T-006,Yes,"RISK-012: Critical security task to avoid storing secrets in config files. Implementation must be robust.","Store encrypted secrets in `appsettings.json` using .NET's secret management tools. This is less secure than the Windows Credential Manager for production."
T-023,"Write Unit Tests for CredentialManagerService",Quality Assurance,Backend Development,Medium,6,Mid,1,T-022,Yes,"Ensures the service logic for handling success, failure, and not-found scenarios works correctly without needing the real API.","Skip unit tests and rely only on integration tests. This makes it harder to isolate bugs in the service logic itself."
T-024,"Integrate CredentialManagerService into application configuration",Backend Development,DevOps,Medium,6.5,Senior,1,"T-002;T-003;T-022",Yes,"Final step to make the application use securely stored credentials. The app will fail to start if this is implemented incorrectly.","Pass credentials as environment variables. This is a common pattern but can be less secure than the Credential Manager on a shared machine."
T-025,"Write Integration Test for DLQ Mechanism",Quality Assurance,Backend Development,High,12,Senior,1,T-016,Yes,"RISK-008: Complex test that validates the entire failure-handling pipeline, a key reliability feature.","Manually test the DLQ mechanism. This is time-consuming and difficult to automate and repeat reliably."
T-026,"Develop LoginView in WPF with XAML",Frontend Development,Design,Medium,6,Mid,1,T-002,Yes,"Creates the entry point UI for the application. Must be professional and follow standard usability conventions.","Use a simpler, non-styled UI. This would look unprofessional and deviate from the Material Design requirement."
T-027,"Implement LoginViewModel with validation and commands",Frontend Development,Backend Development,Medium,8,Mid,1,T-026,Yes,"Contains the client-side logic for the login process. Implements the MVVM pattern for separation of concerns.","Place login logic in the View's code-behind. This is a bad practice that makes the application difficult to test and maintain."
T-028,"Implement AuthenticationService",Backend Development,Quality Assurance,Medium,8.3,Mid,1,"T-012;T-010",Yes,"Core service that orchestrates user validation. Must be secure and efficient.","Combine authentication logic directly into the LoginViewModel. This couples the UI tightly to the data access layer."
T-029,"Write Integration Test for Authentication Flow",Quality Assurance,Backend Development,High,12,Mid,1,"T-027;T-028",Yes,"End-to-end test for the most critical user workflow. Validates the integration of UI, services, and database.","Rely on manual testing of the login screen. This is inefficient and prone to human error."
T-030,"Implement client-side Authorization Service and Session Context",Backend Development,Frontend Development,Medium,8.3,Senior,1,T-028,Yes,"RISK-005: Creates the client-side mechanism for RBAC. This service will be used throughout the UI. Backend checks are still mandatory.","Check user roles directly in ViewModels. A centralized service is cleaner and easier to maintain."
T-031,"Implement WPF Converters/Markup Extensions for Role-based UI visibility",Frontend Development,Backend Development,Medium,8.3,Mid,1,T-030,Yes,"Creates a reusable tool for declaratively controlling UI visibility in XAML based on user roles.","Control visibility programmatically from the code-behind of each view. This is repetitive and violates MVVM."
T-032,"Apply role-based controls to Main Application UI",Frontend Development,Backend Development,Medium,6,Mid,1,T-031,Yes,"Applies the RBAC feature to the main UI, ensuring users only see the features they are authorized to use.","N/A - This is a direct implementation of a core requirement."
T-033,"Implement Backend Authorization Checks in Application Services",Backend Development,Quality Assurance,High,10,Senior,1,T-030,Yes,"RISK-005: The most critical part of RBAC. This server-side validation prevents any client-side bypass of security controls.","Assume the client-side UI correctly prevents unauthorized calls. This is a major security vulnerability."
T-034,"Implement pgcrypto encryption for PHI columns in DbContext",Backend Development,Data Engineering,Critical,16.7,Senior,2,"T-008",Yes,"RISK-004: Highly complex and critical security feature. Requires deep knowledge of EF Core and PostgreSQL. Recommend pair programming.","Implement encryption/decryption at the application service layer. This is less secure and more error-prone than transparent database-level encryption."
T-035,"Write Integration Test for pgcrypto implementation",Quality Assurance,Data Engineering,High,10,Senior,1,T-034,Yes,"Validates that data is physically encrypted in the database but correctly decrypted in the application. Requires raw SQL checks.","Only test that data can be saved and retrieved through EF Core. This does not prove the data is actually encrypted at rest."
T-036,"Implement Audit Service and Integration",Backend Development,Data Engineering,High,12,Mid,1,T-010,Yes,"Creates the mechanism for logging all significant user and system actions, a core compliance requirement.","Write audit logs directly from other services. A dedicated service centralizes the logic and ensures consistency."
T-037,"Develop Audit Trail Viewer UI and ViewModel",Frontend Development,Backend Development,High,14.3,Mid,1,T-036,Yes,"Provides administrators with the required interface to review security and system events.","Require admins to query the database directly to view audit logs. This is not user-friendly and requires technical skill."
T-038,"Implement User Management Application Service",Backend Development,Quality Assurance,High,15.5,Senior,1,"T-033;T-010;T-036",Yes,"Contains critical business rules (e.g., cannot delete last admin) that are essential for system stability and security.","Place user management logic directly in the ViewModel. This mixes UI and business logic and is difficult to test."
T-039,"Develop User Management View and ViewModel",Frontend Development,Backend Development,High,14.3,Mid,1,T-038,Yes,"Implements the main UI for one of the core administrator workflows.","Use a basic, non-interactive grid to display users. The requirement is for full CRUD functionality."
T-040,"Implement fo-dicom C-STORE SCP Provider",Backend Development,Data Engineering,High,10.3,Senior,1,"",Yes,"Core DICOM functionality. Requires specific knowledge of the fo-dicom library and the DICOM standard. Resource should have DICOM experience.","Use a different DICOM library. `fo-dicom` is specified and is a well-regarded standard in the .NET ecosystem."
T-041,"Implement DICOM SCP Hosted Service",Backend Development,DevOps,Medium,8.7,Mid,1,"T-003;T-040",Yes,"Wires up the SCP provider into the Windows Service, making it live and able to accept connections.","Run the DICOM server as a console application. A Windows Service is required for production deployment."
T-042,"Integrate SCP with RabbitMQ for Decoupled DB Insertion",Backend Development,Data Engineering,High,10,Senior,1,"T-014;T-040",Yes,"Key architectural decision to ensure high-throughput ingestion. C-STORE response must be fast, decoupling it from slower DB writes.","Write directly to the database from the C-STORE SCP handler. This will cause performance bottlenecks and timeouts under load (RISK-013)."
T-043,"Implement DICOM Ingress Consumer",Backend Development,Data Engineering,High,14.3,Senior,1,"T-015;T-010;T-042",Yes,"RISK-008: The service-side logic that persists DICOM data. Must be transactional and idempotent to prevent data loss or corruption.","Combine file move and DB persistence into a single monolithic service. The consumer pattern is more robust and scalable."
T-044,"Write E2E Test for C-STORE Ingestion Pipeline",Quality Assurance,Backend Development,Critical,16.7,Senior,1,"T-041;T-043",Yes,"Highly complex test that validates the entire asynchronous DICOM ingestion flow across 5 different system components.","Manually test the ingestion pipeline. This is extremely time-consuming and prone to error, making it unsuitable for regression."
T-045,"Develop Query/Retrieve View (UI) in WPF",Frontend Development,Design,Medium,8,Mid,1,"",No,"Provides the UI for users to search an external PACS system.","Provide a command-line tool for querying PACS. A GUI is a core requirement for technician users."
T-046,"Implement Query/Retrieve ViewModel",Frontend Development,Backend Development,High,12,Mid,1,T-045,No,"Manages the state for the Q/R UI and orchestrates calls to the backend service. Must handle asynchronous network operations without blocking the UI.","Put Q/R logic in the View's code-behind. This is bad practice and makes the UI difficult to test."
T-047,"Implement C-FIND SCU Logic in DicomScuService",Backend Development,Data Engineering,High,12.7,Senior,1,"",No,"Implements the client logic for searching a remote PACS. Requires specific knowledge of `fo-dicom` and C-FIND semantics.","Shell out to a command-line DICOM tool. This is brittle and provides a poor user experience."
T-048,"Implement C-MOVE SCU Logic in DicomScuService",Backend Development,Data Engineering,High,14.7,Senior,1,"T-041;T-047",No,"Implements the logic to retrieve studies. C-MOVE is asynchronous and requires careful handling of its state and the subsequent C-STORE sub-operations.","Use C-GET instead of C-MOVE. C-MOVE is generally preferred as it is firewall-friendly."
T-049,"Develop PACS Configuration View and ViewModel",Frontend Development,Backend Development,High,12,Mid,1,T-010,No,"Provides the UI for a core administrative function. Essential for the Q/R feature to work.","Store PACS configuration in a JSON file. A UI is required for administrator usability."
T-050,"Implement DICOM C-ECHO Verification Logic",Backend Development,Quality Assurance,Medium,8.3,Mid,1,T-047,No,"Implements the 'ping' functionality for DICOM to allow admins to test their PACS configuration easily.","Require admins to use external DICOM tools to verify connectivity. This provides a poor user experience."
T-051,"Implement Inactivity Monitor Service",Backend Development,Frontend Development,High,12.7,Senior,1,"",Yes,"RISK: Low-level input hooking is complex and can be brittle. Requires careful implementation to avoid performance issues or instability.","Use a simpler dispatcher timer that resets on main window events. This is less reliable as it doesn't detect system-wide activity."
T-052,"Develop Lock Screen View and ViewModel",Frontend Development,Backend Development,High,10.3,Mid,1,T-028,Yes,"Implements the UI for the mandatory session lock security feature.","Simply close the application on inactivity. This results in a loss of user state and is a poor user experience."
T-053,"Integrate Inactivity Lock into Main Application",Frontend Development,Backend Development,Medium,6,Mid,1,"T-051;T-052",Yes,"Activates the session lock feature, a critical component for HIPAA compliance.","N/A - This is a mandatory security requirement."
T-054,"PoC: Integrate Vortice.Windows DirectX Host in a WPF Control",Frontend Development,Backend Development,Critical,16.7,Lead,2,"",Yes,"RISK-001: Highest technical risk task. This PoC is a go/no-go for the high-performance viewer. Recommend pair programming with a graphics expert.","Abandon the DirectX approach and accept lower performance using a managed WPF `WriteableBitmap` solution."
T-055,"Implement DirectX Rendering Pipeline for Monochrome Images",Frontend Development,Backend Development,Critical,25.3,Lead,1,"T-054",Yes,"RISK-002: Core of the high-performance viewer. Requires shader programming (HLSL) and deep DirectX knowledge. High risk of memory/resource leaks.","Use a pre-built commercial or open-source rendering component. This may have licensing costs or not meet all specific requirements."
T-056,"Implement an ImageLoaderService for Progressive Loading",Backend Development,Frontend Development,High,12,Senior,1,"",Yes,"Critical for user experience when loading large studies. Prevents the UI from freezing.","Load the full-resolution image synchronously. This will cause the application to hang for several seconds on large studies."
T-057,"Integrate Progressive Loading into Viewer",Frontend Development,Backend Development,High,10,Senior,1,"T-055;T-056",Yes,"Connects the front-end renderer with the asynchronous back-end loader to create a responsive user experience.","N/A - This is a direct implementation of the progressive loading design."
T-058,"Implement WW/WL adjustment tool",Frontend Development,Backend Development,High,12,Senior,1,T-055,No,"Core feature for medical image viewing. Requires efficient communication between UI input and the GPU pixel shader.","Perform WW/WL on the CPU and update the texture. This is significantly slower than doing it on the GPU via a shader."
T-059,"Implement Zoom and Pan tools",Frontend Development,Backend Development,High,14.3,Senior,1,T-055,No,"Standard viewer feature. Requires understanding and implementation of 2D transformation matrices passed to the vertex shader.","Re-render the image at different resolutions on the CPU. This is much less performant than using GPU transformations."
T-060,"Implement Rotate and Flip tools",Frontend Development,Backend Development,Medium,8.3,Mid,1,T-059,No,"Standard viewer tools that also modify the transformation matrix for the GPU.","Perform rotation/flipping on the CPU. This is less efficient than on the GPU."
T-061,"Implement Health Probe Hosted Service in Windows Service",Backend Development,DevOps,High,14.3,Mid,1,T-003,No,"Provides the data for the System Health Dashboard. Needs to be resilient to temporary failures of the systems it's probing.","Have the client application perform the health checks directly. This is inefficient and doesn't provide a centralized view of the service's health."
T-062,"Expose Health Status via Named Pipe Endpoint",Backend Development,DevOps,Medium,6.3,Mid,1,"T-017;T-061",No,"Provides the communication channel for the client to retrieve health data from the service.","Use a less efficient polling mechanism, like checking for a heartbeat file written to disk."
T-063,"Develop System Health Dashboard View and ViewModel",Frontend Development,Backend Development,High,14.3,Mid,1,T-062,No,"Provides administrators a vital, real-time view into the system's operational status.","Require admins to check logs or use external tools to monitor system health. This is not user-friendly."
T-064,"Implement Odoo API Client",Backend Development,DevOps,High,12,Senior,1,"",Yes,"RISK-007: Critical for licensing. Must be resilient to network failures, using retry logic and circuit breakers.","Manually manage licenses without an API. This is not scalable and doesn't meet requirements."
T-065,"Implement License Validation State Machine Service",Backend Development,Quality Assurance,High,14.3,Senior,1,T-064,Yes,"Orchestrates the complex licensing logic, including grace periods and read-only states. State management must be robust.","Use a simple boolean flag for 'licensed'. This doesn't account for grace periods or different failure modes."
T-066,"Integrate License Check into Application Startup and UI",Backend Development,Frontend Development,High,12,Mid,1,"T-030;T-065",Yes,"Connects the licensing logic to the application's startup and RBAC system to enforce read-only mode.","Show a simple pop-up if the license is invalid. A full read-only mode is required to prevent unauthorized use."
T-067,"Implement an Annotation Overlay Layer",Frontend Development,Design,High,12,Senior,1,"T-059",No,"RISK-014: Technically challenging to keep a WPF overlay's coordinate system perfectly synchronized with a DirectX view during pan/zoom.","Render annotations directly in DirectX. This is more performant but significantly increases the complexity of the DirectX code and tool implementation."
T-068,"Implement Length and Angle Measurement Tools",Frontend Development,Backend Development,Critical,16.7,Senior,1,T-067,No,"RISK-014: Geometric calculations and conversion from pixel space to real-world units (using DICOM tags) must be precise. High potential for bugs.","Only allow drawing shapes without providing measurements. This would not meet the user story requirements."
T-069,"Implement GSPS Creation Service",Backend Development,Data Engineering,Critical,16.7,Senior,1,T-068,No,"Creating DICOM Presentation State objects programmatically is a complex, low-level task requiring deep DICOM standard knowledge.","Save annotations in a proprietary format. GSPS is the DICOM standard and is required for interoperability."
T-070,"Implement GSPS Loading and Parsing",Backend Development,Data Engineering,High,14.3,Senior,1,T-069,No,"Parsing the complex, nested structure of GSPS objects is non-trivial and requires careful, defensive coding.","Don't support loading existing presentation states. This limits the feature's utility."
T-071,"Develop Print Preview View (XAML)",Frontend Development,Design,High,16,Mid,1,"",No,"This is a rich, interactive UI that is more complex than a standard data entry form.","Provide a basic, non-interactive preview. This would not meet the requirement for users to arrange images and configure layouts."
T-072,"Implement Print Preview ViewModel Logic",Frontend Development,Backend Development,High,14.3,Mid,1,T-071,No,"Manages the complex state of a configurable print job, including layouts, image lists, and page settings.","Combine the logic into the View's code-behind. This is poor practice, making the feature hard to test and maintain."
T-073,"Implement Drag-and-Drop for Image Rearrangement",Frontend Development,Backend Development,High,12,Senior,1,T-072,No,"Implementing robust, MVVM-friendly drag-and-drop in WPF is notoriously difficult and requires a senior developer.","Use simple 'up' and 'down' buttons to reorder images. This is less intuitive and slower for the user than drag-and-drop."
T-074,"Implement Print Job Submission Logic in ViewModel",Frontend Development,Backend Development,Medium,8.3,Mid,1,"T-014;T-018;T-072",No,"Orchestrates the entire client-side print workflow: check service health, create command, publish to queue.","Submit the print job synchronously. This would freeze the UI while the job is being generated and spooled."
T-075,"Implement Print Job Consumer in Windows Service",Backend Development,DevOps,High,12,Mid,1,T-015,No,"Core of the backend printing logic. It receives the job and begins the process of document generation.","Perform all print logic on the client. This would make the client application heavy and prone to freezing."
T-076,"Implement Windows Print API Spooling Logic",Backend Development,DevOps,High,14.3,Senior,1,T-075,No,"Interacting with the Windows printing system from a background service can be problematic due to session isolation and permissions. Requires senior developer.","Generate a PDF and shell out to an external application to print it. This is less reliable and offers less control."
T-077,"Implement PDF Generation Service using QuestPDF",Backend Development,Design,High,14.3,Mid,1,"",No,"Requires learning the QuestPDF library API to translate the application's print job model into a PDF document structure.","Use a different PDF library like iTextSharp (which may have licensing costs) or a web-based rendering engine."
T-078,"Add PDF/A compliance and AES-256 Encryption",Backend Development,Quality Assurance,Medium,8.3,Senior,1,T-077,No,"Implements critical compliance and security features for PDF export. Requires careful use of the library's advanced features.","Generate a standard PDF without compliance or encryption. This would not meet the requirements of the user story."
T-079,"Implement PDF Export Consumer",Backend Development,DevOps,Medium,8.3,Mid,1,"T-015;T-078",No,"A dedicated consumer for PDF jobs, similar to the print job consumer, ensuring asynchronous processing.","Generate the PDF synchronously on the client. This will block the UI for a noticeable period for complex documents."
T-080,"Create and Configure Windows Application Packaging Project",DevOps,Frontend Development,Low,4,Mid,1,T-001,Yes,"Initial step for creating the MSIX installer. This is standard but necessary configuration work.","Use an older installer technology like WiX or ClickOnce. MSIX is the modern, specified approach."
T-081,"Configure Manifest for Windows Service Registration",DevOps,Backend Development,Medium,8.7,Senior,1,T-080,Yes,"MSIX service registration is a specific, non-trivial XML configuration that must be precise for the service to install and run correctly.","Require manual registration of the service post-installation using `sc.exe`. This is error-prone and not user-friendly."
T-082,"Set up Code Signing for the MSIX Package",DevOps,Quality Assurance,Medium,6.3,Mid,1,T-080,Yes,"Code signing is mandatory for MSIX installation on standard Windows configurations. The process can be tricky to set up in a CI/CD pipeline.","Use a self-signed certificate. This requires users to manually install the certificate and trust it, which is a poor and insecure user experience."
T-083,"Develop First-Run Configuration View and ViewModel",Frontend Development,DevOps,High,12,Mid,1,"",Yes,"Creates the UI for the mandatory prerequisite check, which is the first thing a new user will see.","Require administrators to manually edit a configuration file. This is error-prone and provides no validation."
T-084,"Implement Prerequisite Checker Service",Backend Development,DevOps,High,14.3,Senior,1,"",Yes,"RISK-006: Must provide robust error handling and clear, actionable feedback for many possible external failure modes (firewalls, permissions, versions).","Let the application crash with unhandled exceptions on startup if prerequisites are not met. This is an unacceptable user experience."
T-085,"Integrate First-Run Check into Application Startup",Backend Development,Frontend Development,Medium,8.3,Mid,1,"T-022;T-083;T-084",Yes,"Wires the first-run experience into the application's lifecycle, preventing normal operation until the system is configured correctly.","N/A - This is a mandatory implementation task for the first-run feature."
T-086,"Sprint Hardening and Bug Fixing",Quality Assurance,Frontend Development,Critical,150,Lead,5,"",Yes,"Essential time block for ensuring a high-quality, stable V1 release. Do not skip or shorten. Involves the entire team.","Release without a hardening phase. This will result in a low-quality, buggy product and high post-release support costs."