"gate_name","gate_type","trigger_event","success_criteria","failure_action","responsible_team","automation_level","tools_used","measurement_frequency","escalation_procedure","historical_pass_rate","average_resolution_time","business_impact"
"Pull Request Gate","Static Analysis & Unit Test","Pull request created/updated",">90% unit test coverage on new code. 0 new critical/major issues from static analysis (SonarQube). Build success.","Block pull request merge. Post failure summary as a PR comment.","Development Team","Fully Automated","GitHub Actions, xUnit, SonarQube","Every PR push","PR author is responsible for fixing. Tech Lead can approve bypass with justification.","92","1.5","Prevents bugs and code quality issues from entering the main branch."
"Integration Test Gate","Component Integration","Merge to 'develop' branch",">95% integration test pass rate. Successful E2E smoke test (Login + DICOM Ingestion).","Alert entire development team. Revert merge if not fixed within 2 hours.","DevOps / QA Team","Fully Automated","GitHub Actions, Testcontainers, DCMTK","Every merge to develop","Tech Lead is notified and coordinates the fix.","85","4","Ensures the main development branch remains stable and functional."
"Release Candidate Gate","E2E & Non-Functional","Manual trigger when creating a release branch","100% pass rate for critical path E2E tests. Performance benchmarks met. No new critical/high severity security vulnerabilities found. UAT sign-off from Product Owner.","Block release. Create P0/P1 bugs for all failures.","QA Team / Product Owner","Partially Automated","Appium, OWASP ZAP, Manual UAT","Per release","Go/No-Go decision made by Product Owner and Tech Lead.","99","24","Prevents defective or non-compliant software from reaching customers."