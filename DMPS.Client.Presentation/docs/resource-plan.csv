task_id,task_name,primary_skill,secondary_skill,complexity_level,estimated_hours,required_experience,team_size,dependencies,critical_path,resource_notes,alternative_approach
TASK-ARCH-01,"Create Core Solution and Project Structure",Backend Development,DevOps,Medium,4.2,Senior,1,"",Yes,"Lead or senior developer required to establish clean architecture patterns from the start.","Use a standard .NET clean architecture template to accelerate setup."
TASK-ARCH-02,"Configure Generic Host and DI for Windows Service",Backend Development,DevOps,Medium,6.3,Senior,1,TASK-ARCH-01,Yes,"Requires solid understanding of .NET Generic Host and DI container configuration for services.","Start with a simpler console app host for initial development and add the Windows Service lifetime later."
TASK-ARCH-03,"Configure DI and App Startup for WPF Client",Frontend Development,Backend Development,Medium,6.2,Senior,1,TASK-ARCH-01,Yes,"Requires senior WPF developer to set up a scalable MVVM structure with DI.","Use a simpler Service Locator pattern initially to unblock UI development, with a plan to refactor to pure DI."
TASK-IPC-01,"Develop RabbitMQ Wrapper Service (Connection Management)",Backend Development,DevOps,High,8.7,Senior,1,"TASK-ARCH-02,TASK-ARCH-03",Yes,"Critical component for system reliability. Requires experience with RabbitMQ client library's resilience features.","Use a higher-level library like MassTransit or NServiceBus to abstract away connection management, at the cost of adding a larger dependency."
TASK-IPC-05,"Implement Named Pipe Server in Windows Service",Backend Development,DevOps,Medium,7.3,Mid,1,TASK-ARCH-02,No,"Requires knowledge of .NET inter-process communication (IPC) and multi-threading for the server loop.","Use a simple TCP socket for the health check if Named Pipes prove problematic in the target environment."
TASK-IPC-06,"Implement Named Pipe Client in WPF App",Frontend Development,Backend Development,Medium,5.3,Mid,1,TASK-IPC-05,No,"Client-side implementation should be straightforward, focusing on timeout handling.","If the check is only for service existence, a check on the Windows Service status via `ServiceController` could be an alternative, though less robust."
TASK-IPC-02,"Implement RabbitMQ Producer Logic",Backend Development,Quality Assurance,Medium,5.3,Mid,1,TASK-IPC-01,No,"Focus on creating a simple, reusable interface for publishing messages. Ensure persistence flag is correctly set.","For simple cases, embed producer logic directly in the calling service, but this is less scalable."
TASK-IPC-03,"Implement RabbitMQ Consumer Hosted Service",Backend Development,Quality Assurance,High,9.5,Senior,1,TASK-IPC-01,Yes,"Complex task involving concurrency, error handling, and message lifecycle (ack/nack). Senior developer needed to create a robust, reusable base class.","Implement consumers as simple, non-resilient services first and add robustness features like retries and dead-lettering in a later iteration."
TASK-IPC-04,"Configure Durable Queues, DLX, and DLQ",DevOps,Backend Development,Medium,6.3,Mid,1,"TASK-IPC-01,TASK-IPC-03",Yes,"Requires solid understanding of RabbitMQ topology and message routing. Best handled by a dev with some DevOps experience.","Declare a single, simple durable queue initially and add the DLX/DLQ topology once the basic message flow is proven."
TASK-DB-01,"Define User, Role, and PasswordHistory EF Core Entities",Backend Development,Data Engineering,Medium,4.2,Mid,1,TASK-ARCH-01,Yes,"Straightforward EF Core task. Requires attention to detail for data annotations and relationships.","Use a database-first approach to generate entities if a DBA has already defined the schema."
TASK-DB-02,"Implement EF Core DbContext and Migrations",Backend Development,DevOps,Medium,5.2,Mid,1,TASK-DB-01,Yes,"Core data access setup. The developer must be proficient with EF Core migrations.","Use Dapper for data access for simpler setup, but lose the benefits of ORM change tracking and LINQ."
TASK-AUDIT-01,"Define AuditLog Entity and Implement AuditService",Backend Development,Design,High,10.3,Senior,1,TASK-DB-02,Yes,"Architecturally significant service. Must be designed to be performant, thread-safe, and non-blocking to the main application logic.","Log audit events directly to a text file using Serilog initially, and build the database logging service in a later sprint."
TASK-SEC-01,"Implement Secure Credential Storage Service",Backend Development,DevOps,High,8.7,Senior,1,"",Yes,"Security-critical task. Requires knowledge of the Windows Credential Manager API and secure coding practices.","For non-production environments, use the .NET Secret Manager. Production requires the Credential Manager approach."
TASK-SEC-02,"Research and PoC for pgcrypto with EF Core",Backend Development,Data Engineering,High,12,Senior,1,"",No,"Time-boxed research spike for a high-risk technical area (RISK-011). Assign a senior developer to validate the approach.","If pgcrypto is not feasible, evaluate Transparent Data Encryption (TDE) at the database level or application-layer encryption."
TASK-AUTH-03,"Implement AuthenticationService with BCrypt",Backend Development,Quality Assurance,Medium,6.2,Mid,1,TASK-DB-02,Yes,"Security-sensitive task. Developer must have a clear understanding of password hashing and salting with BCrypt.","Delegate authentication to an external identity provider (e.g., Active Directory, Auth0) if available in the target environment."
TASK-AUTH-04,"Unit Test AuthenticationService Logic",Quality Assurance,Backend Development,Medium,5.3,Mid,1,TASK-AUTH-03,No,"Critical testing task to ensure security logic is flawless. Requires experience with mocking frameworks.","Rely solely on manual E2E testing, which is high-risk and not recommended for security components."
TASK-AUTH-01,"Create LoginView XAML with Material Design",Frontend Development,Design,Medium,4.2,Mid,1,TASK-ARCH-03,Yes,"Standard UI task. Requires a developer proficient with WPF, XAML, and the Material Design toolkit.","Use basic, unstyled WPF controls to get the functionality working first, then apply styling later."
TASK-AUTH-02,"Implement LoginViewModel Logic",Frontend Development,Backend Development,Medium,6,Mid,1,"TASK-AUTH-01,TASK-AUTH-03",Yes,"Core MVVM implementation. Requires solid C# and WPF data binding skills, including `ICommand` and `INotifyPropertyChanged`.","Use code-behind for the initial implementation to speed up development, but create technical debt."
TASK-AUTH-05,"Integrate Login Flow and Navigation",Frontend Development,Backend Development,Medium,4.2,Mid,1,"TASK-AUTH-02,TASK-AUTH-03",Yes,"Integration task that wires up the login components. Requires understanding of the application's startup and navigation logic.","Show the main window directly on startup with a hardcoded user for development, bypassing the login screen until it's fully integrated."
TASK-TEST-01,"Integration Testing for Full IPC Stack",Quality Assurance,DevOps,Critical,14.3,Senior,1,"TASK-IPC-06,TASK-IPC-02,TASK-IPC-03,TASK-IPC-04",Yes,"Highly complex testing task. Requires a senior QA engineer with experience in Testcontainers for managing dependencies like RabbitMQ.","Perform extensive manual testing of the IPC stack, which is time-consuming and less repeatable."
TASK-RBAC-01,"Implement AuthorizationService",Backend Development,Design,Medium,6,Senior,1,TASK-AUTH-05,Yes,"Core architectural component for security. A senior developer should design this to be flexible and performant.","Implement role checks as simple `if` statements in ViewModels, but this is not scalable and is hard to maintain."
TASK-RBAC-02,"Create WPF Visibility/Enabled Converters for RBAC",Frontend Development,Backend Development,Medium,5,Mid,1,TASK-RBAC-01,No,"WPF-specific task. Requires good knowledge of XAML data binding and `IValueConverter`.","Control visibility/enabled state directly from the ViewModel properties, which can lead to bloated ViewModel code."
TASK-RBAC-03,"Implement Backend Command Authorization",Backend Development,Frontend Development,High,8.3,Mid,1,TASK-RBAC-01,No,"Requires refactoring many existing commands to add authorization checks. A consistent pattern must be applied.","Rely only on hiding UI elements. This is insecure as backend logic could still be invoked."
TASK-RBAC-04,"Apply RBAC to Main Navigation and Views",Frontend Development,Backend Development,Low,3,Mid,1,TASK-RBAC-02,No,"Application of the RBAC framework to the highest-level UI components. Should be straightforward once the framework is built.","Hardcode the visibility of the admin tab for testing purposes, but this is not a viable long-term solution."
TASK-ADMIN-01,"Develop User Management View & ViewModel",Frontend Development,Backend Development,High,8.3,Mid,1,TASK-RBAC-04,No,"Standard CRUD UI task. Complexity comes from creating a good user experience with a data grid and dialogs.","Use a simple ListBox instead of a DataGrid to display users, sacrificing features like sorting and column resizing."
TASK-ADMIN-03,"Implement Backend User Creation Service",Backend Development,Database,High,8.3,Senior,1,"TASK-DB-02,TASK-AUDIT-01",No,"Complex backend logic involving a database transaction, password hashing, and auditing. Requires a senior developer.","Split the logic into non-transactional steps, increasing the risk of data inconsistency on failure."
TASK-ADMIN-02,"Implement 'Add User' Dialog and Logic",Frontend Development,Backend Development,Medium,6,Mid,1,"TASK-ADMIN-01,TASK-ADMIN-03",No,"Connects the UI to the backend service. Involves form validation and user feedback.","Create users via a script or directly in the database for testing, deferring the UI build."
TASK-ADMIN-06,"Implement Backend User Update/Delete Service Logic",Backend Development,Database,High,8.3,Senior,1,TASK-ADMIN-03,No,"Requires careful implementation of business rules (e.g., cannot delete last admin) within a database transaction.","Implement a soft-delete (marking a user as inactive) instead of a hard-delete to simplify the logic and reduce risk."
TASK-ADMIN-04,"Implement User Edit/Delete UI Logic",Frontend Development,Backend Development,Medium,7.2,Mid,1,"TASK-ADMIN-01,TASK-ADMIN-06",No,"UI logic must reflect the backend business rules by disabling controls appropriately (e.g., no self-edit).","Allow the actions in the UI and let the user see a backend error message, which is a poor user experience."
TASK-ADMIN-05,"Implement Admin Password Reset Logic",Backend Development,Database,Medium,4.2,Mid,1,TASK-ADMIN-03,No,"Security-sensitive backend logic. Must ensure the temporary password flag is set atomically with the password hash update.","Instead of a temporary password, simply clear the password field and require the user to contact support to set a new one."
TASK-SESSION-01,"Implement User Activity Monitor Service",Frontend Development,Backend Development,High,12,Senior,1,TASK-ARCH-03,Yes,"Niche, complex task requiring native Windows API interoperability (P/Invoke). Assign to a developer with this specific experience.","Use a simpler timer based on WPF-level events (e.g., MouseMove on the main window), which is less reliable as it won't detect activity in all cases."
TASK-SESSION-02,"Create Lock Screen View and ViewModel",Frontend Development,Design,Medium,6.2,Mid,1,TASK-AUTH-03,No,"UI task to build the modal overlay. Focus on ensuring it correctly covers all content and handles password input securely.","Simply log the user out on inactivity instead of locking, which is more disruptive to the user's workflow."
TASK-SESSION-03,"Implement Session Lock Orchestration",Backend Development,Frontend Development,Medium,7.2,Mid,1,"TASK-SESSION-01,TASK-SESSION-02",Yes,"Orchestration logic that connects the activity monitor to the lock screen UI. Requires careful handling of UI thread marshalling.","Have the activity monitor directly show the lock screen, which tightly couples the components and is harder to test."
TASK-SESSION-04,"E2E Test for Session Inactivity Lock",Quality Assurance,DevOps,Medium,6.5,Mid,1,TASK-SESSION-03,No,"Automated UI testing for this is tricky due to its time-based nature. Requires a test framework that can manipulate time or wait reliably.","Perform manual testing for this feature, which is less efficient but may be more reliable than a flaky automated test."
TASK-ADMIN-12,"Implement Backend Logic for Password Policy Service",Backend Development,Database,Medium,7.2,Mid,1,TASK-ADMIN-10,No,"Backend logic to centralize password validation rules. Must be able to query password history.","Implement password validation logic directly within the user creation and password change methods, leading to code duplication."
TASK-PWRESET-01,"Develop Forced Change Password View and ViewModel",Frontend Development,Design,Medium,7.2,Mid,1,TASK-ADMIN-12,No,"A critical UI workflow for security. The view must be non-dismissible and provide clear feedback on policy violations.","After a temporary login, show a simple pop-up message asking the user to change their password via a settings screen, which is not as secure."
TASK-PWRESET-02,"Modify Authentication Flow for Forced Reset",Backend Development,Frontend Development,Medium,6.5,Senior,1,"TASK-AUTH-03,TASK-PWRESET-01",Yes,"Modification of a core, security-sensitive workflow. A senior developer should handle this to avoid introducing regressions.","Don't modify the login flow. Let the user access the app with the temporary password, which is a security risk."
TASK-PWRESET-03,"Implement Password Update Service Logic",Backend Development,Database,Low,3,Mid,1,"TASK-ADMIN-12,TASK-DB-02",No,"Backend logic to finalize the password change. Must clear the temporary password flag transactionally.","Update the password and the flag in separate database calls, risking an inconsistent state if one call fails."
TASK-ADMIN-08,"Develop System Settings View with Tabbed Interface",Frontend Development,Design,Medium,7.2,Mid,1,TASK-RBAC-04,No,"UI shell for all settings screens. Focus on creating a reusable and extensible layout.","Create a separate window for each category of settings instead of a unified tabbed interface."
TASK-DB-03,"Define EF Core Entities for System Settings",Backend Development,Database,Medium,5.3,Mid,1,TASK-DB-02,No,"Modeling configuration data in the database. A mix of a generic key-value table and specific tables for complex settings is a good approach.","Store all settings as serialized JSON in a single key-value table, which is harder to query and validate."
TASK-ADMIN-10,"Implement Settings Service and Persistence",Backend Development,Design,High,10.3,Senior,1,TASK-DB-03,Yes,"Architecturally important service. The caching strategy is key to performance. A senior dev should design the service's API.","Read settings directly from the database every time they are needed, which would be inefficient and cause performance issues."
TASK-ADMIN-11,"Implement Data Retention and Password Policy UI",Frontend Development,Backend Development,High,8,Mid,1,"TASK-ADMIN-08,TASK-DB-03",No,"UI for specific settings pages. Involves data binding, validation, and calling the settings service.","Use a generic property grid to display all settings, which is less user-friendly than custom-designed forms."
TASK-ADMIN-09,"Implement Other Settings UI (SMTP, Storage Path)",Frontend Development,Backend Development,High,9.3,Mid,1,"TASK-ADMIN-08,TASK-DB-03",No,"Includes UI with more complex validation, like network calls ('Test Connection') or file system checks ('Test Path').","Omit the validation buttons and require the administrator to verify the settings manually after saving."
TASK-SEC-03,"Implement pgcrypto Value Converters for PHI Columns",Backend Development,Database,High,10.3,Senior,1,"TASK-SEC-01,TASK-SEC-02",Yes,"Security-critical implementation based on the PoC. Requires careful application to all PHI fields and thorough testing.","Perform encryption/decryption manually in the application service layer, which is error-prone and less transparent."
TASK-SEC-04,"Enforce TLS for PostgreSQL Connection",DevOps,Backend Development,Low,2.2,Mid,1,"",Yes,"A configuration task, but critical for security. Requires knowledge of PostgreSQL connection string options.","Allow non-encrypted connections, which is a major security violation for HIPAA."
TASK-SEC-05,"Implement Secure Logging (PHI Masking)",Backend Development,DevOps,Medium,6,Mid,1,"",No,"Requires creating a custom Serilog component. The logic to identify PHI needs to be robust to avoid accidental data leakage.","Manually ensure all logging statements avoid logging PHI, which is unreliable and hard to enforce."
TASK-ADMIN-13,"Implement Backend Logic for Data Retention Service",Backend Development,Database,High,12,Senior,1,"TASK-ADMIN-10,TASK-AUDIT-01",No,"A destructive background task. The query logic must be precise to avoid accidental deletion of required data. Requires transactional safety.","Create a report of studies to be deleted and require manual deletion by an administrator, which is less efficient."
TASK-AUDIT-02,"Develop Audit Trail Viewer UI",Frontend Development,Design,Medium,7.2,Mid,1,TASK-ADMIN-08,No,"UI for displaying tabular data with filtering controls. Key challenges are user-friendly date range selection and responsive data grid.","Display the audit trail as a raw, unformatted text log, which is not user-friendly for analysis."
TASK-AUDIT-03,"Implement Audit Trail ViewModel and Data Fetching",Backend Development,Frontend Development,High,8.3,Mid,1,"TASK-AUDIT-01,TASK-AUDIT-02",No,"Backend-heavy ViewModel. Must implement efficient, server-side filtering and pagination to handle large volumes of audit data.","Fetch all audit logs into client memory and perform filtering there, which will not scale and will cause performance issues."
TASK-AUDIT-04,"Implement 'Export to CSV' Functionality",Backend Development,Frontend Development,Medium,6,Mid,1,TASK-AUDIT-03,No,"Requires a third-party library and logic to stream the data to a file without consuming excessive memory.","Allow the user to copy-paste from the data grid, which is cumbersome and may not work for large datasets."
TASK-DICOM-07,"Implement DICOM C-ECHO SCU Logic (Placeholder)",Backend Development,DevOps,Medium,6,Mid,1,"",No,"Requires using the `fo-dicom` library to implement a basic DICOM network client. Focus on connection and response handling.","Use a command-line DICOM tool for verification outside the application, which is a worse user experience."
TASK-DICOM-08,"Implement PACS Configuration UI and Logic",Frontend Development,Backend Development,High,12,Senior,1,"TASK-ADMIN-08,TASK-DB-03,TASK-DICOM-07",No,"Complex UI that combines CRUD operations with a live network validation (C-ECHO). Requires a senior dev to integrate both parts.","Require admins to configure PACS in a text file, which is error-prone and lacks validation."
TASK-ANON-01,"Implement DICOM Metadata Anonymization Service",Backend Development,Data Engineering,High,12,Senior,1,"",No,"Requires deep knowledge of the DICOM standard and HIPAA de-identification rules. A senior developer with domain knowledge is essential.","Use an external, third-party anonymization tool, which may introduce workflow and integration challenges."
TASK-ANON-02,"Implement Pixel Data Anonymization (Blackout)",Backend Development,Design,High,10.3,Senior,1,"",No,"Involves direct manipulation of DICOM pixel data, which is complex and requires careful handling to avoid corrupting the file.","Export images to JPEG/PNG, use an external image editor to apply blackouts, and then re-import, which is a lossy and cumbersome workflow."
TASK-ANON-03,"Develop Anonymization UI",Frontend Development,Design,High,8.3,Mid,1,"TASK-ANON-01,TASK-ANON-02",No,"The UI for drawing blackout regions on an image is the most complex part of this task, requiring custom rendering and interaction logic.","Require the user to specify pixel coordinates for blackout regions manually, which is extremely difficult and not user-friendly."