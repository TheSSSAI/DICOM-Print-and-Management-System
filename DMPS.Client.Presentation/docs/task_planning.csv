Title,Description,Type,Status,Priority,Assignee,Reporter,Due Date,Estimate,Labels,Sprint,Epic,Project,Attachments,Comments,Parent ID,Dependencies,Created At,Updated At,Skills Required
"Create Core Solution and Project Structure","Create the main Visual Studio solution (DicomApp.sln) and the following .NET 8 projects: DicomApp.Client.Wpf, DicomApp.Service, DicomApp.Core, DicomApp.Infrastructure, DicomApp.Application. Configure project references for proper layering.",Development,Backlog,Highest,"dev@project.com","pm@project.com","",4.2,"architecture,scaffolding","Sprint 1","Core Architecture & Technical Foundation","DICOM Management Platform","","","US-001","",2024-01-01 09:00,2024-01-01 09:00,".NET CLI,Visual Studio"
"Configure Generic Host and DI for Windows Service","In the DicomApp.Service project, implement the .NET Generic Host builder (Microsoft.Extensions.Hosting) in Program.cs. Set up the basic DI container for service registration and configure the project to run as a Windows Service.",Development,Backlog,Highest,"dev@project.com","pm@project.com","",6.3,"architecture,di,hosting","Sprint 1","Core Architecture & Technical Foundation","DICOM Management Platform","","","US-001","TASK-ARCH-01",2024-01-01 09:00,2024-01-01 09:00,"C#,.NET Hosting,Dependency Injection"
"Configure DI and App Startup for WPF Client","In the DicomApp.Client.Wpf project, configure a DI container in App.xaml.cs using Microsoft.Extensions.DependencyInjection. The container should be built on startup and used to resolve the MainWindow and its initial ViewModel.",Development,Backlog,Highest,"dev@project.com","pm@project.com","",6.2,"architecture,di,wpf","Sprint 1","Core Architecture & Technical Foundation","DICOM Management Platform","","","US-001","TASK-ARCH-01",2024-01-01 09:00,2024-01-01 09:00,"C#,WPF,Dependency Injection"
"Develop RabbitMQ Wrapper Service (Connection Management)","In the Infrastructure project, create a singleton service to manage the connection to the RabbitMQ broker. It should handle connection logic, automatic recovery, and provide access to the IModel channel for producers/consumers.",Development,Backlog,High,"dev@project.com","pm@project.com","",8.7,"ipc,rabbitmq,infrastructure","Sprint 1","Core Architecture & Technical Foundation","DICOM Management Platform","","","US-001","TASK-ARCH-02,TASK-ARCH-03",2024-01-01 09:00,2024-01-01 09:00,"C#,RabbitMQ"
"Implement Named Pipe Server in Windows Service","In the Windows Service, create a hosted service that starts a `NamedPipeServerStream` on a well-known pipe name. It should listen for client connections in a loop, read a request string (e.g., 'PING'), and write a response string (e.g., 'PONG').",Development,Backlog,High,"dev@project.com","pm@project.com","",7.3,"ipc,named-pipes","Sprint 1","Core Architecture & Technical Foundation","DICOM Management Platform","","","US-001","TASK-ARCH-02",2024-01-01 09:00,2024-01-01 09:00,"C#,System.IO.Pipes"
"Implement Named Pipe Client in WPF App","In the Infrastructure project, create a client class that can connect to the service's named pipe. It should implement a synchronous method like `IsServiceRunning()` that connects, sends 'PING', awaits 'PONG', and includes a short timeout.",Development,Backlog,High,"dev@project.com","pm@project.com","",5.3,"ipc,named-pipes","Sprint 1","Core Architecture & Technical Foundation","DICOM Management Platform","","","US-001","TASK-IPC-05",2024-01-01 09:00,2024-01-01 09:00,"C#,System.IO.Pipes"
"Implement RabbitMQ Producer Logic","Create a generic message producer service that can be used by the client application. It must be able to publish messages to a specified exchange. Implement logic to mark messages as persistent.",Development,Backlog,High,"dev@project.com","pm@project.com","",5.3,"ipc,rabbitmq","Sprint 1","Core Architecture & Technical Foundation","DICOM Management Platform","","","US-001","TASK-IPC-01",2024-01-01 09:00,2024-01-01 09:00,"C#,RabbitMQ"
"Implement RabbitMQ Consumer Hosted Service","In the DicomApp.Service project, create a base class or generic IHostedService for consuming messages from a RabbitMQ queue. It should handle message deserialization, error handling (with retries), and final acknowledgement (ack/nack).",Development,Backlog,High,"dev@project.com","pm@project.com","",9.5,"ipc,rabbitmq,worker","Sprint 1","Core Architecture & Technical Foundation","DICOM Management Platform","","","US-001","TASK-IPC-01",2024-01-01 09:00,2024-01-01 09:00,"C#,RabbitMQ,.NET Hosting"
"Configure Durable Queues, DLX, and DLQ","Implement the RabbitMQ topology declaration logic. This includes creating a main exchange, a durable work queue, a dead-letter exchange (DLX), and a dead-letter queue (DLQ). The work queue must be configured to route rejected/expired messages to the DLX.",Development,Backlog,High,"dev@project.com","pm@project.com","",6.3,"ipc,rabbitmq,dlq","Sprint 1","Core Architecture & Technical Foundation","DICOM Management Platform","","","US-001","TASK-IPC-01,TASK-IPC-03",2024-01-01 09:00,2024-01-01 09:00,"C#,RabbitMQ"
"Define User, Role, and PasswordHistory EF Core Entities","In the Infrastructure project, create the C# classes for User, Role, and PasswordHistory entities. Configure them with EF Core data annotations or fluent API to match the database design, including relationships, constraints, and indexes.",Development,Backlog,Highest,"dev@project.com","pm@project.com","",4.2,"database,ef-core,user-management","Sprint 1","User Authentication & Session Management","DICOM Management Platform","","","US-002","TASK-ARCH-01",2024-01-01 09:00,2024-01-01 09:00,"C#,Entity Framework Core"
"Implement EF Core DbContext and Migrations","Create the main `DicomAppDbContext` class, register the entities (DbSets), and configure the database connection. Generate the initial database migration and create a script to apply it.",Development,Backlog,Highest,"dev@project.com","pm@project.com","",5.2,"database,ef-core,migrations","Sprint 1","User Authentication & Session Management","DICOM Management Platform","","","US-002","TASK-DB-01",2024-01-01 09:00,2024-01-01 09:00,"C#,Entity Framework Core,PostgreSQL"
"Define AuditLog Entity and Implement AuditService","Define the `AuditLog` EF Core entity with fields for user, timestamp, event type, details (JSONB), etc. Create a thread-safe, singleton `AuditService` with a method like `LogEventAsync(AuditEvent data)` that can be injected and used throughout the application to write to the database.",Development,Backlog,Highest,"dev@project.com","pm@project.com","",10.3,"security,audit,backend,architecture","Sprint 1","Security & Compliance","DICOM Management Platform","","","US-017","TASK-DB-02",2024-01-01 09:00,2024-01-01 09:00,"C#,Entity Framework Core,PostgreSQL"
"Implement Secure Credential Storage Service","Create a service that wraps the Windows Credential Manager API. It will provide `GetSecret(string key)` and `SetSecret(string key, string secret)` methods. All application logic must be refactored to use this service for sensitive data instead of config files.",Development,Backlog,Highest,"dev@project.com","pm@project.com","",8.7,"security,infrastructure,credentials","Sprint 1","Security & Compliance","DICOM Management Platform","","","US-018","",2024-01-01 09:00,2024-01-01 09:00,"C#,Windows Credential Manager API"
"Research and PoC for pgcrypto with EF Core","Conduct research and build a small proof-of-concept project to validate the approach for using PostgreSQL's `pgcrypto` extension with EF Core. The goal is to find the best implementation pattern, likely using custom `ValueConverter` classes.",Development,Backlog,High,"dev@project.com","pm@project.com","",12,"security,database,encryption,poc","Sprint 1","Security & Compliance","DICOM Management Platform","","","US-018","",2024-01-01 09:00,2024-01-01 09:00,"C#,Entity Framework Core,PostgreSQL,pgcrypto"
"Implement AuthenticationService with BCrypt","Create an `IAuthenticationService` and its implementation, `AuthenticationService`. This service will take credentials, use the `DicomAppDbContext` to find the user, and use the `BCrypt.Net` library to securely verify the password hash.",Development,Backlog,Highest,"dev@project.com","pm@project.com","",6.2,"security,authentication,backend","Sprint 1","User Authentication & Session Management","DICOM Management Platform","","","US-002","TASK-DB-02",2024-01-01 09:00,2024-01-01 09:00,"C#,Entity Framework Core,BCrypt"
"Unit Test AuthenticationService Logic","Create a suite of unit tests for the `AuthenticationService`. Use a mocking framework (e.g., Moq) and an in-memory database provider for EF Core to test all authentication scenarios in isolation.",Testing,Backlog,High,"qa@project.com","pm@project.com","",5.3,"testing,unit-test,security","Sprint 1","User Authentication & Session Management","DICOM Management Platform","","","US-002","TASK-AUTH-03",2024-01-01 09:00,2024-01-01 09:00,"C#,xUnit,Moq"
"Create LoginView XAML with Material Design","In the DicomApp.Client.Wpf project, create the LoginView.xaml file. Use components from the Material Design in XAML Toolkit to build the UI, including fields for username and password, a login button, and a space for error messages.",Development,Backlog,Highest,"dev@project.com","pm@project.com","",4.2,"ui,wpf,login","Sprint 1","User Authentication & Session Management","DICOM Management Platform","","","US-002","TASK-ARCH-03",2024-01-01 09:00,2024-01-01 09:00,"WPF,XAML,Material Design in XAML"
"Implement LoginViewModel Logic","Create the LoginViewModel.cs. Implement INotifyPropertyChanged, bindable properties for Username and Password (`SecureString`), and an `ICommand` for the login action. The command will orchestrate the call to the authentication service.",Development,Backlog,Highest,"dev@project.com","pm@project.com","",6,"ui,wpf,login,mvvm","Sprint 1","User Authentication & Session Management","DICOM Management Platform","","","US-002","TASK-AUTH-01,TASK-AUTH-03",2024-01-01 09:00,2024-01-01 09:00,"C#,WPF,MVVM"
"Integrate Login Flow and Navigation","Wire up all the login components. The App.xaml.cs should show the LoginView. On successful authentication, the LoginViewModel should trigger a navigation event that closes the LoginView and opens the MainWindow.",Development,Backlog,Highest,"dev@project.com","pm@project.com","",4.2,"wpf,navigation,integration","Sprint 1","User Authentication & Session Management","DICOM Management Platform","","","US-002","TASK-AUTH-02,TASK-AUTH-03",2024-01-01 09:00,2024-01-01 09:00,"C#,WPF,MVVM"
"Integration Testing for Full IPC Stack","Create a comprehensive integration test suite that validates the end-to-end IPC flows. This includes: Client -> RabbitMQ -> Service, Client -> NamedPipe -> Service, and RabbitMQ DLQ routing.",Testing,Backlog,High,"qa@project.com","pm@project.com","",14.3,"testing,integration,rabbitmq,ipc","Sprint 1","Core Architecture & Technical Foundation","DICOM Management Platform","","","US-001","TASK-IPC-02,TASK-IPC-04,TASK-IPC-06",2024-01-01 09:00,2024-01-01 09:00,"C#,xUnit,Testcontainers,RabbitMQ"
"Implement AuthorizationService","Create a singleton `AuthorizationService` that is initialized after login with the user's roles/permissions. It should provide methods like `IsInRole(string role)` or `HasPermission(string permission)` that can be called from anywhere in the application.",Development,Backlog,Highest,"dev@project.com","pm@project.com","",6,"security,rbac,architecture","Sprint 2","Role-Based Access Control (RBAC) & Administration","DICOM Management Platform","","","US-004","TASK-AUTH-05",2024-01-01 09:00,2024-01-01 09:00,"C#,Dependency Injection"
"Create WPF Visibility/Enabled Converters for RBAC","Create custom `IValueConverter` classes for WPF, such as `RoleToVisibilityConverter`. These converters will take a role name as a parameter and use the `AuthorizationService` to return `Visibility.Visible/Collapsed` or `true/false`, allowing UI elements to be bound to roles.",Development,Backlog,High,"dev@project.com","pm@project.com","",5,"ui,wpf,rbac","Sprint 2","Role-Based Access Control (RBAC) & Administration","DICOM Management Platform","","","US-004","TASK-RBAC-01",2024-01-01 09:00,2024-01-01 09:00,"WPF,XAML,C#"
"Implement Backend Command Authorization","Refactor key ViewModels to perform an authorization check using the `AuthorizationService` at the start of any sensitive command's execution logic. If the check fails, the command should do nothing or show an 'access denied' message.",Development,Backlog,High,"dev@project.com","pm@project.com","",8.3,"security,rbac,backend","Sprint 2","Role-Based Access Control (RBAC) & Administration","DICOM Management Platform","","","US-004","TASK-RBAC-01",2024-01-01 09:00,2024-01-01 09:00,"C#,MVVM"
"Apply RBAC to Main Navigation and Views","Apply the new RBAC converters and backend checks to the main application views. Specifically, hide the 'Administration' tab/button for Technician users. This task involves updating the main window's XAML and ViewModel.",Development,Backlog,High,"dev@project.com","pm@project.com","",3,"ui,wpf,rbac","Sprint 2","Role-Based Access Control (RBAC) & Administration","DICOM Management Platform","","","US-004","TASK-RBAC-02",2024-01-01 09:00,2024-01-01 09:00,"WPF,XAML,MVVM"
"Develop User Management View & ViewModel","Create the `UserManagementView.xaml` to display a list of users in a data grid. Implement the `UserManagementViewModel.cs` to fetch the list of users from a service and expose it to the view. Include buttons for 'Add User', 'Edit', 'Delete', etc.",Development,Backlog,Highest,"dev@project.com","pm@project.com","",8.3,"ui,wpf,admin,user-management","Sprint 2","Role-Based Access Control (RBAC) & Administration","DICOM Management Platform","","","US-005","TASK-RBAC-04",2024-01-01 09:00,2024-01-01 09:00,"WPF,XAML,MVVM"
"Implement Backend User Creation Service","Create a `UserService` method `CreateUserAsync`. This method will check for duplicate usernames, generate a secure temporary password, hash it with BCrypt, create the new `User` entity, save it to the database, and log the action to the audit trail within a single transaction.",Development,Backlog,Highest,"dev@project.com","pm@project.com","",8.3,"backend,user-management,security,audit","Sprint 2","Role-Based Access Control (RBAC) & Administration","DICOM Management Platform","","","US-005","TASK-DB-02,TASK-AUDIT-01",2024-01-01 09:00,2024-01-01 09:00,"C#,Entity Framework Core,BCrypt"
"Implement 'Add User' Dialog and Logic","Create a modal dialog for adding a new user. The dialog's ViewModel will handle input for username and role. Upon submission, it will call a backend service to perform the user creation.",Development,Backlog,Highest,"dev@project.com","pm@project.com","",6,"ui,wpf,user-management","Sprint 2","Role-Based Access Control (RBAC) & Administration","DICOM Management Platform","","","US-005","TASK-ADMIN-01,TASK-ADMIN-03",2024-01-01 09:00,2024-01-01 09:00,"WPF,MVVM,C#"
"Implement Backend User Update/Delete Service Logic","Add `UpdateUserAsync` and `DeleteUserAsync` methods to the `UserService`. These methods must enforce business rules (cannot delete last admin), update the database, and write corresponding events to the audit trail transactionally.",Development,Backlog,High,"dev@project.com","pm@project.com","",8.3,"backend,user-management,security","Sprint 2","Role-Based Access Control (RBAC) & Administration","DICOM Management Platform","","","US-006","TASK-ADMIN-03",2024-01-01 09:00,2024-01-01 09:00,"C#,Entity Framework Core"
"Implement User Edit/Delete UI Logic","Enhance the `UserManagementView/ViewModel`. Add logic to open an 'Edit User' dialog populated with the selected user's data. Implement the delete button logic, including a confirmation dialog. Disable controls based on business rules (no self-edit, no last admin delete).",Development,Backlog,High,"dev@project.com","pm@project.com","",7.2,"ui,wpf,user-management","Sprint 2","Role-Based Access Control (RBAC) & Administration","DICOM Management Platform","","","US-006","TASK-ADMIN-01,TASK-ADMIN-06",2024-01-01 09:00,2024-01-01 09:00,"WPF,MVVM,C#"
"Implement Admin Password Reset Logic","Create a `ResetPasswordAsync` method in `UserService`. It will generate a new temporary password, hash it, update the user record (including setting the `isTemporaryPassword` flag), and log the event to the audit trail.",Development,Backlog,High,"dev@project.com","pm@project.com","",4.2,"backend,user-management,security","Sprint 2","Role-Based Access Control (RBAC) & Administration","DICOM Management Platform","","","US-006","TASK-ADMIN-03",2024-01-01 09:00,2024-01-01 09:00,"C#,Entity Framework Core,BCrypt"
"Implement User Activity Monitor Service","Create a service that uses low-level Windows hooks (P/Invoke) to monitor global mouse and keyboard activity for the application. The service should manage a timer that gets reset on any detected user input.",Development,Backlog,Highest,"dev@project.com","pm@project.com","",12,"security,session,interop","Sprint 2","User Authentication & Session Management","DICOM Management Platform","","","US-003","TASK-ARCH-03",2024-01-01 09:00,2024-01-01 09:00,"C#,Win32 API,P/Invoke"
"Create Lock Screen View and ViewModel","Develop the `LockScreenView.xaml` as a modal overlay. Implement the `LockScreenViewModel.cs` to handle password input and the unlock command. The view should display the current username.",Development,Backlog,Highest,"dev@project.com","pm@project.com","",6.2,"ui,wpf,security,session","Sprint 2","User Authentication & Session Management","DICOM Management Platform","","","US-003","TASK-AUTH-03",2024-01-01 09:00,2024-01-01 09:00,"WPF,XAML,MVVM"
"Implement Session Lock Orchestration","Create a `SessionManager` service that listens to the `OnInactive` event from the activity monitor. When triggered, it will be responsible for displaying the `LockScreenView` as a modal dialog over the `MainWindow`.",Development,Backlog,Highest,"dev@project.com","pm@project.com","",7.2,"security,session,wpf","Sprint 2","User Authentication & Session Management","DICOM Management Platform","","","US-003","TASK-SESSION-01,TASK-SESSION-02",2024-01-01 09:00,2024-01-01 09:00,"C#,WPF,Threading"
"E2E Test for Session Inactivity Lock","Create an automated end-to-end test that logs in, waits for a shortened inactivity period, verifies the lock screen appears, enters the correct password to unlock, and confirms the application state is restored.",Testing,Backlog,High,"qa@project.com","pm@project.com","",6.5,"testing,e2e","Sprint 2","User Authentication & Session Management","DICOM Management Platform","","","US-003","TASK-SESSION-03",2024-01-01 09:00,2024-01-01 09:00,"C#,Appium,WinAppDriver"
"Implement Backend Logic for Password Policy Service","Create a `PasswordPolicyService` that reads the policy from the database. Provide a method `Validate(string password)` that checks a given password against all configured rules (length, complexity, history).",Development,Backlog,High,"dev@project.com","pm@project.com","",7.2,"backend,security,password-policy","Sprint 2","Role-Based Access Control (RBAC) & Administration","DICOM Management Platform","","","US-008","TASK-ADMIN-10",2024-01-01 09:00,2024-01-01 09:00,"C#,Entity Framework Core"
"Develop Forced Change Password View and ViewModel","Create the `ChangePasswordView.xaml` and `ChangePasswordViewModel.cs`. The view will be modal and non-dismissible, containing fields for new password and confirmation, and displaying password policy rules. The ViewModel will handle validation and the update logic.",Development,Backlog,Highest,"dev@project.com","pm@project.com","",7.2,"ui,wpf,security,password-reset","Sprint 2","User Authentication & Session Management","DICOM Management Platform","","","US-007","TASK-ADMIN-12",2024-01-01 09:00,2024-01-01 09:00,"WPF,XAML,MVVM"
"Modify Authentication Flow for Forced Reset","Update the `AuthenticationService` and the `LoginViewModel`. After a successful login, check for the `isTemporaryPassword` flag on the user entity. If true, trigger navigation to the `ChangePasswordView` instead of the `MainWindow`.",Development,Backlog,Highest,"dev@project.com","pm@project.com","",6.5,"security,authentication,workflow","Sprint 2","User Authentication & Session Management","DICOM Management Platform","","","US-007","TASK-AUTH-03,TASK-PWRESET-01",2024-01-01 09:00,2024-01-01 09:00,"C#,MVVM"
"Implement Password Update Service Logic","Create a method in a user management service that takes a new password, validates it against policy and history, hashes it with BCrypt, updates the user's `passwordHash`, and clears the `isTemporaryPassword` flag in a single transaction.",Development,Backlog,Highest,"dev@project.com","pm@project.com","",3,"security,backend,user-management","Sprint 2","User Authentication & Session Management","DICOM Management Platform","","","US-007","TASK-ADMIN-12,TASK-DB-02",2024-01-01 09:00,2024-01-01 09:00,"C#,Entity Framework Core,BCrypt"
"Develop System Settings View with Tabbed Interface","Create the main `SettingsView.xaml` using a `TabControl` to host the different settings categories (PACS, Data Retention, Password Policy, etc.). Create the main `SettingsViewModel` to manage the overall state and child ViewModels.",Development,Backlog,High,"dev@project.com","pm@project.com","",7.2,"ui,wpf,admin,settings","Sprint 3","Role-Based Access Control (RBAC) & Administration","DICOM Management Platform","","","US-008","TASK-RBAC-04",2024-01-01 09:00,2024-01-01 09:00,"WPF,XAML,MVVM"
"Define EF Core Entities for System Settings","Define the database entities needed to store all system settings. This includes `SystemSetting` (key-value), `PacsConfiguration`, and `AutoRoutingRule`.",Development,Backlog,High,"dev@project.com","pm@project.com","",5.3,"database,ef-core,settings","Sprint 3","Role-Based Access Control (RBAC) & Administration","DICOM Management Platform","","","US-008","TASK-DB-02",2024-01-01 09:00,2024-01-01 09:00,"C#,Entity Framework Core"
"Implement Settings Service and Persistence","Create a singleton `SettingsService` that loads all system settings from the database into a cache on startup. Implement methods to save settings, which will update the database and the cache. This service will be the single source of truth for configuration throughout the application.",Development,Backlog,High,"dev@project.com","pm@project.com","",10.3,"backend,settings,caching","Sprint 3","Role-Based Access Control (RBAC) & Administration","DICOM Management Platform","","","US-008","TASK-DB-03",2024-01-01 09:00,2024-01-01 09:00,"C#,Entity Framework Core"
"Implement Data Retention and Password Policy UI","Create user controls for Data Retention and Password Policy settings. Implement the logic to bind to, validate, and save these simple key-value settings to the `SystemSettings` table.",Development,Backlog,High,"dev@project.com","pm@project.com","",8,"ui,admin,settings","Sprint 3","Role-Based Access Control (RBAC) & Administration","DICOM Management Platform","","","US-008","TASK-ADMIN-08,TASK-DB-03",2024-01-01 09:00,2024-01-01 09:00,"WPF,MVVM,C#"
"Implement Other Settings UI (SMTP, Storage Path)","Create the remaining user controls for the settings view, including SMTP server configuration and Primary Storage Path. Implement validation logic, such as a 'Test Connection' for SMTP and a 'Test Path' button for storage that verifies write permissions.",Development,Backlog,High,"dev@project.com","pm@project.com","",9.3,"ui,admin,settings","Sprint 3","Role-Based Access Control (RBAC) & Administration","DICOM Management Platform","","","US-008","TASK-ADMIN-08,TASK-DB-03",2024-01-01 09:00,2024-01-01 09:00,"WPF,MVVM,C#"
"Implement pgcrypto Value Converters for PHI Columns","Based on the PoC, implement the `ValueConverter`s in the main application. Identify all entity properties that contain PHI (e.g., PatientName, PatientID) and apply the encryption converter to them in the `DbContext`'s `OnModelCreating` method.",Development,Backlog,Highest,"dev@project.com","pm@project.com","",10.3,"security,database,encryption","Sprint 3","Security & Compliance","DICOM Management Platform","","","US-018","TASK-SEC-01,TASK-SEC-02",2024-01-01 09:00,2024-01-01 09:00,"C#,Entity Framework Core,PostgreSQL"
"Enforce TLS for PostgreSQL Connection","Configure the application's PostgreSQL connection string to require a secure connection. The connection string should include `SSL Mode=Require` or `Verify-Full` depending on the deployment environment.",Configuration,Backlog,Highest,"devops@project.com","pm@project.com","",2.2,"security,database,tls","Sprint 3","Security & Compliance","DICOM Management Platform","","","US-018","",2024-01-01 09:00,2024-01-01 09:00,"PostgreSQL"
"Implement Secure Logging (PHI Masking)","Configure Serilog with a custom enricher or destructuring policy that identifies and masks PHI before it is written to any log sink (file or Windows Event Log). The masking rule should apply to properties commonly containing PHI like PatientName and PatientID.",Development,Backlog,High,"dev@project.com","pm@project.com","",6,"security,logging,phi","Sprint 3","Security & Compliance","DICOM Management Platform","","","US-018","",2024-01-01 09:00,2024-01-01 09:00,"C#,Serilog"
"Implement Backend Logic for Data Retention Service","In the Windows Service, create a scheduled IHostedService that reads the data retention policy from the settings. It will periodically query for studies older than the specified period and permanently delete them and their associated files.",Development,Backlog,High,"dev@project.com","pm@project.com","",12,"backend,worker,data-management","Sprint 3","Role-Based Access Control (RBAC) & Administration","DICOM Management Platform","","","US-008","TASK-ADMIN-10,TASK-AUDIT-01",2024-01-01 09:00,2024-01-01 09:00,"C#,Entity Framework Core,.NET Hosting"
"Develop Audit Trail Viewer UI","Create the `AuditTrailView.xaml` (admin-only) to display audit logs. The view should contain a data grid for the logs and controls for filtering by user (dropdown) and date range (date pickers).",Development,Backlog,Highest,"dev@project.com","pm@project.com","",7.2,"ui,wpf,admin,audit","Sprint 3","Security & Compliance","DICOM Management Platform","","","US-017","TASK-ADMIN-08",2024-01-01 09:00,2024-01-01 09:00,"WPF,XAML,MVVM"
"Implement Audit Trail ViewModel and Data Fetching","Implement the `AuditTrailViewModel.cs`. It will fetch audit logs from a repository, handle the filter logic by reapplying the query to the database, and manage pagination or data virtualization to handle large log volumes.",Development,Backlog,Highest,"dev@project.com","pm@project.com","",8.3,"wpf,mvvm,audit","Sprint 3","Security & Compliance","DICOM Management Platform","","","US-017","TASK-AUDIT-01,TASK-AUDIT-02",2024-01-01 09:00,2024-01-01 09:00,"C#,MVVM,Entity Framework Core"
"Implement 'Export to CSV' Functionality","Add a command to the `AuditTrailViewModel` for exporting the currently filtered list of audit logs to a CSV file. The implementation should use a library like CsvHelper to generate the file.",Development,Backlog,High,"dev@project.com","pm@project.com","",6,"wpf,export,audit","Sprint 3","Security & Compliance","DICOM Management Platform","","","US-017","TASK-AUDIT-03",2024-01-01 09:00,2024-01-01 09:00,"C#,MVVM"
"Implement DICOM C-ECHO SCU Logic (Placeholder)","Create a service using fo-dicom that can send a C-ECHO verification request to a specified AE Title, IP, and Port, and return a success or failure result asynchronously.",Development,Backlog,High,"dev@project.com","pm@project.com","",6,"dicom,pacs,scu","Sprint 3","Role-Based Access Control (RBAC) & Administration","DICOM Management Platform","","Placeholder task to unblock PACS config UI","US-008","",2024-01-01 09:00,2024-01-01 09:00,"C#,fo-dicom"
"Implement PACS Configuration UI and Logic","Create the `PacsConfigView.xaml` user control. Implement CRUD operations for PACS settings. Include a 'Verify' button that triggers a DICOM C-ECHO request to the specified PACS to validate the connection.",Development,Backlog,High,"dev@project.com","pm@project.com","",12,"ui,admin,settings,pacs,dicom","Sprint 3","Role-Based Access Control (RBAC) & Administration","DICOM Management Platform","","","US-008","TASK-ADMIN-08,TASK-DB-03,TASK-DICOM-07",2024-01-01 09:00,2024-01-01 09:00,"WPF,MVVM,C#,fo-dicom"
"Implement DICOM Metadata Anonymization Service","Create an `AnonymizationService` that takes a DICOM study and an anonymization profile. It will iterate through the DICOM files, create copies, and use `fo-dicom` to remove or modify tags based on the selected profile's rules. Implement the 'Basic' and 'Full De-ID' profiles.",Development,Backlog,Medium,"dev@project.com","pm@project.com","",12,"security,anonymization,dicom","Sprint 4","Security & Compliance","DICOM Management Platform","","","US-019","",2024-01-01 09:00,2024-01-01 09:00,"C#,fo-dicom,DICOM Standard"
"Implement Pixel Data Anonymization (Blackout)","Extend the `AnonymizationService` with a method for pixel data anonymization. It will take a DICOM image and a list of blackout regions (rectangles). It will use `fo-dicom` to access the pixel data, 'burn in' the blackouts, and save the result as a new DICOM instance/series.",Development,Backlog,Medium,"dev@project.com","pm@project.com","",10.3,"security,anonymization,dicom","Sprint 4","Security & Compliance","DICOM Management Platform","","","US-019","",2024-01-01 09:00,2024-01-01 09:00,"C#,fo-dicom"
"Develop Anonymization UI","Create an `AnonymizationView.xaml` that allows the user to select a study, choose an anonymization profile, and initiate the process. For pixel anonymization, it should display the image and allow the user to draw blackout rectangles.",Development,Backlog,Medium,"dev@project.com","pm@project.com","",8.3,"ui,wpf,anonymization","Sprint 4","Security & Compliance","DICOM Management Platform","","","US-019","TASK-ANON-01,TASK-ANON-02",2024-01-01 09:00,2024-01-01 09:00,"WPF,XAML,MVVM"