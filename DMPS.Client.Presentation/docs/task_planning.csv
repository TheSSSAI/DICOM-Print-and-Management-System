Title,Description,Type,Status,Priority,Assignee,Reporter,Due Date,Estimate,Labels,Sprint,Epic,Project,Attachments,Comments,Parent ID,Dependencies,Created At,Updated At,Skills Required
"Core Architecture & Foundational Setup","Establish the foundational code structure, services, and patterns for the entire application, including DI, logging, IPC, and core database schemas.","Epic","Backlog","Critical","pm@project.com","pm@project.com","",151.8,"architecture,foundation","","Core Architecture & Foundational Setup","DicomApp",,,"","","2024-01-01 09:00","2024-01-01 09:00",".NET,Architecture"
"User & Session Management","Implement all features related to user identity, authentication, authorization, session management, and security policies.","Epic","Backlog","Critical","pm@project.com","pm@project.com","",328.6,"security,users","","User & Session Management","DicomApp",,,"","","2024-01-01 09:00","2024-01-01 09:00","C#,Security,.NET"
"DICOM Core Functionality","Implement all core features for handling DICOM data, including receiving, storing, querying, viewing, and manipulating images.","Epic","Backlog","Critical","pm@project.com","pm@project.com","",331.6,"dicom,core-feature","","DICOM Core Functionality","DicomApp",,,"","","2024-01-01 09:00","2024-01-01 09:00","fo-dicom,C#"
"Security & Compliance","Implement all features directly related to meeting security and compliance standards like HIPAA, including auditing, data encryption, and anonymization.","Epic","Backlog","Critical","pm@project.com","pm@project.com","",218.4,"security,compliance,hipaa","","Security & Compliance","DicomApp",,,"","","2024-01-01 09:00","2024-01-01 09:00","Security,.NET,PostgreSQL"
"Printing & Reporting","Develop the complete printing and reporting workflow, from print preview and layout configuration to asynchronous job processing and exporting.","Epic","Backlog","Critical","pm@project.com","pm@project.com","",322.1,"printing,reporting,ui","","Printing & Reporting","DicomApp",,,"","","2024-01-01 09:00","2024-01-01 09:00","WPF,C#,RabbitMQ"
"Deployment & Operations","Build, test, and finalize all deployment artifacts, operational tools, and documentation required for a successful release.","Epic","Backlog","Critical","pm@project.com","pm@project.com","",154.7,"deployment,ops,installer","","Deployment & Operations","DicomApp",,,"","","2024-01-01 09:00","2024-01-01 09:00","DevOps,MSIX,PowerShell"
"Establish Core Solution Structure and DI Framework","As a Developer, I need the multi-project solution structure and dependency injection framework established so that we have a clean, maintainable, and scalable foundation for building all subsequent features.","Story","Backlog","Critical","pm@project.com","pm@project.com","",20,"architecture,setup","Sprint 1","Core Architecture & Foundational Setup","DicomApp",,,"EPIC-001","","2024-01-01 09:00","2024-01-01 09:00",".NET,Visual Studio"
"Create Multi-Project Solution in Visual Studio","Create the Visual Studio solution file and the five core projects: DicomApp.Client.Wpf, DicomApp.Service, DicomApp.Core, DicomApp.DataAccess, and DicomApp.Infrastructure. All projects will target .NET 8.","Task","Backlog","High","backend-dev@project.com","pm@project.com","",4,"EPIC-001,WI-001,setup","Sprint 1","Core Architecture & Foundational Setup","DicomApp","","Solution file `DicomApp.sln` is created.","US-001","","2024-01-01 09:00","2024-01-01 09:00",".NET 8,Visual Studio"
"Set Project References and Dependencies","Establish the correct dependency graph between the projects. For example, Client references Core; Service references Core, DataAccess, and Infrastructure; DataAccess references Core.","Task","Backlog","High","backend-dev@project.com","pm@project.com","",2.2,"EPIC-001,WI-001,setup","Sprint 1","Core Architecture & Foundational Setup","DicomApp","","Project references are correctly configured in each `.csproj` file.","US-001","TASK-001","2024-01-01 09:00","2024-01-01 09:00","Visual Studio,.NET"
"Configure Generic Host and DI in WPF Client","Implement the .NET Generic Host (`Host.CreateDefaultBuilder`) in the `App.xaml.cs` of the WPF project. Configure the `Microsoft.Extensions.DependencyInjection` container to register application services and the main window.","Task","Backlog","High","frontend-dev@project.com","pm@project.com","",6.3,"EPIC-001,WI-002,DI,WPF","Sprint 1","Core Architecture & Foundational Setup","DicomApp","","The `OnStartup` method in `App.xaml.cs` correctly builds and starts the host.","US-001","TASK-002","2024-01-01 09:00","2024-01-01 09:00","WPF,C#,Dependency Injection"
"Configure Generic Host and DI in Windows Service","Implement the .NET Generic Host in the `Program.cs` of the DicomApp.Service project. Configure it to run as a Windows Service using `UseWindowsService()`. Set up the DI container for service-specific dependencies.","Task","Backlog","High","backend-dev@project.com","pm@project.com","",7.5,"EPIC-001,WI-002,DI,service","Sprint 1","Core Architecture & Foundational Setup","DicomApp","","`Program.cs` is configured to build and run the host.","US-001","TASK-002","2024-01-01 09:00","2024-01-01 09:00",".NET 8,C#,Windows Service"
"Implement Secure Application Logging","As an Administrator, I want all significant application events logged to both a local file and the Windows Event Log, with all Protected Health Information (PHI) masked, so that I can securely troubleshoot issues and perform security audits.","Story","Backlog","Critical","pm@project.com","pm@project.com","",24.3,"logging,security,hipaa","Sprint 1","Core Architecture & Foundational Setup","DicomApp",,,"EPIC-001","US-001","2024-01-01 09:00","2024-01-01 09:00","Serilog,C#,Security"
"Integrate Serilog and Configure Sinks","Add Serilog NuGet packages to the Client and Service projects. Configure Serilog as the logging provider in the Generic Host setup. Implement sinks for writing to a rolling text file and the Windows Event Log.","Task","Backlog","High","backend-dev@project.com","pm@project.com","",8.2,"EPIC-001,WI-003,logging,Serilog","Sprint 1","Core Architecture & Foundational Setup","DicomApp","","Calling `ILogger.LogInformation` from anywhere in the app writes a message to a text file.","US-002","TASK-003,TASK-004","2024-01-01 09:00","2024-01-01 09:00","Serilog,C#"
"Design and Implement PHI Masking Enricher for Serilog","Create a custom Serilog `ILogEventEnricher` that inspects log messages and their properties. The enricher will use regular expressions or other pattern matching to find and replace PHI (like Patient Name, Patient ID) with a redacted value (e.g., '[REDACTED]').","Task","Backlog","High","security-dev@project.com","pm@project.com","",10.3,"EPIC-001,WI-003,logging,security,HIPAA","Sprint 1","Core Architecture & Foundational Setup","DicomApp","","The `PhiMaskingEnricher` class is implemented.","US-002","TASK-005","2024-01-01 09:00","2024-01-01 09:00","Serilog,C#,Regular Expressions"
"Write Unit Tests for PHI Masking Logic","Create a dedicated xUnit test project or class to thoroughly test the `PhiMaskingEnricher`. Tests should cover various log message formats, structured logging properties, and multiple types of PHI to ensure the masking is comprehensive and does not have unintended side effects.","Task","Backlog","High","qa-dev@project.com","pm@project.com","",5.2,"EPIC-001,WI-003,testing,security","Sprint 1","Core Architecture & Foundational Setup","DicomApp","","Test case for a simple string message with Patient Name passes.","US-002","TASK-006","2024-01-01 09:00","2024-01-01 09:00","xUnit,C#"
"Establish Asynchronous Task Processing Framework","As a Developer, I need a robust asynchronous task processing framework using RabbitMQ so that long-running operations initiated by the user do not freeze the client UI and can be processed reliably by the background service.","Story","Backlog","Critical","pm@project.com","pm@project.com","",46.5,"rabbitmq,ipc,async","Sprint 1","Core Architecture & Foundational Setup","DicomApp",,,"EPIC-001","US-001,US-002","2024-01-01 09:00","2024-01-01 09:00","RabbitMQ,C#"
"Implement RabbitMQ Connection Service","Create a singleton service responsible for managing the connection to the RabbitMQ broker. This service will handle connection logic, credentials, and resilience (auto-reconnect). It will be shared by producers and consumers.","Task","Backlog","High","backend-dev@project.com","pm@project.com","",6.3,"EPIC-001,WI-004,RabbitMQ,IPC","Sprint 1","Core Architecture & Foundational Setup","DicomApp","","Service successfully establishes a connection to a running RabbitMQ broker.","US-003","TASK-003,TASK-004","2024-01-01 09:00","2024-01-01 09:00","RabbitMQ,C#"
"Implement Generic RabbitMQ Producer Service","Create a service for the client application that can publish any serializable object to a specified RabbitMQ exchange. This service will handle channel creation, serialization (to JSON), and setting message properties for persistence.","Task","Backlog","High","backend-dev@project.com","pm@project.com","",8.3,"EPIC-001,WI-004,RabbitMQ,producer","Sprint 1","Core Architecture & Foundational Setup","DicomApp","","Service provides a method like `PublishAsync<T>(T message, string queueName)`.","US-003","TASK-008","2024-01-01 09:00","2024-01-01 09:00","RabbitMQ,C#"
"Implement RabbitMQ Consumer Hosted Service","In the Windows Service project, create a base `IHostedService` for consuming messages from a specific queue. This service will handle the boilerplate of subscribing to the queue, receiving messages, and deserializing them.","Task","Backlog","High","backend-dev@project.com","pm@project.com","",12,"EPIC-001,WI-004,RabbitMQ,consumer","Sprint 1","Core Architecture & Foundational Setup","DicomApp","","The hosted service starts and subscribes to its configured queue upon service startup.","US-003","TASK-008,TASK-009","2024-01-01 09:00","2024-01-01 09:00","RabbitMQ,C#,async/await"
"Configure and Test Dead-Letter Exchange (DLX) Mechanism","Configure the main processing queues with arguments to route rejected messages to a Dead-Letter Exchange (DLX). Create and bind a corresponding Dead-Letter Queue (DLQ). Implement logic in the consumer to reject messages (`basic.nack` with `requeue=false`) after a configurable number of failed processing attempts.","Task","Backlog","High","backend-dev@project.com","pm@project.com","",12,"EPIC-001,WI-004,RabbitMQ,DLQ,reliability","Sprint 1","Core Architecture & Foundational Setup","DicomApp","","Queue declaration includes `x-dead-letter-exchange` argument.","US-003","TASK-010","2024-01-01 09:00","2024-01-01 09:00","RabbitMQ,C#"
"Create Integration Test for Message Durability","Write an automated integration test that: 1. Publishes a persistent message to a durable queue. 2. Stops the RabbitMQ service/container. 3. Restarts the RabbitMQ service/container. 4. Connects a consumer and verifies the original message is successfully received.","Task","Backlog","High","qa-dev@project.com","pm@project.com","",7.2,"EPIC-001,WI-004,RabbitMQ,testing,reliability","Sprint 1","Core Architecture & Foundational Setup","DicomApp","","The test passes consistently.","US-003","TASK-009,TASK-010","2024-01-01 09:00","2024-01-01 09:00","xUnit,Testcontainers,Docker,C#"
"Implement Synchronous IPC for Service Status Checks","As a User, I want the application to instantly know if a required background service is running before I try to perform an action like printing, so that I get immediate feedback and don't submit tasks that are destined to fail.","Story","Backlog","High","pm@project.com","pm@project.com","",18,"ipc,named-pipes,status-check","Sprint 1","Core Architecture & Foundational Setup","DicomApp",,,"EPIC-001","US-001","2024-01-01 09:00","2024-01-01 09:00","Named Pipes,C#"
"Implement Named Pipe Server in Windows Service","In the background service, create a hosted service that starts a `NamedPipeServerStream`. This server will listen for client connections, read a simple request message (e.g., 'PING'), and write a response message (e.g., 'PONG').","Task","Backlog","High","backend-dev@project.com","pm@project.com","",8.2,"EPIC-001,WI-005,IPC,NamedPipes","Sprint 1","Core Architecture & Foundational Setup","DicomApp","","The named pipe server is started when the Windows Service starts.","US-004","TASK-004","2024-01-01 09:00","2024-01-01 09:00","Named Pipes,C#,.NET 8"
"Implement Named Pipe Client in WPF Application","In the client application, create a service that uses `NamedPipeClientStream` to connect to the background service's pipe. The client will send the 'PING' request, read the 'PONG' response, and handle connection timeouts or failures gracefully.","Task","Backlog","High","backend-dev@project.com","pm@project.com","",9.2,"EPIC-001,WI-005,IPC,NamedPipes","Sprint 1","Core Architecture & Foundational Setup","DicomApp","","The client can successfully connect to the server pipe when the service is running.","US-004","TASK-003,TASK-013","2024-01-01 09:00","2024-01-01 09:00","Named Pipes,C#,async/await"
"DB: Implement User, Role, and PasswordHistory Entities and Migration","Using EF Core Code-First, create the C# entity classes for `User`, `Role`, and `PasswordHistory` based on the provided ERD. Include properties for password hash, role foreign key, `isActive`, `isTemporaryPassword`, etc. Generate the initial EF Core migration.","Task","Backlog","Critical","db-dev@project.com","pm@project.com","",8.2,"EPIC-002,WI-011,database,EFCore","Sprint 1","User & Session Management","DicomApp","","`User.cs`, `Role.cs`, and `PasswordHistory.cs` entities are created.","US-005","TASK-001","2024-01-01 09:00","2024-01-01 09:00","Entity Framework Core,C#,PostgreSQL"
"DB: Create SystemSetting Entity and Migration","Create an EF Core entity `SystemSetting` with a primary key `SettingKey` (string) and a `SettingValue` (string). This will be a simple key-value table to store application-wide settings like the password policy parameters.","Task","Backlog","Critical","db-dev@project.com","pm@project.com","",3.2,"EPIC-002,WI-009,database,settings","Sprint 1","User & Session Management","DicomApp","","`SystemSetting.cs` entity is created.","US-007","TASK-015","2024-01-01 09:00","2024-01-01 09:00","Entity Framework Core,C#"
"DB: Implement DICOM Data Entities and Migration","Create the EF Core entities for `Patient`, `Study`, `Series`, and `Image` based on the ERD. Configure relationships and properties for storing DICOM metadata. Include the self-referencing `originalStudyId` for the 'working copy' feature. Generate the EF Core migration.","Task","Backlog","Critical","db-dev@project.com","pm@project.com","",8.3,"EPIC-003,WI-019,database,EFCore","Sprint 1","DICOM Core Functionality","DicomApp","","All four DICOM-related entities are created in `DicomApp.DataAccess`.","US-015","TASK-015","2024-01-01 09:00","2024-01-01 09:00","Entity Framework Core,C#"
"DB: Implement PrintJob Entity and Migration","Create an EF Core entity `PrintJob` to store the state of each job. It will include fields for JobId, SubmitterId, Status, Priority, FailureReason, and the JobPayload (JSONB). Generate the database migration.","Task","Backlog","High","db-dev@project.com","pm@project.com","",4.2,"EPIC-005,WI-028,database,printing","Sprint 1","Printing & Reporting","DicomApp","","`PrintJob.cs` entity is created.","US-028","TASK-015","2024-01-01 09:00","2024-01-01 09:00","Entity Framework Core,C#"
"DB: Implement AuditLog Entity and Migration","Create the `AuditLog` EF Core entity based on the ERD. It should include fields for a primary key, UserId, Timestamp, EventType, EntityId, Details (JSONB), and CorrelationId. Generate the database migration.","Task","Backlog","Critical","db-dev@project.com","pm@project.com","",4.2,"EPIC-004,WI-020,database,auditing","Sprint 1","Security & Compliance","DicomApp","","`AuditLog.cs` entity is created with all required properties.","US-022","TASK-015","2024-01-01 09:00","2024-01-01 09:00","Entity Framework Core,C#"
"Backend: Implement AuthenticationService with BCrypt Hashing","Create an `IAuthenticationService` and its implementation. The service will take a username and password, query the database for the user, and use a BCrypt library to verify the provided password against the stored hash. It should also check if the account is active.","Task","Backlog","Critical","backend-dev@project.com","pm@project.com","",12,"EPIC-002,WI-007,security,authentication","Sprint 1","User & Session Management","DicomApp","","The service returns a success result for a valid username/password and active account.","US-005","TASK-015,TASK-003","2024-01-01 09:00","2024-01-01 09:00","C#,BCrypt,Entity Framework Core"
"Testing: Write Integration Test for AuthenticationService","Create an integration test for the `AuthenticationService`. This test will use an in-memory database or a test database container to validate the full authentication logic against a real data source. It will test success, failure (wrong password), and disabled account scenarios.","Task","Backlog","High","qa-dev@project.com","pm@project.com","",10.2,"EPIC-002,WI-007,testing,integration","Sprint 1","User & Session Management","DicomApp","","Test successfully creates a test user with a BCrypt-hashed password in the test database.","US-005","TASK-016","2024-01-01 09:00","2024-01-01 09:00","xUnit,Entity Framework Core,C#"
"Backend: Create User Session Context Service","Create a singleton service, `ICurrentUserContext`, that holds the state of the currently logged-in user, including their UserId and Role. This service will be populated by the `AuthenticationService` upon successful login.","Task","Backlog","Critical","backend-dev@project.com","pm@project.com","",6,"EPIC-002,WI-008,RBAC,security","Sprint 1","User & Session Management","DicomApp","","The `ICurrentUserContext` interface and its implementation class are created.","US-006","TASK-016","2024-01-01 09:00","2024-01-01 09:00","C#,Dependency Injection"
"Backend: Create Centralized Audit Service","Create an `IAuditService` with a method like `LogEventAsync(AuditEvent data)`. This service will be responsible for creating `AuditLog` entities and saving them to the database. It should be registered as a scoped or transient service in the DI container.","Task","Backlog","Critical","backend-dev@project.com","pm@project.com","",8,"EPIC-004,WI-020,backend,auditing","Sprint 1","Security & Compliance","DicomApp","","The service interface and implementation are created.","US-022","TASK-075","2024-01-01 09:00","2024-01-01 09:00","C#,Entity Framework Core"
"Spike: Research and Prototype Inactivity Detection in WPF","Research and create a small proof-of-concept for the most reliable method to detect application-wide user inactivity in WPF. Compare methods like a `DispatcherTimer` with event listeners vs. low-level Windows hooks (P/Invoke `GetLastInputInfo`). The goal is to choose a method that is reliable without causing performance issues.","Task","Backlog","High","frontend-dev@project.com","pm@project.com","",8.3,"EPIC-002,WI-013,spike,research","Sprint 1","User & Session Management","DicomApp","","A recommendation report is produced, outlining the pros and cons of at least two methods.","US-013","","2024-01-01 09:00","2024-01-01 09:00","WPF,C#,P/Invoke"
"Implement Inactivity Monitor Service","Based on the outcome of the research spike, implement a singleton service (`InactivityMonitorService`) that tracks user input globally within the application. The service will use a timer that gets reset on user activity. When the timer elapses (e.g., after 15 minutes), it will raise an `OnInactive` event.","Task","Backlog","High","frontend-dev@project.com","pm@project.com","",12,"EPIC-002,WI-013,security,session-lock","Sprint 1","User & Session Management","DicomApp","","The service is implemented and registered as a singleton.","US-013","TASK-041","2024-01-01 09:00","2024-01-01 09:00","WPF,C#"
"Service: Implement DICOM C-STORE SCP Hosted Service","Using the `fo-dicom` library, create an `IHostedService` in the background service that starts a DICOM server listening on a configurable port. Implement the `IDicomCStoreProvider` interface to handle incoming C-STORE requests.","Task","Backlog","High","backend-dev@project.com","pm@project.com","",12,"EPIC-003,WI-014,DICOM,fo-dicom,networking","Sprint 1","DICOM Core Functionality","DicomApp","","The DICOM server starts when the Windows Service starts.","US-015","TASK-004","2024-01-01 09:00","2024-01-01 09:00","fo-dicom,C#,.NET 8"
"Service: Implement SCP Logic to Queue Metadata","Within the `OnCStoreRequest` handler, after `fo-dicom` saves the incoming file to a temporary location, parse the file to extract key metadata (PatientID, StudyUID, etc.). Package this metadata into a DTO and publish it as a message to a dedicated RabbitMQ queue.","Task","Backlog","High","backend-dev@project.com","pm@project.com","",9.2,"EPIC-003,WI-014,DICOM,decoupling","Sprint 1","DICOM Core Functionality","DicomApp","","The handler successfully saves the incoming DICOM file.","US-015","TASK-009,TASK-048","2024-01-01 09:00","2024-01-01 09:00","fo-dicom,C#,RabbitMQ"
"Backend: Implement DICOM SCU Service for C-FIND/C-MOVE","Create a client-side service (`DicomScuService`) that uses `fo-dicom` to act as a Service Class User (SCU). Implement methods `FindAsync(...)` and `MoveAsync(...)` that create and send C-FIND and C-MOVE requests to a remote PACS.","Task","Backlog","High","backend-dev@project.com","pm@project.com","",13.5,"EPIC-003,WI-016,DICOM,fo-dicom,networking","Sprint 1","DICOM Core Functionality","DicomApp","","`FindAsync` method successfully sends a C-FIND request and returns a list of parsed results.","US-016","TASK-048","2024-01-01 09:00","2024-01-01 09:00","fo-dicom,C#"
"Implement Secure Credential Storage using Windows Credential Manager","Create a service that abstracts the Windows Credential Manager. Refactor the application's startup configuration to retrieve sensitive secrets (DB password, API keys) from the Credential Manager instead of `appsettings.json`. Update the installer/deployment guide to include steps for setting these credentials.","Task","Backlog","Critical","security-dev@project.com","pm@project.com","",10.2,"EPIC-004,WI-024,security,secrets","Sprint 1","Security & Compliance","DicomApp","","A `CredentialManagerService` is implemented.","US-025","TASK-003,TASK-004","2024-01-01 09:00","2024-01-01 09:00","C#,.NET Security"
"Implement unique correlation ID for asynchronous operations","Generate a unique correlation ID for every user-initiated asynchronous operation. This ID must be included in all related log entries, from the initial client request, through RabbitMQ, to final processing in the background service.","Task","Backlog","High","backend-dev@project.com","pm@project.com","",8.3,"EPIC-001,WI-039,logging,tracing","Sprint 1","Core Architecture & Foundational Setup","DicomApp","","A correlation ID is generated on the client for each async task.","","TASK-005,TASK-009","2024-01-01 09:00","2024-01-01 09:00","C#,Serilog,RabbitMQ"
"Integrate automated dependency vulnerability scan","Integrate OWASP Dependency-Check or a similar tool into the development and build pipeline to identify and mitigate security risks associated with third-party libraries.","Task","Backlog","High","devops@project.com","pm@project.com","",5.3,"EPIC-004,WI-024,security,devops,ci-cd","Sprint 1","Security & Compliance","DicomApp","","A vulnerability scan is successfully integrated into the CI pipeline.","","TASK-001","2024-01-01 09:00","2024-01-01 09:00","DevOps,CI/CD,Security"
"User Login with Secure Credentials","As a Registered System User, I want to securely log in to the application using my username and password so that I can gain access to the system and its features.","Story","Backlog","Critical","pm@project.com","pm@project.com","",53.7,"authentication,security,ui","Sprint 2","User & Session Management","DicomApp",,,"EPIC-002","US-001","2024-01-01 09:00","2024-01-01 09:00","WPF,C#,BCrypt"
"UI: Create LoginView XAML using Material Design","Develop the user interface for the login screen in XAML. Use the Material Design in XAML Toolkit to style controls. The view will include a username textbox, a `PasswordBox` for the password, a login button, and a text block for displaying error messages.","Task","Backlog","High","frontend-dev@project.com","pm@project.com","",6,"EPIC-002,WI-006,UI,WPF","Sprint 2","User & Session Management","DicomApp","","The `LoginView.xaml` file is created.","US-005","TASK-001","2024-01-01 09:00","2024-01-01 09:00","WPF,XAML,MVVM,Material Design"
"UI: Implement LoginViewModel Logic","Create the `LoginViewModel.cs` to back the `LoginView`. Implement properties for username and password, an `ICommand` for the login button, and logic to call the `IAuthenticationService`. The ViewModel will manage the UI state (e.g., displaying error messages, handling navigation on success).","Task","Backlog","High","frontend-dev@project.com","pm@project.com","",12,"EPIC-002,WI-006,UI,MVVM","Sprint 2","User & Session Management","DicomApp","","The `LoginViewModel.cs` is created and set as the `DataContext` for the `LoginView`.","US-005","TASK-016,TASK-017","2024-01-01 09:00","2024-01-01 09:00","WPF,MVVM,C#"
"Enforce Role-Based Feature Access","As a System User, I want the application's features and UI controls to be enabled or disabled based on my assigned role so that I only see and can perform actions I am authorized for.","Story","Backlog","Critical","pm@project.com","pm@project.com","",32.7,"rbac,security,authorization","Sprint 2","User & Session Management","DicomApp",,,"EPIC-002","US-005","2024-01-01 09:00","2024-01-01 09:00","C#,WPF"
"Backend: Implement Authorization Checks in Services","In services that perform restricted actions (e.g., `UserManagementService`, `MetadataEditService`), inject the `ICurrentUserContext` and add checks at the beginning of admin-only methods to verify the user's role. Throw a custom `AuthorizationException` if the role is not 'Administrator'.","Task","Backlog","High","backend-dev@project.com","pm@project.com","",8.3,"EPIC-002,WI-008,RBAC,security","Sprint 2","User & Session Management","DicomApp","","Admin-only service methods contain a role check.","US-006","TASK-020","2024-01-01 09:00","2024-01-01 09:00","C#"
"UI: Create WPF Converters/Helpers for Role-Based Visibility","Create WPF `IValueConverter`s (e.g., `RoleToVisibilityConverter`) or attached properties that can be used in XAML to control the `Visibility` or `IsEnabled` state of a UI element based on the current user's role. This allows for declarative UI authorization.","Task","Backlog","High","frontend-dev@project.com","pm@project.com","",9.2,"EPIC-002,WI-008,RBAC,UI","Sprint 2","User & Session Management","DicomApp","","A converter exists that takes a required role (e.g., 'Administrator') as a parameter.","US-006","TASK-020","2024-01-01 09:00","2024-01-01 09:00","WPF,XAML,C#"
"UI: Integrate RBAC Helpers into Main Application Views","Apply the new RBAC converters/helpers to all relevant UI elements throughout the application, such as the 'Administration' tab, 'Edit Metadata' button, and buttons within the User Management screen. This task involves updating multiple XAML files.","Task","Backlog","High","frontend-dev@project.com","pm@project.com","",9.2,"EPIC-002,WI-008,RBAC,UI","Sprint 2","User & Session Management","DicomApp","","The main 'Administration' navigation element is hidden for Technicians.","US-006","TASK-022","2024-01-01 09:00","2024-01-01 09:00","WPF,XAML"
"Configure System-Wide Password Policy","As an Administrator, I want to configure the system-wide password policy (length, complexity, history, expiration) so that I can enforce security standards for all user accounts in compliance with our organization's policies.","Story","Backlog","Critical","pm@project.com","pm@project.com","",41.3,"security,password-policy,admin","Sprint 2","User & Session Management","DicomApp",,,"EPIC-002","US-005,US-022","2024-01-01 09:00","2024-01-01 09:00","C#,EF Core,WPF"
"Backend: Implement Password Policy Validation Service","Create an `IPasswordPolicyService` that retrieves policy settings from the `SystemSettings` table. Implement a `ValidatePassword(string password, User user)` method that checks the password against all configured rules: length, complexity (uppercase, lowercase, number, symbol), and history (checks against the `PasswordHistory` table).","Task","Backlog","High","backend-dev@project.com","pm@project.com","",12,"EPIC-002,WI-009,security,backend","Sprint 2","User & Session Management","DicomApp","","The service correctly fetches policy settings from the database.","US-007","TASK-015,TASK-024","2024-01-01 09:00","2024-01-01 09:00","C#,Entity Framework Core"
"Backend: Implement Password Expiration Check","Extend the `AuthenticationService` to check the `passwordLastChangedAt` field for the user upon login. If the age of the password exceeds the configured expiration policy, the service should return a status indicating that a password change is required.","Task","Backlog","High","backend-dev@project.com","pm@project.com","",6.3,"EPIC-002,WI-009,security,authentication","Sprint 2","User & Session Management","DicomApp","","The authentication service checks the password age against the policy.","US-007","TASK-016,TASK-025","2024-01-01 09:00","2024-01-01 09:00","C#"
"UI: Create Password Policy View and ViewModel for Admin","In the Administration section, create a new WPF view and viewmodel (`PasswordPolicyView`/`ViewModel`) for managing the password policy. The UI will have controls (e.g., numeric up/downs, checkboxes) for all configurable parameters.","Task","Backlog","High","frontend-dev@project.com","pm@project.com","",12,"EPIC-002,WI-009,UI,admin","Sprint 2","User & Session Management","DicomApp","","The view is accessible to Administrators.","US-007","TASK-025,TASK-022","2024-01-01 09:00","2024-01-01 09:00","WPF,MVVM,C#"
"Testing: Write Unit Tests for Password Policy Validator","Create a comprehensive set of unit tests for the `PasswordPolicyService`. Each rule (length, complexity, history) must be tested individually with both passing and failing password examples.","Task","Backlog","High","qa-dev@project.com","pm@project.com","",7.2,"EPIC-002,WI-009,testing,security","Sprint 2","User & Session Management","DicomApp","","Test for minimum length passes and fails correctly.","US-007","TASK-025","2024-01-01 09:00","2024-01-01 09:00","xUnit,C#"
"Create New User Account","As an Administrator, I want to create a new user account with a username, role, and a system-generated temporary password so that I can provision access for new staff.","Story","Backlog","Critical","pm@project.com","pm@project.com","",32.3,"user-management,admin","Sprint 2","User & Session Management","DicomApp",,,"EPIC-002","US-006","2024-01-01 09:00","2024-01-01 09:00","C#,WPF,EF Core"
"Backend: Implement User Management Service (Create)","Create a `UserManagementService` with a `CreateUserAsync` method. This method will: 1. Check for username uniqueness. 2. Generate a secure temporary password. 3. Hash the password with BCrypt. 4. Create a new `User` entity, setting the `isTemporaryPassword` flag to true. 5. Save the new user to the database.","Task","Backlog","High","backend-dev@project.com","pm@project.com","",12,"EPIC-002,WI-010,backend,user-management","Sprint 2","User & Session Management","DicomApp","","Method throws an exception if the username already exists.","US-008","TASK-015","2024-01-01 09:00","2024-01-01 09:00","C#,Entity Framework Core,BCrypt"
"UI: Create User Management List View and ViewModel","Develop the main view for user management (`UserManagementView`) which will display a list/grid of all users. The accompanying ViewModel will fetch the list of users from the service and expose it to the view. The view will include an 'Add User' button.","Task","Backlog","High","frontend-dev@project.com","pm@project.com","",8.3,"EPIC-002,WI-010,UI,user-management","Sprint 2","User & Session Management","DicomApp","","The view is created and accessible to Admins.","US-008","TASK-029","2024-01-01 09:00","2024-01-01 09:00","WPF,MVVM,C#"
"UI: Implement 'Add User' Dialog and Logic","Create a modal dialog (`AddUserDialog`) for creating a new user. The dialog's ViewModel will collect the username and role, then call the `UserManagementService.CreateUserAsync` method. It will handle success (displaying the temporary password) and failure (displaying an error message).","Task","Backlog","High","frontend-dev@project.com","pm@project.com","",11.2,"EPIC-002,WI-010,UI,user-management","Sprint 2","User & Session Management","DicomApp","","The 'Add User' button opens the modal dialog.","US-008","TASK-029,TASK-030","2024-01-01 09:00","2024-01-01 09:00","WPF,MVVM,C#"
"Edit and Disable User Accounts","As an Administrator, I want to edit an existing user's details, such as their role or account status (enabled/disabled), so that I can manage user permissions and access as job responsibilities change.","Story","Backlog","Critical","pm@project.com","pm@project.com","",22.5,"user-management,admin","Sprint 2","User & Session Management","DicomApp",,,"EPIC-002","US-008","2024-01-01 09:00","2024-01-01 09:00","C#,WPF,EF Core"
"Backend: Implement User Management Service (Update)","Extend the `UserManagementService` with an `UpdateUserAsync` method. This method will handle changes to a user's role and `isActive` status. It must include critical safety logic to prevent disabling or changing the role of the last active administrator.","Task","Backlog","High","backend-dev@project.com","pm@project.com","",10.2,"EPIC-002,WI-010,backend,user-management","Sprint 2","User & Session Management","DicomApp","","Method successfully updates a user's role in the database.","US-009","TASK-029","2024-01-01 09:00","2024-01-01 09:00","C#,Entity Framework Core"
"UI: Implement 'Edit User' Dialog and Logic","Create an `EditUserDialog` and ViewModel. When opened for a user, it should be pre-populated with their current role and status. The ViewModel will call the `UserManagementService.UpdateUserAsync` method on save. It should also prevent an admin from editing their own details.","Task","Backlog","High","frontend-dev@project.com","pm@project.com","",12,"EPIC-002,WI-010,UI,user-management","Sprint 2","User & Session Management","DicomApp","","An 'Edit' button in the user list opens the dialog, populated with the selected user's data.","US-009","TASK-030,TASK-032","2024-01-01 09:00","2024-01-01 09:00","WPF,MVVM,C#"
"Delete User Account","As an Administrator, I want to permanently delete a user's account so that I can revoke access for personnel who have left the organization.","Story","Backlog","High","pm@project.com","pm@project.com","",14.8,"user-management,admin,security","Sprint 2","User & Session Management","DicomApp",,,"EPIC-002","US-008","2024-01-01 09:00","2024-01-01 09:00","C#,WPF,EF Core"
"Backend: Implement User Management Service (Delete)","Extend `UserManagementService` with a `DeleteUserAsync` method. This method will permanently remove a user record from the database. It must include safety checks to prevent self-deletion and deletion of the last active administrator.","Task","Backlog","High","backend-dev@project.com","pm@project.com","",7.2,"EPIC-002,WI-010,backend,user-management","Sprint 2","User & Session Management","DicomApp","","Method successfully deletes the specified user from the database.","US-010","TASK-032","2024-01-01 09:00","2024-01-01 09:00","C#,Entity Framework Core"
"UI: Implement Delete User Confirmation and Logic","In the `UserManagementViewModel`, implement the command for the 'Delete' button. This command should first display a confirmation dialog. Upon confirmation, it will call the `UserManagementService.DeleteUserAsync` method and refresh the user list upon success.","Task","Backlog","High","frontend-dev@project.com","pm@project.com","",7.5,"EPIC-002,WI-010,UI,user-management","Sprint 2","User & Session Management","DicomApp","","The 'Delete' button is disabled in the UI for the current user and the last admin.","US-010","TASK-030,TASK-034","2024-01-01 09:00","2024-01-01 09:00","WPF,MVVM,C#"
"Reset User Password","As an Administrator, I want to reset a user's password so that I can restore access for a user who has forgotten their credentials.","Story","Backlog","Critical","pm@project.com","pm@project.com","",24.3,"user-management,security,admin","Sprint 2","User & Session Management","DicomApp",,,"EPIC-002","US-012","2024-01-01 09:00","2024-01-01 09:00","C#,WPF,Security"
"Backend: Implement Password Reset Logic in Service","Extend `UserManagementService` with a `ResetPasswordAsync` method. This method will generate a new temporary password, hash it, update the user's password hash in the database, and set the `isTemporaryPassword` flag to true. It must also log the event to the audit trail.","Task","Backlog","High","backend-dev@project.com","pm@project.com","",9.2,"EPIC-002,WI-012,backend,security","Sprint 2","User & Session Management","DicomApp","","The method generates a cryptographically secure temporary password.","US-011","TASK-029","2024-01-01 09:00","2024-01-01 09:00","C#,Entity Framework Core,BCrypt"
"UI: Implement Password Reset Dialog and Logic","In the `UserManagementViewModel`, implement a command for a 'Reset Password' button. This will show a confirmation dialog, and on confirmation, call the `ResetPasswordAsync` service method. A subsequent dialog will display the new temporary password to the admin.","Task","Backlog","High","frontend-dev@project.com","pm@project.com","",8.3,"EPIC-002,WI-012,UI,user-management","Sprint 2","User & Session Management","DicomApp","","A 'Reset Password' button is available for users (but disabled for self).","US-011","TASK-030,TASK-036","2024-01-01 09:00","2024-01-01 09:00","WPF,MVVM,C#"
"Forced Password Change on First Login","As a System User, I want to be forced to change my temporary password upon my first login so that my account is secured with a password that only I know.","Story","Backlog","Critical","pm@project.com","pm@project.com","",32.3,"security,authentication,workflow","Sprint 2","User & Session Management","DicomApp",,,"EPIC-002","US-011","2024-01-01 09:00","2024-01-01 09:00","C#,WPF"
"Backend: Update Authentication Flow for Forced Change","Modify the `AuthenticationService` to check the `isTemporaryPassword` flag. If true, the service should return a distinct status (e.g., `AuthenticationResult.ForceChangePassword`) that the client can use to trigger the redirection.","Task","Backlog","High","backend-dev@project.com","pm@project.com","",6,"EPIC-002,WI-012,backend,authentication","Sprint 2","User & Session Management","DicomApp","","Logging in with an account where `isTemporaryPassword` is true returns the new, specific status.","US-012","TASK-016","2024-01-01 09:00","2024-01-01 09:00","C#"
"UI: Create Force Change Password View and ViewModel","Create a new, non-dismissible view (`ForceChangePasswordView`) and its ViewModel. The view will contain fields for the new password and confirmation. The ViewModel will validate the new password against the system policy and call a service to update it.","Task","Backlog","High","frontend-dev@project.com","pm@project.com","",12,"EPIC-002,WI-012,UI,security","Sprint 2","User & Session Management","DicomApp","","The view is created with fields for new password and confirmation.","US-012","TASK-025","2024-01-01 09:00","2024-01-01 09:00","WPF,MVVM,C#"
"UI: Implement Post-Login Redirection Logic","In the `LoginViewModel` or a central navigation service, update the logic that handles a successful login. Based on the result from `AuthenticationService`, it should either navigate to the main application window or to the `ForceChangePasswordView`.","Task","Backlog","High","frontend-dev@project.com","pm@project.com","",6.3,"EPIC-002,WI-012,UI,navigation","Sprint 2","User & Session Management","DicomApp","","If auth result is `Success`, navigate to MainWindow.","US-012","TASK-018,TASK-038,TASK-039","2024-01-01 09:00","2024-01-01 09:00","WPF,MVVM,C#"
"Automatic Session Lock on Inactivity","As a System User, I want the application to automatically lock itself after 15 minutes of inactivity so that sensitive patient information is protected if I walk away from my workstation.","Story","Backlog","Critical","pm@project.com","pm@project.com","",39,"security,session-lock,hipaa","Sprint 2","User & Session Management","DicomApp",,,"EPIC-002","US-005","2024-01-01 09:00","2024-01-01 09:00","WPF,C#"
"Create Lock Screen View and ViewModel","Develop the `LockScreenView.xaml` as a user control that can be overlaid on the main window. It will contain a password box and an 'Unlock' button. The `LockScreenViewModel` will handle the password input and the unlock command.","Task","Backlog","High","frontend-dev@project.com","pm@project.com","",8.2,"EPIC-002,WI-013,UI,session-lock","Sprint 2","User & Session Management","DicomApp","","`LockScreenView.xaml` and its ViewModel are created.","US-013","","2024-01-01 09:00","2024-01-01 09:00","WPF,MVVM,C#"
"Integrate Lock Screen Overlay with Inactivity Event","In the main application shell (e.g., `MainWindowViewModel`), subscribe to the `InactivityMonitorService.OnInactive` event. The event handler will make the `LockScreenView` visible, effectively locking the application. The application state must be preserved behind the overlay.","Task","Backlog","High","frontend-dev@project.com","pm@project.com","",7.2,"EPIC-002,WI-013,integration,session-lock","Sprint 2","User & Session Management","DicomApp","","The `OnInactive` event triggers the `LockScreenView` to become visible.","US-013","TASK-042,TASK-043","2024-01-01 09:00","2024-01-01 09:00","WPF,MVVM,C#"
"Unlock Session with Password","As a System User whose session is locked, I want to re-enter my password to unlock the application so that I can quickly and securely resume my work.","Story","Backlog","Critical","pm@project.com","pm@project.com","",22.3,"security,session-lock","Sprint 2","User & Session Management","DicomApp",,,"EPIC-002","US-013","2024-01-01 09:00","2024-01-01 09:00","WPF,C#"
"Backend: Implement Session Unlock Verification Logic","In the `AuthenticationService`, create a new method `VerifyUnlockPasswordAsync(string password)`. This method will get the current user from the `ICurrentUserContext`, retrieve their hash from the database, and use BCrypt to verify the provided password.","Task","Backlog","High","backend-dev@project.com","pm@project.com","",6,"EPIC-002,WI-013,backend,session-lock","Sprint 2","User & Session Management","DicomApp","","The method returns true for the correct password.","US-014","TASK-016,TASK-020","2024-01-01 09:00","2024-01-01 09:00","C#,BCrypt"
"UI: Implement Unlock Logic in LockScreenViewModel","Implement the `UnlockCommand` in the `LockScreenViewModel`. This command will call the `VerifyUnlockPasswordAsync` method. On success, it will trigger an event to hide the lock screen. On failure, it will display an error message and clear the password field. It will also track the number of failed attempts.","Task","Backlog","High","frontend-dev@project.com","pm@project.com","",8.3,"EPIC-002,WI-013,UI,session-lock","Sprint 2","User & Session Management","DicomApp","","The `UnlockCommand` calls the backend verification method.","US-014","TASK-043,TASK-045","2024-01-01 09:00","2024-01-01 09:00","WPF,MVVM,C#"
"Implement Forced Logout after 5 Failed Unlocks","In the `LockScreenViewModel`, after the failed attempt counter reaches 5, instead of just showing an error, trigger a global 'logout' event. The main application shell will handle this event by terminating the user session, hiding the main window, and showing the login window.","Task","Backlog","High","frontend-dev@project.com","pm@project.com","",6.3,"EPIC-002,WI-013,security,session-lock","Sprint 2","User & Session Management","DicomApp","","After the 5th consecutive failed unlock attempt, a logout is triggered.","US-014","TASK-046","2024-01-01 09:00","2024-01-01 09:00","WPF,MVVM,C#"
"Receive and Store DICOM Studies from Modalities","As a System, I want to function as a DICOM C-STORE SCP, automatically receiving studies from medical imaging modalities and reliably persisting them to storage so that data can be seamlessly imported from across the network.","Story","Backlog","Critical","pm@project.com","pm@project.com","",43.5,"dicom,scp,ingestion","Sprint 3","DICOM Core Functionality","DicomApp",,,"EPIC-003","US-003,US-017","2024-01-01 09:00","2024-01-01 09:00","fo-dicom,C#,RabbitMQ"
"Service: Implement DICOM DB Ingestion Consumer","Create a new RabbitMQ consumer hosted service that subscribes to the DICOM metadata queue. On receiving a message, it will perform an upsert operation for the Patient, Study, Series, and Image records in the database within a single transaction.","Task","Backlog","High","backend-dev@project.com","pm@project.com","",12,"EPIC-003,WI-015,consumer,ingestion","Sprint 3","DICOM Core Functionality","DicomApp","","The consumer is registered and starts with the Windows Service.","US-015","TASK-010,TASK-050","2024-01-01 09:00","2024-01-01 09:00","RabbitMQ,C#,Entity Framework Core"
"Service: Implement File Move Logic on Successful Ingestion","Extend the DICOM DB ingestion consumer. After the database transaction successfully commits, the consumer must move the DICOM file from its temporary location to its final, structured storage path (`[StoragePath]\\[PatientID]\\[StudyUID]\\[SeriesUID]`).","Task","Backlog","High","backend-dev@project.com","pm@project.com","",3.2,"EPIC-003,WI-015,ingestion,file-system","Sprint 3","DICOM Core Functionality","DicomApp","","The file is moved only after the database write is successful.","US-015","TASK-051","2024-01-01 09:00","2024-01-01 09:00","C#,.NET I/O"
"Query and Retrieve Studies from a Remote PACS","As a Technician or Admin, I want to query a remote PACS for studies and retrieve them to my local system so that I can view or work with prior imaging.","Story","Backlog","Critical","pm@project.com","pm@project.com","",46.5,"dicom,pacs,c-find,c-move","Sprint 3","DICOM Core Functionality","DicomApp",,,"EPIC-003","US-015","2024-01-01 09:00","2024-01-01 09:00","fo-dicom,WPF,C#"
"UI: Create PACS Query View and ViewModel","Develop the WPF view (`PacsQueryView`) and ViewModel for the PACS query and retrieve feature. The UI will have fields for search criteria (Patient ID, Study Date, Modality), a button to initiate the search, a grid to display results, and a button to trigger the C-MOVE.","Task","Backlog","High","frontend-dev@project.com","pm@project.com","",12,"EPIC-003,WI-016,UI,PACS","Sprint 3","DICOM Core Functionality","DicomApp","","The UI is created with all necessary controls.","US-016","TASK-053","2024-01-01 09:00","2024-01-01 09:00","WPF,MVVM,C#"
"UI: Implement Real-Time Feedback for C-MOVE","Enhance the `DicomScuService` and `PacsQueryViewModel` to provide real-time feedback on C-MOVE operations. This can be done using events or progress callbacks from the `fo-dicom` client to update the UI with the number of completed sub-operations and the final success/failure status.","Task","Backlog","High","frontend-dev@project.com","pm@project.com","",9.2,"EPIC-003,WI-016,UI,feedback","Sprint 3","DICOM Core Functionality","DicomApp","","The UI displays a progress indicator while a C-MOVE is active.","US-016","TASK-054","2024-01-01 09:00","2024-01-01 09:00","WPF,MVVM,C#,fo-dicom"
"Admin UI: PACS Configuration Management","Create a UI in the Administration area for managing remote PACS configurations (AE Title, IP, Port). This includes adding, editing, and deleting PACS entries. A 'Verify' button should perform a C-ECHO test against the selected PACS.","Task","Backlog","High","frontend-dev@project.com","pm@project.com","",11.2,"EPIC-003,WI-016,admin,configuration","Sprint 3","DICOM Core Functionality","DicomApp","","Admin can create, read, update, and delete PACS connection details.","US-016","TASK-053","2024-01-01 09:00","2024-01-01 09:00","WPF,MVVM,C#"
"View DICOM Images with High Performance","As a Technician or Admin, I want to open and view DICOM images in a high-performance, GPU-accelerated viewer so that I can conduct diagnostic reads efficiently, even with large multi-frame series.","Story","Backlog","Critical","pm@project.com","pm@project.com","",92.8,"dicom,viewer,performance,directx","Sprint 3","DICOM Core Functionality","DicomApp",,,"EPIC-003","","2024-01-01 09:00","2024-01-01 09:00","WPF,DirectX,Vortice.Windows"
"Spike: Prototype DirectX Rendering Pipeline with Vortice.Windows","Create a minimal proof-of-concept WPF application to validate the core rendering pipeline. This spike should: 1. Initialize a DirectX 11 device and context using Vortice.Windows. 2. Create a D3DImage for hosting DirectX content in WPF. 3. Load a single DICOM image's pixel data into a DirectX texture. 4. Render the texture to the D3DImage surface. The goal is to de-risk the technical complexity of this approach.","Task","Backlog","Critical","gpu-dev@project.com","pm@project.com","",16.7,"EPIC-003,WI-017,spike,viewer,DirectX","Sprint 3","DICOM Core Functionality","DicomApp","","A sample DICOM image is successfully rendered in a WPF window using DirectX.","US-017","","2024-01-01 09:00","2024-01-01 09:00","WPF,DirectX,Vortice.Windows,C#"
"Viewer: Implement Core DicomViewerControl","Create the main `DicomViewerControl` as a WPF UserControl. Based on the spike, set up the DirectX device, swap chain, and D3DImage interop. The control will expose a dependency property to accept a DICOM image object, which will trigger the rendering pipeline.","Task","Backlog","High","gpu-dev@project.com","pm@project.com","",14.2,"EPIC-003,WI-017,viewer,DirectX","Sprint 3","DICOM Core Functionality","DicomApp","","The `DicomViewerControl` is created.","US-017","TASK-057","2024-01-01 09:00","2024-01-01 09:00","WPF,DirectX,Vortice.Windows,C#"
"Viewer: Implement Zoom and Pan Tools","Implement the logic for zooming and panning the image. This will involve updating the transformation matrix (view matrix) that is passed to the vertex shader. Handle mouse wheel for zooming and mouse drag for panning.","Task","Backlog","High","gpu-dev@project.com","pm@project.com","",10.2,"EPIC-003,WI-017,viewer,tools","Sprint 3","DICOM Core Functionality","DicomApp","","Scrolling the mouse wheel zooms the image in and out, centered on the cursor.","US-017","TASK-058","2024-01-01 09:00","2024-01-01 09:00","DirectX,WPF,Linear Algebra"
"Import Local DICOM Studies with Duplicate Handling","As a Technician or Admin, I want to import DICOM studies from my computer or a network share by dragging and dropping them into the application so that I can easily work with data from external media like CDs.","Story","Backlog","Critical","pm@project.com","pm@project.com","",38.8,"dicom,import,usability","Sprint 3","DICOM Core Functionality","DicomApp",,,"EPIC-003","US-015","2024-01-01 09:00","2024-01-01 09:00","WPF,fo-dicom"
"Implement Drag-and-Drop Handler on Main Window","Implement the necessary event handlers (`AllowDrop`, `DragEnter`, `Drop`) on the application's main window to accept file and folder drops from Windows Explorer. The handler should collect the list of file paths.","Task","Backlog","High","frontend-dev@project.com","pm@project.com","",6,"EPIC-003,WI-018,import,UI","Sprint 3","DICOM Core Functionality","DicomApp","","The main window's drop target is correctly configured.","US-019","","2024-01-01 09:00","2024-01-01 09:00","WPF,C#"
"Implement Import Service for File Validation and Grouping","Create an `ImportService` that takes a list of file paths. It will iterate through them, use `fo-dicom` to validate that each is a valid DICOM file, parse their Study/Series UIDs, and group them by study. It will produce a report of any invalid files.","Task","Backlog","High","backend-dev@project.com","pm@project.com","",9.2,"EPIC-003,WI-018,import,validation","Sprint 3","DICOM Core Functionality","DicomApp","","The service correctly identifies valid and invalid DICOM files.","US-019","TASK-065","2024-01-01 09:00","2024-01-01 09:00","C#,fo-dicom"
"Implement Duplicate Study Detection and Resolution UI","For each study grouped by the `ImportService`, check against the database if the Study Instance UID already exists. If it does, display a modal dialog to the user with the three choices: 'Overwrite', 'Discard', or 'Save as New'.","Task","Backlog","High","frontend-dev@project.com","pm@project.com","",12,"EPIC-003,WI-018,import,duplicate-handling","Sprint 3","DICOM Core Functionality","DicomApp","","The service correctly queries the database to check for duplicate UIDs.","US-019","TASK-066","2024-01-01 09:00","2024-01-01 09:00","WPF,MVVM,C#"
"Queue Approved Imports for Asynchronous Processing","After validation and duplicate resolution, for each study approved for import, copy its files to a temporary staging location and publish a message to the same RabbitMQ ingestion queue used by the C-STORE SCP. This reuses the existing, reliable ingestion pipeline.","Task","Backlog","High","backend-dev@project.com","pm@project.com","",7.2,"EPIC-003,WI-018,import,decoupling","Sprint 3","DICOM Core Functionality","DicomApp","","The `ImportService` uses the `IMessageProducer` to queue a message for each new study.","US-019","TASK-009,TASK-051,TASK-067","2024-01-01 09:00","2024-01-01 09:00","C#,RabbitMQ"
"Export Images to Common Formats","As a Technician or Admin, I want to export selected DICOM images or series to common formats like JPEG or PNG so that I can use them in presentations or other documents.","Story","Backlog","High","pm@project.com","pm@project.com","",12.2,"dicom,export","Sprint 3","DICOM Core Functionality","DicomApp",,,"EPIC-003","US-017","2024-01-01 09:00","2024-01-01 09:00","fo-dicom,C#"
"Implement DICOM to JPEG/PNG Export Service","Create an `ExportService` that takes a DICOM image object, an output format, and resolution settings. Use `fo-dicom`'s image rendering capabilities to convert the pixel data into a standard image format (e.g., via `System.Drawing` or `ImageSharp`) and save it to a file.","Task","Backlog","High","backend-dev@project.com","pm@project.com","",8.3,"EPIC-003,WI-018,export","Sprint 3","DICOM Core Functionality","DicomApp","","The service can successfully convert a DICOM image to a JPEG file.","US-020","","2024-01-01 09:00","2024-01-01 09:00","C#,fo-dicom"
"Create Export Options UI","Create a UI (e.g., a modal dialog) that allows the user to select the export format (JPEG/PNG), specify the output resolution, and choose a destination folder. This UI will then call the `ExportService` to perform the operation.","Task","Backlog","High","frontend-dev@project.com","pm@project.com","",4.2,"EPIC-003,WI-018,export,UI","Sprint 3","DICOM Core Functionality","DicomApp","","The UI provides options for format and resolution.","US-020","TASK-069","2024-01-01 09:00","2024-01-01 09:00","WPF,MVVM,C#"
"Create and Save Non-Destructive Annotations","As a Technician or Admin, I want to create and save non-destructive annotations and measurements on images so that I can mark findings and communicate them to others without altering the original image data.","Story","Backlog","Critical","pm@project.com","pm@project.com","",51.2,"dicom,annotations,gsps","Sprint 3","DICOM Core Functionality","DicomApp",,,"EPIC-003","US-018","2024-01-01 09:00","2024-01-01 09:00","fo-dicom,WPF,C#"
"Spike: Research GSPS Object Creation with fo-dicom","Investigate the `fo-dicom` library's capabilities for creating DICOM Grayscale Softcopy Presentation State (GSPS) objects. The goal is to build a minimal proof-of-concept that creates a valid GSPS file containing a simple annotation (e.g., a single line or text box) and verify its validity with a third-party DICOM viewer.","Task","Backlog","Critical","backend-dev@project.com","pm@project.com","",12.7,"EPIC-003,WI-035,spike,annotations,GSPS","Sprint 3","DICOM Core Functionality","DicomApp","","A PoC successfully creates a DICOM file with a SOP Class UID for GSPS.","US-021","","2024-01-01 09:00","2024-01-01 09:00","fo-dicom,C#,DICOM Standard"
"Secure Data At-Rest and In-Transit","As a Security Officer, I want to ensure all sensitive data is securely stored and transmitted, including encrypted database columns for PHI, encrypted database connections, and secure storage for application secrets, so that the system is compliant with HIPAA security rules.","Story","Backlog","Critical","pm@project.com","pm@project.com","",48.7,"security,encryption,hipaa","Sprint 3","Security & Compliance","DicomApp",,,"EPIC-004","US-017,US-005","2024-01-01 09:00","2024-01-01 09:00","PostgreSQL,pgcrypto,EF Core"
"Spike: Prototype pgcrypto Integration with EF Core","Research and prototype the best method for integrating PostgreSQL's `pgcrypto` functions (`pgp_sym_encrypt`, `pgp_sym_decrypt`) with EF Core. Compare using custom `IValueConverter`s vs. computed columns with functions in the migration. The goal is to find a secure and maintainable approach.","Task","Backlog","Critical","security-dev@project.com","pm@project.com","",12,"EPIC-004,WI-023,spike,encryption,security","Sprint 3","Security & Compliance","DicomApp","","A PoC successfully saves an entity with an encrypted string property.","US-025","TASK-050","2024-01-01 09:00","2024-01-01 09:00","PostgreSQL,pgcrypto,Entity Framework Core,C#"
"Implement DB Encryption for all PHI Columns","Based on the spike's outcome, apply the chosen encryption pattern to all columns containing PHI across all entities (e.g., `Patient.PatientName`, `User.Username`). This will likely involve creating a reusable `EncryptedString` value converter or attribute and applying it to the model.","Task","Backlog","High","security-dev@project.com","pm@project.com","",14.2,"EPIC-004,WI-023,encryption,security","Sprint 3","Security & Compliance","DicomApp","","All identified PHI properties in the EF Core model are configured for encryption.","US-025","TASK-085","2024-01-01 09:00","2024-01-01 09:00","Entity Framework Core,C#"
"Create Migration to Enable pgcrypto and Encrypt Data","Create a new EF Core migration. This migration must: 1. Add a `CREATE EXTENSION IF NOT EXISTS ""pgcrypto"";` statement. 2. Alter all relevant PHI columns from their current type (e.g., `text`) to `bytea`. 3. Include an SQL statement to encrypt the existing data in those columns during the migration.","Task","Backlog","High","db-dev@project.com","pm@project.com","",6.3,"EPIC-004,WI-023,database,migration","Sprint 3","Security & Compliance","DicomApp","","The migration is generated.","US-025","TASK-086","2024-01-01 09:00","2024-01-01 09:00","Entity Framework Core,SQL,PostgreSQL"
"Edit DICOM Metadata Securely","As an Administrator, I want to edit DICOM metadata for a study without altering the original files so that I can correct data entry errors while maintaining a clear, auditable history of the original data.","Story","Backlog","Critical","pm@project.com","pm@project.com","",43.5,"dicom,metadata,audit,security","Sprint 3","Security & Compliance","DicomApp",,,"EPIC-004","US-022,US-017","2024-01-01 09:00","2024-01-01 09:00","fo-dicom,C#,WPF"
"Implement 'Working Copy' Service","Create a service responsible for managing working copies. It will have methods to: 1. Create a working copy of a study (duplicate files and create a new `Study` record linked to the original). 2. Get the path to a working copy file. 3. Detect if a working copy exists for a given study. 4. Discard a working copy.","Task","Backlog","High","backend-dev@project.com","pm@project.com","",12,"EPIC-004,WI-021,non-destructive,backend","Sprint 3","Security & Compliance","DicomApp","","The `CreateWorkingCopy` method successfully duplicates files and creates the linked DB record.","US-023","TASK-050","2024-01-01 09:00","2024-01-01 09:00","C#,Entity Framework Core,.NET I/O"
"Implement Metadata Save Logic with Auditing","Implement the 'Save' command in the `MetadataEditorViewModel`. This will use `fo-dicom` to update the tags in the working copy files. For each changed tag, it must call the `AuditService` to log the change, including the tag, old value, and new value.","Task","Backlog","High","backend-dev@project.com","pm@project.com","",12,"EPIC-004,WI-021,auditing,metadata","Sprint 3","Security & Compliance","DicomApp","","Saving successfully updates the DICOM files in the working copy folder.","US-023","TASK-076,TASK-080","2024-01-01 09:00","2024-01-01 09:00","C#,fo-dicom"
"Create Anonymized Copies of DICOM Studies","As a Researcher or Administrator, I want to create a de-identified copy of a DICOM study so that I can use the data for research or training purposes without exposing Protected Health Information.","Story","Backlog","High","pm@project.com","pm@project.com","",39.7,"dicom,anonymization,hipaa","Sprint 3","Security & Compliance","DicomApp",,,"EPIC-004","US-017","2024-01-01 09:00","2024-01-01 09:00","fo-dicom,C#"
"Backend: Implement DICOM Metadata Anonymization Service","Create an `AnonymizationService` that takes a study and an anonymization profile. The service will create a new set of DICOM files, use `fo-dicom` to iterate through the tags, and remove or replace PHI tags according to the profile rules (e.g., HIPAA Safe Harbor). It will also handle pseudonymization (hashing UIDs).","Task","Backlog","High","backend-dev@project.com","pm@project.com","",12,"EPIC-004,WI-025,anonymization,HIPAA","Sprint 3","Security & Compliance","DicomApp","","The service creates a new copy of the study files.","US-026","","2024-01-01 09:00","2024-01-01 09:00","C#,fo-dicom,DICOM Standard"
"Backend: Implement Pixel Data Anonymization (Blackout)","Extend the `AnonymizationService` to handle pixel-level anonymization. This method will take a DICOM image and a list of geometric regions (rectangles, polygons). It will create a new copy of the image and use image processing to 'burn in' black boxes over the specified regions in the pixel data.","Task","Backlog","High","backend-dev@project.com","pm@project.com","",9.2,"EPIC-004,WI-025,anonymization,pixel-data","Sprint 3","Security & Compliance","DicomApp","","The method creates a new DICOM file with modified pixel data.","US-026","TASK-089","2024-01-01 09:00","2024-01-01 09:00","C#,fo-dicom,Image Processing"
"Ensure all async/await patterns are used for long-running UI operations","Review and refactor all UI-initiated, long-running operations (file I/O, network requests) to use the `async/await` pattern, ensuring the UI thread is never blocked.","Task","Backlog","High","frontend-dev@project.com","pm@project.com","",12,"EPIC-001,WI-040,performance,ui,async","Sprint 3","Core Architecture & Foundational Setup","DicomApp","","No long-running operations block the UI thread.","","TASK-003","2024-01-01 09:00","2024-01-01 09:00","C#,async/await,WPF"
"Ensure application is fully accessible via keyboard","Implement and verify that all UI controls are navigable and interactive using standard keyboard commands (Tab, Shift+Tab, Enter, Arrow keys).","Task","Backlog","Medium","frontend-dev@project.com","pm@project.com","",12,"EPIC-001,WI-042,accessibility,ui,wcag","Sprint 3","Core Architecture & Foundational Setup","DicomApp","","Every interactive UI element can be reached and activated using only the keyboard.","","TASK-003","2024-01-01 09:00","2024-01-01 09:00","WPF,Accessibility"
"Manipulate Image Views with Standard Tools","As a Technician or Admin, I want to use a standard set of image manipulation tools (Zoom, Pan, Window/Level, Rotate) so that I can adjust the image presentation to optimize my review.","Story","Backlog","Critical","pm@project.com","pm@project.com","",16.5,"dicom,viewer,tools","Sprint 4","DICOM Core Functionality","DicomApp",,,"EPIC-003","US-017","2024-01-01 09:00","2024-01-01 09:00","WPF,DirectX"
"Viewer: Implement Rotate and Flip Tools","Implement the logic for rotation (90-degree increments) and flipping (horizontal/vertical). This will be handled by updating the transformation matrix passed to the vertex shader. Create UI buttons to trigger these actions.","Task","Backlog","High","gpu-dev@project.com","pm@project.com","",6,"EPIC-003,WI-017,viewer,tools","Sprint 4","DICOM Core Functionality","DicomApp","","Clicking the 'Rotate Right' button rotates the image 90 degrees clockwise.","US-018","TASK-060","2024-01-01 09:00","2024-01-01 09:00","DirectX,WPF"
"Viewer: Implement WW/WL Presets","Create a mechanism to define and apply common WW/WL presets (e.g., Lung, Bone, Brain). This will involve creating a list of preset objects (Name, Window, Level) and UI elements (e.g., a dropdown menu) to select them. Selecting a preset updates the values sent to the pixel shader.","Task","Backlog","High","frontend-dev@project.com","pm@project.com","",4.2,"EPIC-003,WI-017,viewer,tools,presets","Sprint 4","DICOM Core Functionality","DicomApp","","A dropdown or set of buttons for presets is available in the UI.","US-018","TASK-059","2024-01-01 09:00","2024-01-01 09:00","WPF,MVVM,C#"
"Viewer: Implement Window/Level (WW/WL) and Color Logic","Implement the pixel shader for handling WW/WL adjustments. Pass the window center and width values as constants to the shader. Add logic to handle different DICOM photometric interpretations (MONOCHROME1, MONOCHROME2, RGB). Implement interactive WW/WL via mouse input.","Task","Backlog","High","gpu-dev@project.com","pm@project.com","",14.2,"EPIC-003,WI-017,viewer,rendering","Sprint 4","DICOM Core Functionality","DicomApp","","The viewer correctly applies the default WW/WL from the DICOM tags.","US-017","TASK-058","2024-01-01 09:00","2024-01-01 09:00","DirectX,HLSL,WPF"
"Viewer: Implement Multi-Frame Scrolling and Progressive Loading","Enhance the viewer to handle multi-frame DICOM series. Implement logic to scroll through frames using the mouse wheel or a slider. To maintain performance, implement a progressive loading strategy: initially load and display downsampled previews for all frames, then load full-resolution data for the visible frame and adjacent frames in a background thread.","Task","Backlog","High","gpu-dev@project.com","pm@project.com","",16.7,"EPIC-003,WI-017,viewer,performance","Sprint 4","DICOM Core Functionality","DicomApp","","User can scroll through all frames of a multi-frame series.","US-017","TASK-058","2024-01-01 09:00","2024-01-01 09:00","C#,async/await,WPF,fo-dicom"
"Viewer: Implement Side-by-Side Comparison and Thumbnail Grid","Create a layout container that can host two `DicomViewerControl` instances for side-by-side comparison. Implement an option to synchronize pan, zoom, and scroll actions between the two viewers. Also, create a thumbnail grid panel that displays all images in the current series for quick navigation.","Task","Backlog","High","frontend-dev@project.com","pm@project.com","",12,"EPIC-003,WI-017,UI,layout","Sprint 4","DICOM Core Functionality","DicomApp","","A 'comparison mode' can be activated to show two viewers.","US-017","TASK-058","2024-01-01 09:00","2024-01-01 09:00","WPF,MVVM,C#"
"UI: Implement Annotation Drawing Tools on Viewer Canvas","Create an overlay canvas on top of the `DicomViewerControl`. Implement tools for drawing shapes (lines, arrows, rectangles) and placing text. This will involve handling mouse events to draw, move, and resize the annotation visuals.","Task","Backlog","High","frontend-dev@project.com","pm@project.com","",14.2,"EPIC-003,WI-035,UI,annotations","Sprint 4","DICOM Core Functionality","DicomApp","","User can select an 'Arrow' tool and draw an arrow on the image.","US-021","TASK-058","2024-01-01 09:00","2024-01-01 09:00","WPF,MVVM,C#"
"Backend: Implement GSPS Creation Service","Create a `GspsService` that takes a collection of annotation data objects (from the ViewModel) and the original DICOM series. Based on the findings of the spike, use `fo-dicom` to construct a valid DICOM GSPS object, populating it with the appropriate graphic and text objects. Save the result as a new DICOM file.","Task","Backlog","High","backend-dev@project.com","pm@project.com","",16.7,"EPIC-003,WI-035,backend,GSPS","Sprint 4","DICOM Core Functionality","DicomApp","","The service can convert a list of annotation objects into a `DicomFile`.","US-021","TASK-071,TASK-072","2024-01-01 09:00","2024-01-01 09:00","fo-dicom,C#,DICOM Standard"
"Implement GSPS Loading and Display Logic","When a study is loaded, check for any associated GSPS files in the database. If found, parse the GSPS file using `fo-dicom` to extract the annotation data. Convert this data back into the ViewModel's annotation objects so they can be rendered on the annotation canvas.","Task","Backlog","High","backend-dev@project.com","pm@project.com","",8.3,"EPIC-003,WI-035,backend,GSPS","Sprint 4","DICOM Core Functionality","DicomApp","","The application correctly identifies and loads associated GSPS files for a series.","US-021","TASK-073","2024-01-01 09:00","2024-01-01 09:00","fo-dicom,C#"
"Create Metadata Editor UI and ViewModel","Develop a UI (`MetadataEditorView`) for viewing and editing DICOM tags. The ViewModel will load the tags from the working copy files, present them to the user (grouped logically), and track any changes. Only tags configured as 'editable' by an admin should be enabled.","Task","Backlog","High","frontend-dev@project.com","pm@project.com","",13.5,"EPIC-004,WI-021,UI,metadata","Sprint 4","Security & Compliance","DicomApp","","The UI displays DICOM tags from a study.","US-023","TASK-079","2024-01-01 09:00","2024-01-01 09:00","WPF,MVVM,C#"
"Implement Unsaved Working Copy Detection and Prompt","In the study loading workflow, before displaying a study, call `WorkingCopyService.DetectWorkingCopy`. If an unsaved copy exists, display a modal dialog to the user, prompting them to 'Continue with unsaved changes' or 'Discard changes'.","Task","Backlog","High","frontend-dev@project.com","pm@project.com","",6,"EPIC-004,WI-021,workflow,usability","Sprint 4","Security & Compliance","DicomApp","","Opening a study with a persisted working copy triggers the prompt.","US-023","TASK-079","2024-01-01 09:00","2024-01-01 09:00","WPF,MVVM,C#"
"UI: Create Anonymization View and ViewModel","Create a UI (`AnonymizationView`) that allows the user to select a study and configure the anonymization options. This includes selecting a profile, manually choosing tags, and (for pixel anonymization) drawing blackout regions on a preview image.","Task","Backlog","High","frontend-dev@project.com","pm@project.com","",12,"EPIC-004,WI-025,UI,anonymization","Sprint 4","Security & Compliance","DicomApp","","The UI is created and allows selection of a study.","US-026","TASK-089,TASK-090","2024-01-01 09:00","2024-01-01 09:00","WPF,MVVM,C#"
"Configure Print Layouts and Presets","As a Technician or Admin, I want to configure the page layout with various templates and options in a print preview screen so that I can control the final appearance of the printed output.","Story","Backlog","Critical","pm@project.com","pm@project.com","",49.2,"printing,ui,layout","Sprint 4","Printing & Reporting","DicomApp",,,"EPIC-005","US-017","2024-01-01 09:00","2024-01-01 09:00","WPF,MVVM"
"UI: Create Print Preview View and ViewModel Shell","Create the main `PrintPreviewView` and ViewModel. This will be a complex UI. The initial shell will set up the main layout areas: a toolbar for settings, a central canvas for the page preview, and a sidebar for image thumbnails.","Task","Backlog","High","frontend-dev@project.com","pm@project.com","",10.2,"EPIC-005,WI-029,UI,printing","Sprint 4","Printing & Reporting","DicomApp","","The view and ViewModel are created.","US-029","TASK-017","2024-01-01 09:00","2024-01-01 09:00","WPF,MVVM,C#"
"Implement Print Layout Templates and Page Settings","Implement the logic for predefined page layouts ('2x2 on A4', etc.). The ViewModel will manage the layout grid structure. Add UI controls (dropdowns, sliders) for configuring page margins, orientation, and image scaling, and bind them to properties in the ViewModel that affect the rendering of the preview.","Task","Backlog","High","frontend-dev@project.com","pm@project.com","",14.2,"EPIC-005,WI-029,UI,layout","Sprint 4","Printing & Reporting","DicomApp","","User can select from a list of predefined layouts, and the preview canvas updates accordingly.","US-029","TASK-099","2024-01-01 09:00","2024-01-01 09:00","WPF,MVVM,C#"
"Implement Drag-and-Drop Image Rearrangement","Using WPF's drag-and-drop framework, implement the ability for users to drag images (either from the thumbnail list or from within the layout grid itself) and drop them into different cells of the layout grid to rearrange them.","Task","Backlog","High","frontend-dev@project.com","pm@project.com","",16.7,"EPIC-005,WI-029,UI,drag-and-drop","Sprint 4","Printing & Reporting","DicomApp","","User can drag an image from one grid cell to another, and they swap positions.","US-029","TASK-100","2024-01-01 09:00","2024-01-01 09:00","WPF,C#"
"Add Custom Branding and Text Overlays to Prints","As a Technician or Admin, I want to add branding (logos) and custom text overlays with dynamic information to my printouts so that the output is professional and contains relevant metadata.","Story","Backlog","High","pm@project.com","pm@project.com","",24.3,"printing,ui,branding","Sprint 4","Printing & Reporting","DicomApp",,,"EPIC-005","US-029","2024-01-01 09:00","2024-01-01 09:00","WPF,MVVM"
"UI: Implement Branding and Overlay Configuration Controls","In the `PrintPreviewView`, add a section to the toolbar for branding and overlays. This will include a button to upload a logo image, and controls to add/remove/edit text overlays. The properties of these elements (content, position, font, etc.) will be bound to objects in the ViewModel.","Task","Backlog","High","frontend-dev@project.com","pm@project.com","",12,"EPIC-005,WI-030,UI,branding","Sprint 4","Printing & Reporting","DicomApp","","User can select a local image file to be used as a logo.","US-030","TASK-099","2024-01-01 09:00","2024-01-01 09:00","WPF,MVVM,C#"
"Backend: Implement Dynamic Variable Replacement for Overlays","In the background service's print processing logic, before rendering the document, implement a step that parses the text overlays. It should find any dynamic variables (e.g., `[PatientID]`) and replace them with the actual metadata values from the relevant DICOM study.","Task","Backlog","High","backend-dev@project.com","pm@project.com","",8.3,"EPIC-005,WI-030,backend,templating","Sprint 4","Printing & Reporting","DicomApp","","The logic correctly identifies variables like `[PatientID]`, `[PatientName]`, `[StudyDate]`.","US-030","TASK-093","2024-01-01 09:00","2024-01-01 09:00","C#,String Manipulation"
"View and Export System Audit Trail","As an Administrator, I want to view a comprehensive audit trail of all significant system events so that I can investigate security incidents and ensure compliance.","Story","Backlog","Critical","pm@project.com","pm@project.com","",36.8,"security,auditing,admin","Sprint 4","Security & Compliance","DicomApp",,,"EPIC-004","US-001","2024-01-01 09:00","2024-01-01 09:00","WPF,C#,EF Core"
"UI: Create Audit Trail Viewer UI and ViewModel","Create an admin-only view (`AuditTrailView`) to display audit logs in a data grid. The ViewModel will fetch logs from a service, handle filtering logic based on user input (user and date range), and manage pagination if necessary.","Task","Backlog","High","frontend-dev@project.com","pm@project.com","",12,"EPIC-004,WI-020,UI,auditing","Sprint 4","Security & Compliance","DicomApp","","The view is created and only accessible to administrators.","US-022","TASK-076","2024-01-01 09:00","2024-01-01 09:00","WPF,MVVM,C#"
"Implement 'Export to CSV' Functionality","In the `AuditTrailViewModel`, add a command to export the currently filtered list of audit logs to a CSV file. This will involve using a CSV library (like CsvHelper) to serialize the log data and prompting the user for a save location.","Task","Backlog","High","frontend-dev@project.com","pm@project.com","",7.2,"EPIC-004,WI-020,export,auditing","Sprint 4","Security & Compliance","DicomApp","","An 'Export to CSV' button is present in the view.","US-022","TASK-077","2024-01-01 09:00","2024-01-01 09:00","C#,WPF,MVVM"
"Implement UI themes and high-contrast mode","Implement a toggle for Light and Dark themes using the Material Design in XAML Toolkit. Add a dedicated high-contrast mode compliant with WCAG 2.1 AA.","Task","Backlog","Medium","frontend-dev@project.com","pm@project.com","",9.2,"EPIC-001,WI-042,ui,theme,accessibility","Sprint 4","Core Architecture & Foundational Setup","DicomApp","","User can switch between Light and Dark themes.","","TASK-003","2024-01-01 09:00","2024-01-01 09:00","WPF,XAML,Material Design"
"Add descriptive tooltips to all interactive controls","Ensure all interactive UI controls (buttons, input fields, etc.) display a descriptive tooltip on mouse hover to aid usability and accessibility.","Task","Backlog","Low","frontend-dev@project.com","pm@project.com","",8.3,"EPIC-001,WI-042,ui,accessibility,usability","Sprint 4","Core Architecture & Foundational Setup","DicomApp","","Tooltips are present on at least 95% of interactive controls.","","TASK-003","2024-01-01 09:00","2024-01-01 09:00","WPF,XAML"
"Implement consistent progress indicators and notifications","Implement a consistent pattern for user feedback: use progress indicators for long-running synchronous operations and non-blocking toast notifications for asynchronous background tasks.","Task","Backlog","Medium","frontend-dev@project.com","pm@project.com","",12,"EPIC-001,WI-042,ui,feedback,usability","Sprint 4","Core Architecture & Foundational Setup","DicomApp","","File import/export shows a progress bar.","","TASK-003","2024-01-01 09:00","2024-01-01 09:00","WPF,MVVM"
"Print DICOM Images Asynchronously","As a Technician or Admin, I want to submit a print job and have it processed in the background so that the application UI remains responsive and I can continue with other tasks while the printing occurs.","Story","Backlog","Critical","pm@project.com","pm@project.com","",34.3,"printing,async,performance","Sprint 5","Printing & Reporting","DicomApp",,,"EPIC-005","US-003,US-004","2024-01-01 09:00","2024-01-01 09:00","RabbitMQ,C#"
"Implement Print Submission Service","In the client, create a `PrintSubmissionService`. This service will first use the `IServiceStatusClient` (from WI-005) to check if the background service is available. If it is, the service will serialize a print job DTO (containing layout, images, settings) and publish it to a dedicated RabbitMQ print queue.","Task","Backlog","High","backend-dev@project.com","pm@project.com","",9.2,"EPIC-005,WI-026,printing,IPC","Sprint 5","Printing & Reporting","DicomApp","","The service correctly checks the status via Named Pipe before proceeding.","US-027","TASK-009,TASK-014","2024-01-01 09:00","2024-01-01 09:00","C#,RabbitMQ,Named Pipes"
"Implement Background Print Job Consumer Service","In the Windows Service, create a new `PrintJobConsumer` hosted service that subscribes to the `print_jobs` queue. This service will be responsible for deserializing the print job message and orchestrating the print document generation and spooling.","Task","Backlog","High","backend-dev@project.com","pm@project.com","",8.2,"EPIC-005,WI-027,printing,consumer","Sprint 5","Printing & Reporting","DicomApp","","The consumer starts with the service and subscribes to the queue.","US-027","TASK-010","2024-01-01 09:00","2024-01-01 09:00","C#,RabbitMQ"
"Implement Windows Print API Spooling Logic","Create a service that interacts with the standard Windows Print API (e.g., via `System.Drawing.Printing` or P/Invoke for more control). This service will take a generated print document object, select the specified printer, and spool the job to the Windows Print Spooler. It must handle common printer errors like 'offline'.","Task","Backlog","High","backend-dev@project.com","pm@project.com","",12,"EPIC-005,WI-027,printing,integration","Sprint 5","Printing & Reporting","DicomApp","","The service can enumerate all printers available to the OS.","US-027","TASK-093","2024-01-01 09:00","2024-01-01 09:00","C#,Windows Print API"
"View and Manage the Print Queue","As a Technician or Admin, I want to view a print queue that shows the status of all submitted jobs so that I can track my prints and manage the queue.","Story","Backlog","High","pm@project.com","pm@project.com","",39.8,"printing,queue,ui","Sprint 5","Printing & Reporting","DicomApp",,,"EPIC-005","US-027","2024-01-01 09:00","2024-01-01 09:00","WPF,C#,EF Core"
"Integrate Print Job State Management with Database","Modify the print workflow: 1. The `PrintSubmissionService` will first create a `PrintJob` record in the DB with 'Queued' status. 2. The `PrintJobConsumer` will update this record's status to 'Processing', 'Completed', or 'Failed' as it works through the job.","Task","Backlog","High","backend-dev@project.com","pm@project.com","",12,"EPIC-005,WI-028,backend,state-management","Sprint 5","Printing & Reporting","DicomApp","","Submitting a print job creates a record in the `PrintJobs` table.","US-028","TASK-092,TASK-093,TASK-095","2024-01-01 09:00","2024-01-01 09:00","C#,Entity Framework Core"
"UI: Create Print Queue View and ViewModel","Create the `PrintQueueView` and its ViewModel. The ViewModel will poll the database (or use a notification system) to get the list of print jobs and display them in a grid. It will automatically refresh to show status updates.","Task","Backlog","High","frontend-dev@project.com","pm@project.com","",10.2,"EPIC-005,WI-028,UI,printing","Sprint 5","Printing & Reporting","DicomApp","","The view displays a list of print jobs with their statuses.","US-028","TASK-096","2024-01-01 09:00","2024-01-01 09:00","WPF,MVVM,C#"
"Implement Print Job Management Logic (Cancel, Retry, Re-prioritize)","Implement the logic for the management actions in the `PrintQueueViewModel`. 'Cancel' will update the job's status in the DB. The consumer must check for a 'Cancelled' status before processing. 'Retry' will resubmit the job payload to RabbitMQ. 'Re-prioritize' will change the job's priority field in the DB (consumer logic needs to respect this).","Task","Backlog","High","frontend-dev@project.com","pm@project.com","",12,"EPIC-005,WI-028,workflow,management","Sprint 5","Printing & Reporting","DicomApp","","A user can cancel their own 'Queued' job.","US-028","TASK-097","2024-01-01 09:00","2024-01-01 09:00","WPF,MVVM,C#"
"Apply Non-Destructive De-identification Masks to Prints","As a Technician or Admin, I want to apply blackout masks to printed images in a non-destructive way so that I can de-identify PHI for specific use cases without altering the original DICOM files.","Story","Backlog","High","pm@project.com","pm@project.com","",39.8,"printing,de-identification,hipaa","Sprint 5","Printing & Reporting","DicomApp",,,"EPIC-005","US-029,US-009","2024-01-01 09:00","2024-01-01 09:00","WPF,C#"
"UI: Implement De-identification Mask Drawing Tools","In the `PrintPreviewView`, add tools that allow the user to draw blackout regions (rectangles, polygons) directly onto the preview images. These drawn shapes will be stored as data objects associated with the image in the print layout.","Task","Backlog","High","frontend-dev@project.com","pm@project.com","",12,"EPIC-005,WI-031,UI,de-identification","Sprint 5","Printing & Reporting","DicomApp","","A 'Draw Rectangle' tool is available.","US-031","TASK-099","2024-01-01 09:00","2024-01-01 09:00","WPF,MVVM,C#"
"UI: Create Overlay Template Management UI for Admins","Create a new admin-only view (`OverlayTemplateManagerView`) where an administrator can create, name, save, edit, and delete de-identification overlay templates. This involves drawing shapes on a sample image and saving the geometric data to the database.","Task","Backlog","High","frontend-dev@project.com","pm@project.com","",16.7,"EPIC-005,WI-031,UI,admin,templates","Sprint 5","Printing & Reporting","DicomApp","","The view is accessible only to admins.","US-031","TASK-104","2024-01-01 09:00","2024-01-01 09:00","WPF,MVVM,C#,EF Core"
"Backend: Apply Saved De-ID Masks During Print Generation","In the background print job consumer, if the job includes de-identification masks, apply them to the images before sending the final document to the printer. This involves rendering the black shapes on top of the DICOM images during document composition.","Task","Backlog","High","backend-dev@project.com","pm@project.com","",9.2,"EPIC-005,WI-031,backend,printing","Sprint 5","Printing & Reporting","DicomApp","","Mask data from the print job is correctly parsed.","US-031","TASK-093,TASK-105","2024-01-01 09:00","2024-01-01 09:00","C#,Image Processing"
"Export Print Layout as a Secure PDF","As a Technician or Admin, I want to export the final print layout as a password-protected, standards-compliant PDF file so that I have a portable digital version of the output.","Story","Backlog","High","pm@project.com","pm@project.com","",39.8,"pdf,export,security","Sprint 5","Printing & Reporting","DicomApp",,,"EPIC-005","US-029,US-003","2024-01-01 09:00","2024-01-01 09:00","QuestPDF,C#,RabbitMQ"
"Implement PDF Generation Service using QuestPDF","In the background service, create a `PdfGenerationService` that uses the QuestPDF library. This service will take a print job object and generate a PDF document that matches the layout, images, branding, and overlays. It must be configured to produce PDF/A-3 compliant output.","Task","Backlog","High","backend-dev@project.com","pm@project.com","",12,"EPIC-005,WI-032,pdf,QuestPDF,backend","Sprint 5","Printing & Reporting","DicomApp","","The service can generate a multi-page PDF from a print job DTO.","US-032","","2024-01-01 09:00","2024-01-01 09:00","QuestPDF,C#"
"Implement PDF Encryption and Asynchronous Export","Extend the PDF generation process to support AES-256 password protection. Create a new RabbitMQ consumer for PDF export jobs that calls the `PdfGenerationService` and saves the resulting file to the user-specified path, sending a UI notification on completion/failure.","Task","Backlog","High","backend-dev@project.com","pm@project.com","",9.2,"EPIC-005,WI-032,pdf,encryption,async","Sprint 5","Printing & Reporting","DicomApp","","The service can generate a password-protected PDF.","US-032","TASK-107,TASK-010","2024-01-01 09:00","2024-01-01 09:00","QuestPDF,C#,RabbitMQ"
"UI: Implement PDF Export Options and Submission","In the `PrintPreviewView`, add an 'Export to PDF' button. This will open a dialog for the user to set a password (optional) and choose a save location. On confirmation, it will publish a `GeneratePdfCommand` message to RabbitMQ.","Task","Backlog","High","frontend-dev@project.com","pm@project.com","",12,"EPIC-005,WI-032,ui,pdf,export","Sprint 5","Printing & Reporting","DicomApp","","An 'Export to PDF' button exists in the print preview.","US-032","TASK-099,TASK-009","2024-01-01 09:00","2024-01-01 09:00","WPF,MVVM,C#"
"Send Print Output via Email","As a Technician or Admin, I want to send the print output via email directly from the application so that I can efficiently share it with collaborators.","Story","Backlog","Could Have","pm@project.com","pm@project.com","",47.5,"email,sharing,notification","Sprint 5","Printing & Reporting","DicomApp",,,"EPIC-005","US-032","2024-01-01 09:00","2024-01-01 09:00","SMTP,C#,WPF"
"Admin UI for SMTP Server Configuration","Create a view in the Administration area for an Admin to configure SMTP server settings (host, port, credentials, TLS/STARTTLS). These settings will be saved to the database.","Task","Backlog","High","frontend-dev@project.com","pm@project.com","",10.2,"EPIC-005,WI-033,ui,admin,smtp","Sprint 5","Printing & Reporting","DicomApp","","Admin can save and load SMTP settings.","US-033","TASK-024","2024-01-01 09:00","2024-01-01 09:00","WPF,MVVM,C#"
"Implement Email Service with Attachments","Create an `EmailService` that uses a library like MailKit to send emails via the configured SMTP server. The service should support attaching files from byte arrays (for PDFs) or file paths (for images).","Task","Backlog","High","backend-dev@project.com","pm@project.com","",12,"EPIC-005,WI-033,backend,email,smtp","Sprint 5","Printing & Reporting","DicomApp","","The service can send an email with a PDF attachment.","US-033","TASK-110","2024-01-01 09:00","2024-01-01 09:00","C#,MailKit"
"UI: Create Email Composition Dialog with Security Warning","Create a dialog for composing an email (To, Subject, Body). Before sending, implement a security check that if the email contains PHI variables or unsecured attachments, it displays a modal warning requiring explicit user confirmation before proceeding.","Task","Backlog","High","frontend-dev@project.com","pm@project.com","",9.2,"EPIC-005,WI-033,ui,email,security","Sprint 5","Printing & Reporting","DicomApp","","The email composition dialog is functional.","US-033","TASK-111","2024-01-01 09:00","2024-01-01 09:00","WPF,MVVM,C#"
"Monitor System Health","As an Administrator, I want to view a System Health Dashboard so that I can get a real-time overview of the status of all critical components and be alerted to potential issues.","Story","Backlog","High","pm@project.com","pm@project.com","",43.5,"monitoring,dashboard,admin","Sprint 5","Deployment & Operations","DicomApp",,,"EPIC-006","US-001,US-033","2024-01-01 09:00","2024-01-01 09:00","WPF,C#"
"Backend: Implement System Health Probe Service","In the Windows Service, create a hosted service that periodically polls the status of critical components: DB connectivity (via a simple query), RabbitMQ connectivity (via `IConnection.IsOpen`), and available disk space at the DICOM storage path. It will cache these statuses.","Task","Backlog","High","backend-dev@project.com","pm@project.com","",10.2,"EPIC-006,WI-038,backend,monitoring,health-check","Sprint 5","Deployment & Operations","DicomApp","","The service runs on a timer and successfully checks all three components.","US-036","TASK-004","2024-01-01 09:00","2024-01-01 09:00","C#,.NET"
"UI: Create System Health Dashboard","Create an admin-only view that displays the cached health status information from the background service. It will use indicators (e.g., green/red lights) for each component and display metrics like queue depths and disk space. The client will fetch this data via a dedicated Named Pipe call.","Task","Backlog","High","frontend-dev@project.com","pm@project.com","",8.3,"EPIC-006,WI-038,ui,admin,dashboard","Sprint 5","Deployment & Operations","DicomApp","","The dashboard UI is created and accessible to admins.","US-036","TASK-121","2024-01-01 09:00","2024-01-01 09:00","WPF,MVVM,C#"
"Implement Critical Error Alerting Mechanism","Extend the health probe service. If a metric crosses a configurable critical threshold (e.g., disk space < 5GB, DLQ count > 0), it will use the `EmailService` to send an automated alert email to a configured administrator address.","Task","Backlog","High","backend-dev@project.com","pm@project.com","",12,"EPIC-006,WI-038,alerting,email,monitoring","Sprint 5","Deployment & Operations","DicomApp","","An alert email is sent when disk space drops below a threshold.","US-036","TASK-121,TASK-111","2024-01-01 09:00","2024-01-01 09:00","C#"
"Admin UI for Alerting Configuration","In the administration settings, create a UI for an Admin to configure the health alert thresholds (e.g., disk space warning/critical levels) and the recipient email address for alerts.","Task","Backlog","High","frontend-dev@project.com","pm@project.com","",10.2,"EPIC-006,WI-038,ui,admin,configuration","Sprint 5","Deployment & Operations","DicomApp","","Admin can configure and save alert settings.","US-036","TASK-123","2024-01-01 09:00","2024-01-01 09:00","WPF,MVVM,C#"
"Perform Automated Data Integrity Checks","As a System, I want to perform periodic, scheduled background checks to verify that all DICOM files referenced in the database exist in the file system so that data corruption or accidental file deletion can be detected and reported to an Administrator.","Story","Backlog","High","pm@project.com","pm@project.com","",12.2,"data-integrity,reliability,background-job","Sprint 6","Security & Compliance","DicomApp",,,"EPIC-004","US-015","2024-01-01 09:00","2024-01-01 09:00","C#,EF Core"
"Implement Data Integrity Check Hosted Service","In the Windows Service project, create a new `IHostedService` that runs on a periodic timer (e.g., once every 24 hours). The service will be responsible for executing the data integrity check.","Task","Backlog","High","backend-dev@project.com","pm@project.com","",6,"EPIC-004,WI-022,background-job,reliability","Sprint 6","Security & Compliance","DicomApp","","A new `DataIntegrityCheckHostedService.cs` is created.","US-024","TASK-004","2024-01-01 09:00","2024-01-01 09:00","C#,.NET 8"
"Implement Integrity Check and Logging Logic","Inside the hosted service, implement the core logic. This will involve querying the database for all `Image` records, constructing the expected file path for each, and using `File.Exists` to check for its presence. Any discrepancies found will be written as critical errors to the system log using Serilog.","Task","Backlog","High","backend-dev@project.com","pm@project.com","",6.2,"EPIC-004,WI-022,data-integrity,reliability","Sprint 6","Security & Compliance","DicomApp","","The service correctly queries the database for all image file paths.","US-024","TASK-005,TASK-050,TASK-083","2024-01-01 09:00","2024-01-01 09:00","C#,Entity Framework Core"
"Install the Application and Services","As a System Administrator, I want to use a single, signed MSIX installer to deploy the application so that the installation process is simple, secure, and reliable.","Story","Backlog","Critical","pm@project.com","pm@project.com","",56.5,"installer,deployment,msix","Sprint 6","Deployment & Operations","DicomApp",,,"EPIC-006","US-001","2024-01-01 09:00","2024-01-01 09:00","MSIX,DevOps"
"Create MSIX Packaging Project","Add an MSIX packaging project to the Visual Studio solution. Configure it to include the output from the WPF client and the Windows Service projects.","Task","Backlog","High","devops@project.com","pm@project.com","",12,"EPIC-006,WI-034,msix,packaging","Sprint 6","Deployment & Operations","DicomApp","","The packaging project is created and correctly references the application projects.","US-034","TASK-001","2024-01-01 09:00","2024-01-01 09:00","MSIX,Visual Studio"
"Implement Prerequisite Check in Installer","Implement a custom installer step or a first-run check that prompts the user for PostgreSQL and RabbitMQ connection details and validates them. The check must also verify that the `pgcrypto` extension is enabled. The installation or first run will not proceed on failure.","Task","Backlog","High","devops@project.com","pm@project.com","",10.2,"EPIC-006,WI-034,installer,prerequisites","Sprint 6","Deployment & Operations","DicomApp","","The installer prompts for connection details.","US-034","TASK-113","2024-01-01 09:00","2024-01-01 09:00","MSIX,WPF,C#"
"Configure Windows Service Installation via MSIX","Configure the MSIX manifest to declare the Windows Service. Ensure that the installer correctly registers, configures, and starts the 'DICOM Service' upon successful installation.","Task","Backlog","High","devops@project.com","pm@project.com","",12,"EPIC-006,WI-034,msix,service","Sprint 6","Deployment & Operations","DicomApp","","The `appxmanifest.xml` is configured for the service.","US-034","TASK-113","2024-01-01 09:00","2024-01-01 09:00","MSIX,XML"
"Integrate Code Signing into Build Pipeline","Set up the CI/CD pipeline to automatically sign the MSIX package with a trusted code signing certificate during the release build.","Task","Backlog","High","devops@project.com","pm@project.com","",10.2,"EPIC-006,WI-034,security,signing,ci-cd","Sprint 6","Deployment & Operations","DicomApp","","The release build produces a signed `.msix` file.","US-034","TASK-113","2024-01-01 09:00","2024-01-01 09:00","DevOps,CI/CD,Code Signing"
"Migrate Data from Legacy System","As a System Administrator, I want to use a standalone utility to migrate data from our legacy system into the new application so that we can transition with no loss of historical data.","Story","Backlog","High","pm@project.com","pm@project.com","",51.2,"migration,etl,data","Sprint 6","Deployment & Operations","DicomApp",,,"EPIC-006","US-015,US-017","2024-01-01 09:00","2024-01-01 09:00","C#,ETL,SQL"
"Develop Data Extraction and Transformation Logic","Create a new console application for the migration utility. Implement the 'Extract' and 'Transform' steps. This involves connecting to the legacy data source and mapping its schema to the DTOs for the new system's data model.","Task","Backlog","High","backend-dev@project.com","pm@project.com","",8.3,"EPIC-006,WI-036,migration,etl","Sprint 6","Deployment & Operations","DicomApp","","The utility can connect to the legacy source and extract records.","US-035","TASK-050","2024-01-01 09:00","2024-01-01 09:00","C#,ETL"
"Develop Data Loading and Validation Logic","Implement the 'Load' and 'Validate' steps. The utility will use the new system's data access layer to insert the transformed data. After loading, it will run validation queries (e.g., `COUNT(*)`) against both source and destination to ensure data integrity and generate a report.","Task","Backlog","High","backend-dev@project.com","pm@project.com","",12,"EPIC-006,WI-036,migration,etl,validation","Sprint 6","Deployment & Operations","DicomApp","","The utility successfully loads data into the new database.","US-035","TASK-117","2024-01-01 09:00","2024-01-01 09:00","C#,ETL,SQL"
"Implement DICOM File Migration Logic","Extend the utility to handle the migration of the physical DICOM files. This involves locating the files based on the legacy data, copying them, and restructuring them into the new system's hierarchical folder structure.","Task","Backlog","High","backend-dev@project.com","pm@project.com","",10.2,"EPIC-006,WI-036,migration,file-system","Sprint 6","Deployment & Operations","DicomApp","","The utility correctly copies and reorganizes DICOM files.","US-035","TASK-118","2024-01-01 09:00","2024-01-01 09:00","C#,.NET I/O"
"Implement Robust Logging and Reporting for Migration Utility","Integrate Serilog into the migration utility to provide detailed, verbose logging of the entire ETLV process. The final validation report should be a clean, human-readable summary of the process, highlighting any errors or discrepancies.","Task","Backlog","High","backend-dev@project.com","pm@project.com","",8.3,"EPIC-006,WI-036,migration,logging,reporting","Sprint 6","Deployment & Operations","DicomApp","","The utility produces a detailed log file for each run.","US-035","TASK-118","2024-01-01 09:00","2024-01-01 09:00","Serilog,C#"
"Configure Windows Service for Automatic Restart","Configure the recovery options for the Windows Service within the installer or deployment scripts to automatically restart on the first, second, and subsequent failures.","Task","Backlog","Low","devops@project.com","pm@project.com","",4,"EPIC-004,WI-043,reliability,service","Sprint 6","Security & Compliance","DicomApp","","The installed service properties in Windows show 'Restart the Service' for all failure cases.","","TASK-115","2024-01-01 09:00","2024-01-01 09:00","Windows Service,MSIX"
"Internationalize UI for English and Spanish","Externalize all UI text strings into resource files (`.resx`). Implement the logic for the user to switch the application's culture at runtime, which will reload the UI with the selected language (English or Spanish).","Task","Backlog","Medium","frontend-dev@project.com","pm@project.com","",12,"EPIC-001,WI-043,i18n,accessibility","Sprint 6","Core Architecture & Foundational Setup","DicomApp","","All UI text is loaded from resource files.","","TASK-003","2024-01-01 09:00","2024-01-01 09:00","WPF,i18n"
"Document Backup and Recovery Procedures","In the Administrator's Guide, write detailed, step-by-step procedures for backing up the PostgreSQL database using `pg_dump` and restoring it from a backup file using `pg_restore`. This must be sufficient to meet the RTO/RPO targets.","Task","Backlog","Medium","tech-writer@project.com","pm@project.com","",10.2,"EPIC-001,WI-044,documentation,disaster-recovery","Sprint 6","Core Architecture & Foundational Setup","DicomApp","","The guide contains a clear 'Backup' section.","","","2024-01-01 09:00","2024-01-01 09:00","Technical Writing,PostgreSQL"
"Create Deployment and Administrator Guides","Write the two key documents: a Deployment Guide (installation, prerequisites, initial configuration) and an Administrator's Guide (day-to-day tasks like user management, configuration, monitoring).","Task","Backlog","High","tech-writer@project.com","pm@project.com","",24.3,"EPIC-006,WI-037,documentation","Sprint 6","Deployment & Operations","DicomApp","","A `DeploymentGuide.pdf` is delivered.","","","2024-01-01 09:00","2024-01-01 09:00","Technical Writing"
"Implement Odoo License Validation Workflow","Implement the startup logic to call the Odoo API for license validation. Handle the 72-hour grace period on network failure and the transition to a restricted, read-only mode if the license is invalid or the grace period expires.","Task","Backlog","High","backend-dev@project.com","pm@project.com","",12,"EPIC-002,WI-041,licensing,integration","Sprint 6","User & Session Management","DicomApp","","Application enters grace period on network failure.","","TASK-003","2024-01-01 09:00","2024-01-01 09:00","C#,HTTP"
"Enforce TLS 1.2/1.3 for Odoo API Communication","Configure the HTTP client used for license validation to enforce a minimum of TLS 1.2 and to prefer TLS 1.3 for all communication with the Odoo API.","Task","Backlog","Critical","security-dev@project.com","pm@project.com","",4.2,"EPIC-004,WI-041,security,tls,networking","Sprint 6","Security & Compliance","DicomApp","","Network traffic analysis confirms TLS 1.2 or higher is used.","","TASK-134","2024-01-01 09:00","2024-01-01 09:00","C#,.NET Security"
"Validate Performance Targets on Recommended Hardware","Perform and document performance tests on a machine meeting the recommended hardware specs. Verify application launch time, study loading time, and UI response time against the specified NFR targets.","Task","Backlog","High","qa-dev@project.com","pm@project.com","",10.2,"EPIC-001,WI-040,performance,testing,nfr","Sprint 6","Core Architecture & Foundational Setup","DicomApp","","Application launch time is < 3 seconds on SSD.","","","2024-01-01 09:00","2024-01-01 09:00","Performance Testing"
"Validate C-STORE SCP Performance","Conduct a load test on the C-STORE SCP to ensure it can handle at least 10 simultaneous incoming associations without noticeable degradation in client UI responsiveness.","Task","Backlog","High","qa-dev@project.com","pm@project.com","",10.2,"EPIC-003,WI-040,performance,testing,dicom","Sprint 6","DICOM Core Functionality","DicomApp","","The system successfully ingests data from 10 concurrent SCUs.","","TASK-048","2024-01-01 09:00","2024-01-01 09:00","Performance Testing,DICOM"
"Validate Data Integrity Guarantee (Non-Destructive Operations)","Perform a series of tests to confirm that standard operations (viewing, printing, GSPS annotations) never alter original DICOM files. Verify that only explicit, admin-only actions (metadata edit, pixel anonymization) create new 'working copy' files.","Task","Backlog","Critical","qa-dev@project.com","pm@project.com","",12.2,"EPIC-004,WI-040,testing,data-integrity,security","Sprint 6","Security & Compliance","DicomApp","","File hash of original DICOM remains unchanged after viewing and printing.","","TASK-079,TASK-089","2024-01-01 09:00","2024-01-01 09:00","QA,Testing"
"Document Supported Platforms and Hardware Requirements","In the Deployment Guide, officially document the supported OS versions (Windows 10 20H2+, Windows 11) and the minimum/recommended hardware specifications.","Task","Backlog","Low","tech-writer@project.com","pm@project.com","",4.2,"EPIC-006,WI-037,documentation,nfr","Sprint 6","Deployment & Operations","DicomApp","","The Deployment Guide has a 'System Requirements' section.","","","2024-01-01 09:00","2024-01-01 09:00","Technical Writing"
"Validate UI Responsiveness during Background Processing","Conduct tests to ensure that UI response time for common actions remains under 500ms even while the background service is under heavy load (e.g., processing multiple print jobs or C-STORE receptions).","Task","Backlog","Medium","qa-dev@project.com","pm@project.com","",10.2,"EPIC-001,WI-040,performance,testing,ui","Sprint 6","Core Architecture & Foundational Setup","DicomApp","","Clicking a button in the UI while 5 print jobs are processing still provides feedback in <500ms.","","TASK-093","2024-01-01 09:00","2024-01-01 09:00","Performance Testing,QA"