"task_id","task_name","primary_skill","secondary_skills","complexity_level","estimated_hours","required_experience","productivity_factor","adjusted_hours","team_size","collaboration_required","dependencies","critical_path","skill_learning_curve","ramp_up_hours","resource_notes","alternative_approach","risk_factors","mitigation_strategy","quality_overhead","review_hours","documentation_hours","testing_coordination","integration_overhead"
"TASK-001","Define User, Role, PasswordHistory Domain Entities","C#","Entity Framework Core","Low","6","Senior","1.2","5","1","","","true","None","","Foundation for database schema, requires clear understanding of user management requirements.","None","Incomplete entity design could lead to rework.","Thorough review of requirements REQ-1-014, REQ-1-042, REQ-1-082 before implementation.","0.9","0.6","0.3","","0.5"
"TASK-005","Develop User Authentication Service","C#","Entity Framework Core,Security","Medium","8.33","Senior","1.2","6.94","1","true","TASK-002,TASK-003","true","None","","Core security logic. Must prevent user enumeration attacks.","None","Subtle bugs could lead to security vulnerabilities (RISK-005).","Mandatory security code review by another senior developer.","1.25","0.83","0.42","2","1"
"TASK-011","Implement Backend Authorization Checks in Application Services","C#",".NET,Security","Medium","8.5","Senior","1.2","7.08","1","","TASK-009","true","Low","1","Defense-in-depth security layer. Needs a reusable pattern (AOP or middleware).","Could use attributes for declarative security checks.","Inconsistent implementation could leave security gaps (RISK-010).","Establish a single, approved pattern for all backend authorization checks.","1.28","0.85","0.43","2","1"
"TASK-026","Implement DICOM C-STORE SCP Listener using fo-dicom","DICOM","fo-dicom,C#","High","12","Senior","1.2","10","1","true","","true","Medium","2","Primary data ingestion point. Must be robust and handle various DICOM dialects.","None","DICOM interoperability issues with specific modalities (RISK-003).","Test with multiple DICOM toolkits (dcmtk, fo-dicom) and real-world sample files.","1.8","1.2","0.6","4","2"
"TASK-033","Spike: Validate DirectX Rendering with Vortice.Windows","DirectX","Vortice.Windows,WPF,HLSL","Critical","16.67","Senior","1.2","13.89","1","","","true","High","4","Mitigates RISK-001. Requires deep knowledge of GPU programming and memory management.","Fall back to CPU-based rendering if spike fails.","High technical complexity; potential for performance issues or memory leaks.","Time-box the spike strictly. Focus on a single, core use case (monochrome rendering with WW/WL).","2.5","1.67","1.5","",""
"TASK-034","Integrate GPU Rendering Pipeline into Main Application","DirectX","WPF","Critical","21","Senior","1.2","17.5","1","true","TASK-033","true","None","","Builds upon the spike to create a reusable, robust viewer control.","None if spike is successful.","Difficulty in abstracting low-level DirectX logic into a clean WPF control.","Pair programming with Mid-level dev to ensure component is understandable and maintainable.","3.15","2.1","1.05","4","3"