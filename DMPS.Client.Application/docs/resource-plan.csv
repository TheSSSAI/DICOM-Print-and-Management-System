task_id,task_name,primary_skill,secondary_skill,complexity_level,estimated_hours,required_experience,team_size,dependencies,critical_path,resource_notes,alternative_approach
TASK-SVC-001,Scaffold .NET Solution and Project Structure,Backend Development,DevOps,High,33.36,Senior,1,"",Yes,"Architectural task defining the foundation for the entire system. Requires a developer with strong understanding of Onion Architecture and .NET project organization.","Use a pre-defined solution template to accelerate setup, but ensure it aligns with project-specific architectural goals."
TASK-SVC-002,Implement Windows Service Host using Generic Host,Backend Development,DevOps,High,50.64,Senior,1,TASK-SVC-001,Yes,"Requires solid experience with .NET Generic Host and Windows Service integration. This is a core part of the service's lifecycle management.","For non-Windows environments, containerize the service using Docker, which simplifies hosting but adds a container orchestration dependency."
TASK-SVC-003,Configure Automatic Service Recovery,DevOps,Backend Development,High,34.64,Mid,1,TASK-SVC-002,No,"Requires knowledge of MSIX installer capabilities or scripting (PowerShell) to interact with the Windows Service Control Manager. Essential for production reliability.","Use a third-party monitoring tool (e.g., Datadog, Nagios) to manage service health and recovery, providing more advanced options but adding cost."
TASK-SVC-004,"Setup DI, Configuration, and Secure Secret Management",Backend Development,Security,High,96.00,Senior,1,TASK-SVC-002,Yes,"Security-critical task. Requires a developer with expertise in .NET DI, configuration patterns, and the Windows Credential Manager API to avoid exposing secrets.","Use a dedicated secret management service like Azure Key Vault or HashiCorp Vault for higher security and centralized management, but this adds an external dependency."
TASK-SVC-005,Unit Test Core Service Setup,Quality Assurance,Backend Development,High,33.36,Mid,1,TASK-SVC-004,No,"Requires proficiency in mocking frameworks (Moq) to isolate dependencies like the Windows Credential Manager for effective unit testing of the service startup logic.","Combine with integration testing that uses a staging environment's credential manager, providing more realistic validation but increasing test complexity."
TASK-SVC-026,Define EF Core Entities and DbContext,Backend Development,Data Engineering,High,114.64,Senior,1,TASK-SVC-001,Yes,"Critical data modeling task. Requires a senior developer with deep EF Core and PostgreSQL expertise, especially for configuring pgcrypto integration. Mistakes here are costly to fix later.","Use a ""database-first"" approach by writing raw SQL for the schema and then scaffolding the DbContext. This gives more control over the DB but decouples it from the C# code."
TASK-SVC-027,Implement Initial EF Core Database Migration,DevOps,Backend Development,High,36.00,Mid,1,TASK-SVC-026,Yes,"Requires proficiency with the EF Core CLI and understanding of migration script customization to add the pgcrypto extension.","Manage database schema changes manually using a dedicated schema comparison tool (e.g., Redgate). This is more DBA-friendly but less automated."
TASK-SVC-028,Implement Generic and Specific Repositories,Backend Development,,High,96.00,Mid,1,TASK-SVC-026,Yes,"Architectural task to establish a clean data access pattern. Requires strong C# generics and LINQ skills to create a reusable and maintainable persistence layer.","Avoid the generic repository pattern and implement only specific repositories. This reduces abstraction but can lead to more boilerplate code for simple CRUD operations."
TASK-SVC-029,Implement Automatic Migration Application on Startup,DevOps,Backend Development,Medium,16.00,Mid,1,TASK-SVC-027,Yes,"Simple but critical for CI/CD. The developer should understand the risks of running migrations automatically in a production environment (e.g., potential for downtime).","Run migrations as a separate, explicit step in the deployment pipeline instead of on application startup. This is safer for production but adds a step to the deployment process."
TASK-SVC-030,Integration Test the Persistence Layer,Quality Assurance,DevOps,High,84.00,Senior,1,"TASK-SVC-027,TASK-SVC-028",No,"Requires a QA engineer with strong C# skills and expertise in Testcontainers and Docker to create a reliable, self-contained testing environment for the database.","Use a shared, centrally-hosted test database instead of Testcontainers. This is simpler to set up but can lead to test data conflicts and slower test runs."
TASK-SVC-031,Implement Data Integrity Check Service,Backend Development,Database,Medium,96.00,Mid,1,"TASK-SVC-002,TASK-SVC-028",No,"Requires careful implementation of batch processing for database queries and file system checks to avoid performance issues on systems with millions of files.","Perform integrity checks using an external scripting solution (e.g., PowerShell) run by a sysadmin. This offloads work from the application but makes the process less integrated."
TASK-SVC-032,Unit Test Data Integrity Check Logic,Quality Assurance,Backend Development,Medium,25.36,Mid,1,TASK-SVC-031,No,"Requires mocking both the database repository and the file system to test the service's logic in isolation. A wrapper for System.IO might be needed to make it mockable.","Rely solely on integration tests. This is less granular and slower but validates the logic against real systems."
TASK-SVC-033,Implement Discrepancy Logging and Reporting,Backend Development,DevOps,Medium,33.36,Mid,1,"TASK-SVC-031,TASK-SVC-034",No,"Requires proficiency with the chosen logging framework (Serilog) to ensure summary reports are clear, well-structured, and easy to parse for monitoring tools.","Instead of logging, write discrepancies to a dedicated database table. This allows for easier querying and reporting in the UI but adds schema complexity."
TASK-SVC-006,Implement Resilient RabbitMQ Connection Management Service,Backend Development,DevOps,High,96.00,Senior,1,TASK-SVC-004,Yes,"Architecturally critical task requiring a senior developer with experience in distributed systems and resilience patterns (e.g., Polly). Errors here will affect all async operations.","Simplify the logic to attempt reconnection only on a fixed interval without backoff. This is easier to implement but less resilient to flapping network conditions or broker restart cycles."
TASK-SVC-007,"Implement RabbitMQ Topology Declaration Service",DevOps,Backend Development,High,50.64,Mid,1,TASK-SVC-006,Yes,"Requires a developer who understands RabbitMQ's architecture (exchanges, queues, bindings, DLX) to ensure the messaging infrastructure is durable and correctly configured on startup.","Configure the RabbitMQ topology manually on the broker. This is simpler for the application but introduces a risk of configuration drift between environments."
TASK-SVC-008,Implement Generic Base Consumer IHostedService,Backend Development,Architecture,High,96.00,Senior,1,TASK-SVC-006,Yes,"Highly complex architectural task. An error in this abstraction will be propagated to all message consumers. Requires a lead/senior developer. See RISK-009.","Do not create a generic base class. Implement each consumer with duplicated boilerplate logic. This is faster initially but creates significant tech debt and maintenance overhead."
TASK-SVC-009,Implement In-Consumer Retry Policy,Backend Development,DevOps,High,50.64,Senior,1,TASK-SVC-008,Yes,"Requires a deep understanding of transient vs. permanent errors to configure the Polly retry policy effectively, preventing unnecessary retries for unrecoverable faults.","Implement a simpler, manual `for` loop for retries. This is less flexible and lacks advanced features like exponential backoff and jitter provided by Polly."
TASK-SVC-010,Integration Test Resilient Messaging and DLQ,Quality Assurance,DevOps,High,81.36,Senior,1,"TASK-SVC-006,TASK-SVC-007,TASK-SVC-008,TASK-SVC-009",No,"Requires a QA engineer with expertise in Testcontainers for both RabbitMQ and PostgreSQL to simulate failures (e.g., stopping the broker container) and validate the entire resilience and DLQ workflow.","Perform manual testing by stopping/starting the RabbitMQ service. This is less repeatable and cannot be easily integrated into an automated CI/CD pipeline."
TASK-SVC-034,"Configure Serilog with Multiple Sinks and Correlation ID",Backend Development,DevOps,High,66.64,Mid,1,TASK-SVC-002,Yes,"Requires experience with Serilog's advanced configuration, including custom enrichers, to ensure all log entries are tagged with a correlation ID for end-to-end tracing.","Use a simpler logging setup without correlation IDs. This makes debugging distributed workflows (e.g., client -> queue -> service) significantly more difficult."
TASK-SVC-035,Implement PHI Redaction Policy for Serilog,Security,Backend Development,High,98.64,Senior,1,TASK-SVC-034,Yes,"Security-critical task. Requires a senior developer with C# reflection skills to build a robust redaction policy. High risk of failure leading to compliance violations (RISK-001).","Manually ensure no PHI objects are ever passed to the logger. This is extremely error-prone and not a scalable or reliable strategy."
TASK-SVC-036,Implement Audit Trail Service and Repository,Backend Development,Database,High,64.00,Mid,1,TASK-SVC-028,Yes,"The service must be designed to be highly available and performant, as many other services will depend on it. The database writes should be fast and reliable.","Write audit events directly to a log file instead of a database. This is simpler but makes querying, reporting, and filtering the audit trail much more difficult."
TASK-SVC-038,Develop User Management Logic in Service,Backend Development,Security,High,48.00,Mid,1,TASK-SVC-036,Yes,"Core business logic for a security-sensitive area. Requires careful implementation of password hashing and role management logic.","Embed user management logic directly in the API controllers or message consumers. This violates separation of concerns and makes the logic harder to test and reuse."
TASK-SVC-041,Integrate Auditing into Key Business Logic,Backend Development,Security,High,81.36,Mid,1,"TASK-SVC-036,TASK-SVC-038",Yes,"Requires a developer to identify all ""significant events"" across the application that require auditing and correctly inject and call the audit service.","Skip explicit auditing and rely on generic request/database logs. This fails to meet compliance requirements, which demand a clear, business-focused audit trail."
TASK-SVC-011,Implement DICOM C-STORE SCP Hosted Service,Backend Development,Data Engineering,High,96.00,Senior,1,TASK-SVC-002,Yes,"Requires a developer with specialized knowledge of the DICOM standard and the fo-dicom library. This is a niche skill set. High performance is critical (RISK-006).","Use a third-party, off-the-shelf DICOM SCP application and have it forward data to the service via another mechanism (e.g., writing to a watched folder). This adds another component to manage."
TASK-SVC-012,Implement Decoupled Message Publication for Received Studies,Backend Development,Architecture,High,66.64,Senior,1,"TASK-SVC-011,TASK-SVC-006",Yes,"This is a critical performance optimization. The developer must ensure the handoff to RabbitMQ is as fast as possible to avoid causing timeouts on the sending modality.","Write directly to the database from the C-STORE provider. This is simpler but tightly couples ingestion to database performance, risking C-STORE timeouts under load."
TASK-SVC-013,Implement DICOM Metadata Database Writer Consumer,Backend Development,Database,High,85.36,Mid,1,"TASK-SVC-008,TASK-SVC-012,TASK-SVC-026",Yes,"Consumer logic must be idempotent to handle potential message redelivery without creating duplicate database records (RISK-005). Requires careful use of unique constraints or 'upsert' logic.","Assume messages will only be delivered once. This simplifies the code but is an unsafe assumption in a distributed system and will lead to data corruption."
TASK-SVC-014,Integration Test Full C-STORE to Database Pipeline,Quality Assurance,DevOps,High,96.00,Senior,1,TASK-SVC-013,No,"Complex test setup requiring a DICOM SCU tool, Testcontainers for RabbitMQ and PostgreSQL. Requires a senior QA engineer with strong automation and networking skills.","Perform manual end-to-end testing with a real modality or simulator. This is slow, not repeatable, and cannot be part of an automated build pipeline."
TASK-SVC-015,Develop Auto-Routing Rule Evaluation Service,Backend Development,,High,66.64,Mid,1,TASK-SVC-026,No,"The rule evaluation logic can become complex. It needs to be efficient and extensible to support different types of criteria in the future.","Implement a simple `if/else` or `switch` statement for routing. This is not scalable and requires a code change to add or modify rules."
TASK-SVC-016,Integrate Auto-Routing into C-STORE Provider,Backend Development,Data Engineering,High,52.00,Mid,1,"TASK-SVC-011,TASK-SVC-015",Yes,"The integration must be seamless and not introduce significant latency into the C-STORE receive process. The file needs to be saved to a temporary location first, then moved after the destination is determined.","Determine the route after the study is fully processed. This would require moving files on disk after they have already been saved to a default location, which is inefficient."
TASK-SVC-017,Implement Physical Print Job Consumer,Backend Development,DevOps,High,48.00,Mid,1,TASK-SVC-008,Yes,"The consumer needs to be able to deserialize a potentially complex print job object and interpret its settings correctly.","Combine printing logic with another consumer. This violates the Single Responsibility Principle and makes the consumer harder to maintain and scale."
TASK-SVC-018,Implement Print Document Generation and Spooling Logic,Backend Development,,High,98.64,Senior,1,TASK-SVC-017,Yes,"High-risk task due to dependency on native Windows Print API and third-party drivers (RISK-007). Requires a senior developer with experience in P/Invoke or native integration.","Generate a PDF and then use a command-line tool to print the PDF. This adds a dependency and may offer less control over print settings, but avoids direct interaction with the Print API."
TASK-SVC-019,Implement PDF Generation Consumer,Backend Development,DevOps,High,48.00,Mid,1,TASK-SVC-008,Yes,"Similar to the print consumer, this task focuses on the messaging aspect of receiving and managing PDF generation jobs.","Use a file-based queue (e.g., writing job files to a watched folder). This is less robust than a real message broker like RabbitMQ and harder to scale."
TASK-SVC-020,Implement PDF Document Generation using QuestPDF,Backend Development,,High,62.72,Mid,1,TASK-SVC-019,Yes,"Requires a developer to learn the QuestPDF library API to dynamically generate complex layouts, including tables, images, and headers/footers, based on the job payload.","Use a different PDF library like iTextSharp (older, different license) or a web-based rendering engine. This would require a different skillset and architecture."
TASK-SVC-021,Implement Named Pipes Server for Synchronous IPC,Backend Development,,High,69.36,Senior,1,TASK-SVC-002,Yes,"Requires experience with low-level, thread-safe network programming. Security is a key concern, as the pipe must be properly secured with an ACL (RISK-010).","Use a lightweight local HTTP server (e.g., Kestrel) for IPC. This is more standard but has slightly more overhead than Named Pipes."
TASK-SVC-022,Implement System Health Probe Service,Backend Development,DevOps,High,85.36,Senior,1,TASK-SVC-002,Yes,"Requires robust error handling for each dependency check. A failure to check one dependency (e.g., DB is down) should not prevent checks on others.","Have the client application perform the health checks directly. This is less efficient and doesn't provide a centralized view of the service's own health."
TASK-SVC-023,Expose Health Status via Named Pipe Endpoint,Backend Development,DevOps,High,50.64,Mid,1,"TASK-SVC-021,TASK-SVC-022",No,"Requires creating a stable, versioned JSON contract for the health status payload to ensure backward compatibility with clients in the future.","Return a simple, unstructured string (e.g., 'OK' or 'ERROR'). This is less informative for the client, which cannot display detailed status."
TASK-SVC-024,Implement Email Alerting Service,Backend Development,,High,50.64,Mid,1,TASK-SVC-004,Yes,"Requires knowledge of the SMTP protocol and a library like MailKit. The implementation needs to handle different authentication and encryption methods (TLS/STARTTLS).","Integrate with a third-party alerting service like PagerDuty or SendGrid via their API. This is more powerful but adds cost and an external dependency."
TASK-SVC-025,Integrate Alerting with Health Probe and DLQ Events,Backend Development,DevOps,High,30.72,Mid,1,"TASK-SVC-022,TASK-SVC-024,TASK-SVC-008",No,"Requires modifying multiple core components (health probe, base consumer) to trigger alerts. Logic must be added to prevent alert storms (e.g., sending an email every second for a persistent issue).","Rely on external monitoring of logs or queue depths to generate alerts. This decouples the application from alerting but requires more complex external configuration."
TASK-SVC-039,Implement Data Retention Hosted Service,Backend Development,Database,High,66.64,Mid,1,"TASK-SVC-002,TASK-SVC-028",No,"The database query to find studies older than the retention period must be highly optimized to avoid performance degradation on a large production database.","Perform manual data purges using scripts provided to the customer's DBA. This is less automated and more error-prone."
TASK-SVC-040,Implement Permanent Deletion and Auditing Logic,Backend Development,Database,High,101.36,Senior,1,"TASK-SVC-039,TASK-SVC-036",No,"Extremely high-risk task involving permanent data deletion (RISK-003). Requires a senior developer, extensive testing, and a transactional approach that includes deleting files and database records atomically.","Implement a 'soft-delete' feature where data is flagged as deleted but not physically removed. This is much safer but does not reclaim storage space."
TASK-SVC-041-B,Implement System Setting for Data Retention Period,Backend Development,,Low,20.00,Mid,1,TASK-SVC-039,No,"Ensures the retention period is configurable by an administrator without requiring a code change. The service needs to read this value at runtime.","Hard-code the retention period (e.g., 7 years). This is simpler but inflexible and may not meet the needs of all customers."
TASK-SVC-042,Implement Database Backup Hosted Service,DevOps,Backend Development,High,50.64,Mid,1,"TASK-SVC-002,TASK-SVC-028",Yes,"The service needs to be able to locate the `pg_dump` utility and have the necessary permissions to execute it. This can be complex in different customer environments.","Rely on the customer's existing database backup infrastructure and procedures. This offloads responsibility but means the application has no built-in backup capability."
TASK-SVC-043,Implement `pg_dump` Execution Logic,DevOps,Backend Development,High,73.36,Senior,1,TASK-SVC-042,Yes,"Requires a senior developer to securely and reliably invoke an external process from C#, including handling credentials, capturing output streams for logging, and checking exit codes.","Use a third-party library that wraps `pg_dump`. This can simplify the code but adds another dependency to the project."
TASK-SVC-044,Implement System Settings for Backup Configuration,Backend Development,,High,20.00,Mid,1,TASK-SVC-042,Yes,"The service must read the backup schedule and path from the database, allowing an administrator to configure it via the UI.","Hard-code the backup schedule and path in `appsettings.json`. This makes the feature much less flexible for administrators."