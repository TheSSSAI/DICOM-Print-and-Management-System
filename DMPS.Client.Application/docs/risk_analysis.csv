risk_id,risk_category,risk_description,probability,impact,risk_score,priority_level,affected_tasks,root_cause,mitigation_strategy,contingency_plan,monitoring_trigger,owner,due_date,status
RISK-001,Technical,"Failure to correctly implement PHI redaction in logs, leading to sensitive patient data being written to log files or the Windows Event Log, causing a major HIPAA compliance violation.",4,5,20,High,"WI-021, WI-020","Complexity of identifying all possible PHI data fields and patterns within structured and unstructured log messages. Overlooking a field could lead to a data leak.","Implement a dedicated security-focused peer review for all logging code. Create an extensive suite of unit tests with sample objects containing PHI to verify the redaction policy. Use static analysis tools to scan for logging statements that might bypass the redaction policy.","Develop a script to parse and audit existing log files for any leaked PHI. Prepare an incident response plan for a confirmed PHI leak, including immediate patching and reporting procedures.","A unit test for the `PhiRedactionPolicy` fails. A manual or automated log audit detects unmasked PHI.","Security Lead",TBD,Open
RISK-002,External,"The `pgcrypto` extension is not enabled or properly configured on the target PostgreSQL server, preventing the application from encrypting data at rest and failing to meet a critical security requirement.",3,5,15,High,"WI-016, WI-017, WI-003","The application's functionality depends on a specific, non-default configuration of an external system (PostgreSQL) that is outside the application's direct control.","Add a mandatory, blocking health check on service startup that verifies the `pgcrypto` extension is enabled and functional. The MSIX installer prerequisite check must validate this (REQ-144). The deployment guide must have a dedicated, clear section on this requirement.","Provide a detailed troubleshooting guide for DBAs on how to enable `pgcrypto`. The service will fail to start with a clear error message in the event log specifying the missing dependency.","The startup health check fails with an error indicating `pgcrypto` functions are not available. Integration tests against a target database fail.","Lead Developer",TBD,Open
RISK-003,Operational,"The automated data retention policy (auto-purge) is implemented with a logical flaw, causing it to delete incorrect data (e.g., active studies) or more data than intended, leading to irreversible data loss.",2,5,10,Medium,WI-023,"Complexity of date-based queries and permanent deletion operations. An off-by-one error or timezone issue in the query could have catastrophic consequences.","Implement a 'soft-delete' mechanism first, where data is flagged for deletion and purged by a separate, later process. The deletion task must have a mandatory 'dry run' mode that logs what it *would* delete without actually deleting anything. The deletion query must be peer-reviewed by two senior developers.","Immediately disable the data retention background service. Restore the affected data from the most recent database backup. This is dependent on the success of the backup strategy (WI-024).","The data integrity check task (WI-019) reports a large number of missing files post-purge. A user reports a recently active study is missing.","Lead Developer",TBD,Open
RISK-004,Technical,"The RabbitMQ connection management is not sufficiently resilient, causing the service to lose connection and fail to reconnect automatically, halting all asynchronous processing (DICOM ingestion, printing, etc.).",3,4,12,Medium,WI-004,"Network instability and broker restarts are common operational realities. The reconnection logic can be complex to implement correctly, especially handling edge cases like repeated connection failures.","Implement a robust retry and exponential backoff strategy for reconnection attempts using a proven library like Polly. The singleton connection service must be thoroughly tested using Testcontainers to simulate broker failures and network interruptions.","The System Health Probe (WI-014) reports RabbitMQ as 'Disconnected' for more than 5 minutes. The depth of processing queues grows without being consumed.","Lead Developer",TBD,Open
RISK-005,Quality,"Message consumer logic is not idempotent, leading to duplicate data processing (e.g., creating duplicate study records, printing the same job multiple times) if RabbitMQ redelivers a message due to a transient failure or consumer restart.",3,4,12,Medium,"WI-010, WI-011, WI-012","Developers may overlook the 'at-least-once' delivery guarantee of message queues, leading them to write processing logic that is not safe for re-execution.","Enforce a coding standard that all message consumers must be idempotent. Use unique database constraints to prevent duplicate record insertion. For actions like printing, the consumer should first check the job's status in the database before processing. Conduct specific integration tests where the same message is published twice.","Develop and run a data cleanup script to identify and merge/delete duplicate records. For print jobs, manually cancel duplicate jobs in the printer queue or database.","Integration tests that send the same message twice fail with a unique constraint violation (success) or create duplicate records (failure). QA testing reports duplicate entities.","QA Lead",TBD,Open
RISK-006,Quality,"The C-STORE SCP listener is not performant enough to handle the required number of simultaneous associations (REQ-146), causing timeouts for medical imaging modalities and failed study transfers.",3,4,12,Medium,"WI-007, WI-008","The `fo-dicom` library is powerful but requires careful implementation to achieve high throughput. I/O bottlenecks or inefficient handling of concurrent requests can degrade performance significantly.","Conduct early and continuous performance testing using a DICOM load generation tool. Profile the application under load to identify bottlenecks. Ensure the handoff to RabbitMQ is extremely fast to free up the SCP thread.","Allocate dedicated sprint time for performance tuning and optimization of the SCP service. If necessary, implement a load balancing strategy with multiple SCP instances (future scope).","Performance tests show the service cannot handle 10 simultaneous C-STORE associations. The average C-STORE response time exceeds 500ms under load.","Lead Developer",TBD,Open
RISK-007,Technical,"Interaction with the native Windows Print API and various printer drivers is unreliable, causing print jobs to fail for specific printers or document types, leading to user frustration and support calls.",4,3,12,Medium,WI-012,"The Windows Print API is a complex native dependency with behavior that can vary significantly between different printer drivers, OS versions, and hardware.","Create a dedicated test lab with a variety of physical or virtual printers representing different driver types (PCL, PostScript). Log extensive details about the printer and driver when a job fails. The print consumer must have robust error handling to catch exceptions from the print API.","Document known compatible and incompatible printers. Provide a feature to export to PDF as a reliable fallback for users whose printers are problematic.","Print jobs fail and are sent to the DLQ with error messages originating from the Windows Print Spooler or specific driver DLLs. User reports indicate printing works for some printers but not others.","QA Lead",TBD,Open
RISK-008,Operational,"The service account running the Windows Service lacks the necessary permissions for a key resource (e.g., write access to the DICOM storage UNC path, access to Windows Credential Manager, or permission to execute pg_dump), causing critical features to fail at runtime.",4,3,12,Medium,"WI-003, WI-024, EPIC-003","On-premise deployments involve customer-managed environments where security policies and permissions can be complex and unpredictable. The service's operational requirements are extensive.","Create a comprehensive pre-flight check list in the Deployment Guide. The MSIX installer should have a validation step that tests all required permissions and connections. The service startup logic should perform these checks and write clear, actionable error messages to the Windows Event Log if they fail.","The support team will use the detailed error logs to guide the customer's system administrator in granting the correct permissions. Provide a PowerShell script that can be run by the admin to diagnose permission issues.","The service fails to start, or specific features fail at runtime with 'Access Denied' or 'Unauthorized' exceptions in the application logs.","DevOps Engineer",TBD,Open
RISK-009,Timeline,"The complexity of implementing a generic, reusable base class for RabbitMQ consumers is underestimated, delaying the development of all specific consumer implementations (database writer, PDF generator, etc.).",3,3,9,Medium,WI-005,"Creating a robust abstraction that correctly handles threading, channel management, message lifecycle (ack/nack), and error handling for all possible consumer scenarios is a highly complex task.","Prioritize implementing one concrete consumer first (e.g., the PDF generator) without the abstraction to understand the full requirements. Then, refactor the common logic into the base class. This ensures the abstraction is built from a real-world use case rather than theoretical design.","Descope the generic base class for the initial release. Implement the required consumers with duplicated boilerplate logic and create a tech debt ticket to refactor them in a subsequent release.","The implementation of the `BaseConsumerService` takes significantly longer than estimated, becoming a bottleneck for other dependent tasks. Unit tests for the base class are complex and difficult to write.","Lead Developer",TBD,Open
RISK-010,Security,"The Named Pipes server is implemented with insecure default permissions, allowing another malicious local process on the server to connect and potentially cause a denial of service or exploit the IPC channel.",3,3,9,Medium,WI-013,"Developers may not be familiar with securing Named Pipes and might overlook setting an explicit Access Control List (ACL), leaving it open to any local user.","Enforce a security-focused code review for the Named Pipes implementation. The implementation must programmatically create a `PipeSecurity` object that restricts access to specific, non-privileged accounts (e.g., the user running the client and the service account).","Release a security patch with the corrected ACL settings immediately. Publish a security advisory to customers.","A security audit or static code analysis tool identifies that the `NamedPipeServerStream` is created without a `PipeSecurity` parameter.","Security Lead",TBD,Open