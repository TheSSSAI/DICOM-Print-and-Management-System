-- Enable necessary extensions
CREATE EXTENSION IF NOT EXISTS "uuid-ossp";
CREATE EXTENSION IF NOT EXISTS "pg_trgm";

-- =============================================
-- TABLE DEFINITIONS
-- =============================================

-- Defines user roles like 'Administrator' or 'Technician'.
CREATE TABLE "Role" (
    "roleId" UUID PRIMARY KEY,
    "roleName" VARCHAR(50) NOT NULL,
    "description" TEXT,
    CONSTRAINT uq_role_rolename UNIQUE ("roleName")
);

-- Stores user account information, credentials, and profile data.
CREATE TABLE "User" (
    "userId" UUID PRIMARY KEY,
    "username" VARCHAR(100) NOT NULL,
    "passwordHash" VARCHAR(255) NOT NULL,
    "firstName" TEXT NOT NULL,
    "lastName" TEXT NOT NULL,
    "roleId" UUID NOT NULL,
    "isActive" BOOLEAN NOT NULL DEFAULT true,
    "isTemporaryPassword" BOOLEAN NOT NULL DEFAULT false,
    "passwordLastChangedAt" TIMESTAMPTZ NOT NULL,
    "createdAt" TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT uq_user_username UNIQUE ("username")
);

-- Stores a history of a user's previous passwords to prevent reuse.
CREATE TABLE "PasswordHistory" (
    "passwordHistoryId" UUID PRIMARY KEY,
    "userId" UUID NOT NULL,
    "passwordHash" VARCHAR(255) NOT NULL,
    "createdAt" TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP
);

-- Stores patient demographic information.
CREATE TABLE "Patient" (
    "patientId" UUID PRIMARY KEY,
    "dicomPatientId" TEXT NOT NULL,
    "patientName" TEXT,
    "patientBirthDate" TEXT,
    "patientSex" TEXT,
    "createdAt" TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP
);

-- Stores study-level DICOM metadata. Partitioned by date for performance.
CREATE TABLE "Study" (
    "studyId" UUID PRIMARY KEY,
    "patientId" UUID NOT NULL,
    "studyInstanceUid" VARCHAR(128) NOT NULL,
    "studyDate" TIMESTAMPTZ,
    "studyDescription" TEXT,
    "accessionNumber" TEXT,
    "referringPhysicianName" TEXT,
    "createdAt" TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT uq_study_studyinstanceuid UNIQUE ("studyInstanceUid")
) PARTITION BY RANGE ("studyDate");

-- Stores series-level DICOM metadata.
CREATE TABLE "Series" (
    "seriesId" UUID PRIMARY KEY,
    "studyId" UUID NOT NULL,
    "seriesInstanceUid" VARCHAR(128) NOT NULL,
    "modality" VARCHAR(16),
    "seriesNumber" INTEGER,
    "seriesDescription" TEXT,
    "bodyPartExamined" VARCHAR(64),
    "createdAt" TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT uq_series_seriesinstanceuid UNIQUE ("seriesInstanceUid")
);

-- Stores instance-level DICOM metadata and file path.
CREATE TABLE "Image" (
    "imageId" UUID PRIMARY KEY,
    "seriesId" UUID NOT NULL,
    "sopInstanceUid" VARCHAR(128) NOT NULL,
    "instanceNumber" INTEGER,
    "filePath" TEXT NOT NULL,
    "fileSize" BIGINT NOT NULL,
    "isDeleted" BOOLEAN NOT NULL DEFAULT false,
    "createdAt" TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT uq_image_sopinstanceuid UNIQUE ("sopInstanceUid")
);

-- Stores DICOM Grayscale Softcopy Presentation State (GSPS) objects.
CREATE TABLE "PresentationState" (
    "presentationStateId" UUID PRIMARY KEY,
    "seriesId" UUID NOT NULL,
    "sopInstanceUid" VARCHAR(128) NOT NULL,
    "filePath" TEXT NOT NULL,
    "createdByUserid" UUID NOT NULL,
    "createdAt" TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT uq_presentationstate_sopinstanceuid UNIQUE ("sopInstanceUid")
);

-- Records all significant system and user actions. Partitioned by timestamp.
CREATE TABLE "AuditLog" (
    "auditLogId" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "userId" UUID,
    "eventTimestamp" TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "eventType" VARCHAR(100) NOT NULL,
    "entityName" VARCHAR(100),
    "entityId" VARCHAR(128),
    "details" JSONB,
    "correlationId" UUID
) PARTITION BY RANGE ("eventTimestamp");

-- Key-value store for global application settings.
CREATE TABLE "SystemSetting" (
    "settingKey" VARCHAR(100) PRIMARY KEY,
    "settingValue" TEXT NOT NULL,
    "description" TEXT,
    "updatedAt" TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP
);

-- Stores connection details for remote PACS servers.
CREATE TABLE "PacsConfiguration" (
    "pacsConfigurationId" UUID PRIMARY KEY,
    "aeTitle" VARCHAR(16) NOT NULL,
    "hostname" VARCHAR(255) NOT NULL,
    "port" INTEGER NOT NULL,
    "supportsCFind" BOOLEAN NOT NULL DEFAULT true,
    "supportsCMove" BOOLEAN NOT NULL DEFAULT true,
    "supportsCStore" BOOLEAN NOT NULL DEFAULT true,
    "createdAt" TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP
);

-- Defines rules for automatically routing incoming studies.
CREATE TABLE "AutoRoutingRule" (
    "autoRoutingRuleId" UUID PRIMARY KEY,
    "ruleName" VARCHAR(100) NOT NULL,
    "criteria" JSONB NOT NULL,
    "destinationPath" TEXT NOT NULL,
    "priority" INTEGER NOT NULL DEFAULT 0,
    "isEnabled" BOOLEAN NOT NULL DEFAULT true,
    "createdAt" TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP
);

-- Represents a print job in the processing queue.
CREATE TABLE "PrintJob" (
    "printJobId" UUID PRIMARY KEY,
    "submittedByUserId" UUID NOT NULL,
    "jobPayload" JSONB NOT NULL,
    "status" VARCHAR(20) NOT NULL DEFAULT 'Queued',
    "printerName" VARCHAR(255) NOT NULL,
    "failureReason" TEXT,
    "priority" INTEGER NOT NULL DEFAULT 0,
    "submittedAt" TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "processedAt" TIMESTAMPTZ
);

-- Tracks active user sessions.
CREATE TABLE "UserSession" (
    "userSessionId" UUID PRIMARY KEY,
    "userId" UUID NOT NULL,
    "loginTimestamp" TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "lastActivityTimestamp" TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "ipAddress" VARCHAR(45),
    "isActive" BOOLEAN NOT NULL DEFAULT true
);

-- Stores user-defined or system-wide display layouts (hanging protocols).
CREATE TABLE "HangingProtocol" (
    "hangingProtocolId" UUID PRIMARY KEY,
    "protocolName" VARCHAR(100) NOT NULL,
    "userId" UUID,
    "layoutDefinition" JSONB NOT NULL,
    "criteria" JSONB,
    "createdAt" TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP
);

-- Key-value store for user-specific preferences.
CREATE TABLE "UserPreference" (
    "userId" UUID NOT NULL,
    "preferenceKey" VARCHAR(100) NOT NULL,
    "preferenceValue" TEXT NOT NULL,
    "updatedAt" TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY ("userId", "preferenceKey")
);

-- =============================================
-- FOREIGN KEY CONSTRAINTS
-- =============================================

ALTER TABLE "User" ADD CONSTRAINT fk_user_role FOREIGN KEY ("roleId") REFERENCES "Role" ("roleId") ON DELETE Restrict ON UPDATE Cascade;
ALTER TABLE "PasswordHistory" ADD CONSTRAINT fk_pwdhistory_user FOREIGN KEY ("userId") REFERENCES "User" ("userId") ON DELETE Cascade ON UPDATE Cascade;
ALTER TABLE "Study" ADD CONSTRAINT fk_study_patient FOREIGN KEY ("patientId") REFERENCES "Patient" ("patientId") ON DELETE Cascade ON UPDATE Cascade;
ALTER TABLE "Series" ADD CONSTRAINT fk_series_study FOREIGN KEY ("studyId") REFERENCES "Study" ("studyId") ON DELETE Cascade ON UPDATE Cascade;
ALTER TABLE "Image" ADD CONSTRAINT fk_image_series FOREIGN KEY ("seriesId") REFERENCES "Series" ("seriesId") ON DELETE Cascade ON UPDATE Cascade;
ALTER TABLE "PresentationState" ADD CONSTRAINT fk_presstate_series FOREIGN KEY ("seriesId") REFERENCES "Series" ("seriesId") ON DELETE Cascade ON UPDATE Cascade;
ALTER TABLE "PresentationState" ADD CONSTRAINT fk_presstate_user FOREIGN KEY ("createdByUserid") REFERENCES "User" ("userId") ON DELETE Set Null ON UPDATE Cascade;
ALTER TABLE "AuditLog" ADD CONSTRAINT fk_auditlog_user FOREIGN KEY ("userId") REFERENCES "User" ("userId") ON DELETE Set Null ON UPDATE Cascade;
ALTER TABLE "PrintJob" ADD CONSTRAINT fk_printjob_user FOREIGN KEY ("submittedByUserId") REFERENCES "User" ("userId") ON DELETE Set Null ON UPDATE Cascade;
ALTER TABLE "UserSession" ADD CONSTRAINT fk_usersession_user FOREIGN KEY ("userId") REFERENCES "User" ("userId") ON DELETE Cascade ON UPDATE Cascade;
ALTER TABLE "HangingProtocol" ADD CONSTRAINT fk_hangprotocol_user FOREIGN KEY ("userId") REFERENCES "User" ("userId") ON DELETE Cascade ON UPDATE Cascade;
ALTER TABLE "UserPreference" ADD CONSTRAINT fk_userpref_user FOREIGN KEY ("userId") REFERENCES "User" ("userId") ON DELETE Cascade ON UPDATE Cascade;

-- =============================================
-- INDEXES
-- =============================================

CREATE INDEX idx_passwordhistory_user_created ON "PasswordHistory" ("userId", "createdAt" DESC);
CREATE INDEX idx_patient_name_gin_trgm ON "Patient" USING GIN ("patientName" gin_trgm_ops);
CREATE INDEX idx_patient_dicompatientid_gin_trgm ON "Patient" USING GIN ("dicomPatientId" gin_trgm_ops);
CREATE INDEX idx_study_patient_date ON "Study" ("patientId", "studyDate" DESC);
CREATE INDEX idx_series_modality ON "Series" ("modality");
CREATE INDEX idx_image_series_instance ON "Image" ("seriesId", "instanceNumber" ASC);
CREATE INDEX idx_image_active ON "Image" ("seriesId") WHERE "isDeleted" = false;
CREATE INDEX idx_auditlog_user_timestamp ON "AuditLog" ("userId", "eventTimestamp" DESC);
CREATE INDEX idx_auditlog_event_timestamp ON "AuditLog" ("eventType", "eventTimestamp" DESC);
CREATE INDEX idx_auditlog_correlationid ON "AuditLog" ("correlationId");
CREATE INDEX idx_autoroutingrule_criteria_gin ON "AutoRoutingRule" USING GIN ("criteria");
CREATE INDEX idx_printjob_polling ON "PrintJob" ("status", "priority" DESC, "submittedAt" ASC);
