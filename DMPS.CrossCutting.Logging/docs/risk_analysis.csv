risk_id,risk_category,risk_description,probability,impact,risk_score,priority_level,affected_tasks,root_cause,mitigation_strategy,contingency_plan,monitoring_trigger,owner,due_date,status
RISK-TEC-001,Technical,"The implementation of the GPU-accelerated DICOM rendering pipeline using DirectX via Vortice.Windows is exceptionally complex. Issues with performance, driver compatibility, memory leaks, or shader bugs could severely delay or compromise the core viewer functionality.",5,5,25,Critical,"WI-033, WI-036, WI-037, EPIC-006",High technical complexity of low-level graphics programming requires a rare and specialized skillset.,"[Preventive] Assign the task to a developer with proven DirectX/D3D experience. [Preventive] Develop a proof-of-concept (PoC) early to validate the rendering approach and performance before committing to the full implementation. [Detective] Implement GPU performance monitoring and memory profiling from the start.",Simplify the feature set (e.g., fall back to a slower, software-based renderer for basic functionality) or hire an external specialist contractor to implement the rendering component.,PoC fails to meet performance benchmarks or introduces graphical artifacts on target hardware. Initial implementation consumes more than 20% of the estimated time for EPIC-006.,Tech Lead,Start of EPIC-006,Identified
RISK-RES-001,Resource,"There is a significant risk that the development team lacks the specialized skills required for low-level DirectX programming (WI-033) and deep DICOM standards knowledge for GSPS (WI-039) and C-STORE SCP (WI-029) implementation.",4,5,20,High,"WI-033, WI-039, WI-029, EPIC-006, EPIC-005",Project requirements involve niche and highly specialized technology domains not common in typical application development.,"[Preventive] Conduct a formal skills assessment of the development team against the project's technology stack. [Preventive] Allocate a budget for specialized training or hiring an external consultant/contractor for the high-risk components.","Engage a third-party development firm specializing in medical imaging to build the viewer component. Descope advanced features like custom annotations if GSPS expertise is unavailable.",Developer velocity on DirectX or DICOM-heavy tasks is less than 50% of the estimate after the first sprint. The PoC for WI-033 is delayed by more than two weeks.,Project Manager,Start of Project,Identified
RISK-TEC-002,Technical,"The MSIX installer may lack the necessary permissions to reliably install, configure, and set recovery options for a Windows Service, especially in locked-down corporate environments. This could lead to failed deployments.",4,4,16,High,"WI-060, EPIC-010",MSIX technology has inherent limitations regarding system-level modifications and elevation of privileges compared to traditional installers like WiX or Inno Setup.,"[Preventive] Create a PoC installer early in the project to test the service installation and configuration script on a target-like machine. [Preventive] Document a manual installation process for the Windows Service as a fallback.","Switch from MSIX to a different installer technology like WiX which provides more control over system services. Provide a PowerShell script for deployment to be run by system administrators.",PoC deployment fails to correctly register or start the service. The installation requires manual UAC prompts that are not acceptable for enterprise deployment.,DevOps Lead,Start of EPIC-010,Identified
RISK-TEC-003,Security,"Incorrect implementation of PHI redaction in Serilog could lead to sensitive patient data being written to log files or the Windows Event Log, causing a major compliance violation (HIPAA).",3,5,15,High,"WI-055, EPIC-009",The complexity of identifying all possible PHI data points in structured logs and ensuring they are consistently masked.,"[Preventive] Implement redaction logic in a single, centralized Serilog enricher/formatter and enforce its use in all log configurations. [Detective] Create a specific suite of unit tests that attempt to log objects containing PHI and assert that the output is redacted. [Detective] Perform manual and automated log reviews during QA cycles.","In case of a breach, immediately disable logging sinks, purge all existing logs from affected systems, and conduct a full security audit. The feature will not be released until redaction is verified.",A QA audit or automated log scan finds any unmasked PHI (e.g., Patient Name, Patient ID) in any log destination.,Security Lead,Start of EPIC-009,Identified
RISK-TEC-004,Technical,"The implementation of the consumer for the DICOM ingestion queue (WI-032) or other critical queues may not be idempotent, leading to duplicate data or inconsistent states if a message is redelivered by RabbitMQ after a processing failure.",4,4,16,High,"WI-032, WI-046, WI-050",Message redelivery is a standard feature of reliable message brokers, and failure to design for it is a common architectural oversight.,"[Preventive] Design all database persistence logic within message consumers to be idempotent (e.g., using `INSERT ... ON CONFLICT` or checking for existence before insertion). [Preventive] Use a unique identifier from the message (e.g., SOP Instance UID) to track processing state.","Develop a cleanup utility to detect and merge/delete duplicate records. If the issue is severe, halt the consumer, manually purge the queue, and redeploy a corrected version.",Integration tests show duplicate database records are created when the same message is processed twice. A message from the DLQ is re-queued and causes data duplication.,Tech Lead,Start of WS-012,Identified
RISK-TEC-005,Technical,"The use of low-level Windows hooks (P/Invoke) for the global user activity monitor (WI-014) can introduce application instability, memory leaks, or crashes if not managed perfectly.",4,3,12,Medium,"WI-014, EPIC-002",Direct interaction with unmanaged Win32 APIs bypasses .NET's memory safety and resource management, making it inherently risky.,"[Preventive] Encapsulate all P/Invoke code within a single, well-tested class. [Preventive] Implement `IDisposable` correctly to ensure hooks are always released. [Detective] Conduct extensive stress testing and long-duration testing (e.g., running the app for 48+ hours) to detect memory leaks or handle exhaustion.","If the custom hook proves unstable, replace it with a less precise but safer polling mechanism (e.g., checking `GetLastInputInfo` on a timer). This may slightly alter the accuracy of the inactivity detection.",Application shows unexplained crashes or a steady increase in memory/GDI handle consumption over a multi-hour test period.,Senior Developer,Start of WS-006,Identified
RISK-EXT-001,External,"The project depends on pre-installed and configured instances of PostgreSQL and RabbitMQ. Incorrect configuration by the end-user's IT department (e.g., wrong version, missing pgcrypto extension, incorrect firewall rules, no durable queues configured) will cause application failure.",4,3,12,Medium,"WI-010, WI-005, WI-059, EPIC-001, EPIC-010",The project has no control over the setup and maintenance of critical external dependencies.,"[Preventive] Create a comprehensive and clear Deployment Guide with a prerequisite checklist and validation steps. [Preventive] The MSIX prerequisite check (WI-059) must be robust and provide clear, actionable error messages. [Detective] The System Health Dashboard (WI-056) must clearly indicate connectivity or configuration issues.","Provide a Docker Compose file that can spin up pre-configured instances of PostgreSQL and RabbitMQ for evaluation or non-production environments. Offer paid professional services for installation and configuration.",The prerequisite check (WI-059) frequently fails during internal testing on misconfigured environments. Early customer feedback indicates installation difficulties.,Project Manager,Start of Project,Identified
RISK-TEC-006,Technical,"A bug in the scheduled data purge task (WI-028) could lead to the accidental deletion of valid, non-expired data, resulting in catastrophic and irreversible data loss.",2,5,10,Medium,"WI-028, EPIC-004",Automated deletion jobs are inherently high-risk, and a flaw in the selection logic (e.g., date comparison, timezone issues) can have a massive impact.,"[Preventive] The purge logic must be extensively unit and integration tested with various date ranges and edge cases. [Preventive] Initially, the job should run in a 'dry run' mode that only logs which studies *would be* deleted. The feature should only be enabled for destructive mode after verification. [Preventive] The deletion query must be simple and heavily scrutinized during code review.","Immediately disable the scheduled task. Restore the database from the last known good backup (as per RPO/RTO). Manually run a corrected script to clean up data.",A 'dry run' report shows unexpected studies in the deletion list. Post-release audit log shows studies being deleted that are newer than the retention policy.,Tech Lead,Start of WI-028,Identified
RISK-QLY-001,Quality,"The performance of the DICOM viewer, especially with large multi-frame series (e.g., CT/MRI), may not meet the specified performance targets (e.g., <3 second load time) on recommended hardware, leading to poor user experience.",3,4,12,Medium,"WI-033, WI-034, REQ-1-077, EPIC-006",Optimizing graphics pipelines involves complex interactions between CPU, GPU, and memory, and performance can be unpredictable across different hardware configurations.,"[Preventive] Define a standard test dataset with large studies to be used for performance benchmarking throughout development. [Detective] Integrate performance profiling (e.g., using PerfView or dotTrace) into the development and QA workflow for the viewer. [Corrective] Optimize rendering shaders and data loading algorithms based on profiling results.","Descope non-essential graphical features. Increase the 'recommended' hardware specification. Implement more aggressive progressive loading (e.g., showing even lower resolution previews initially).",Load times for the standard large test dataset consistently exceed the 3-second target. User interaction (zoom/pan/WWL) is not smooth (below 30 FPS) on target hardware.,QA Lead,Start of EPIC-006,Identified
RISK-TIM-001,Timeline,"The complexity of the DirectX rendering engine (EPIC-006) and other high-complexity tasks (IPC framework, security features) are likely underestimated, leading to significant delays in the project timeline.",4,3,12,Medium,"EPIC-001, EPIC-003, EPIC-006",Over-optimism in estimating tasks that involve deep technical complexity or unfamiliar technologies.,"[Preventive] Re-estimate high-complexity and critical-complexity work items (e.g., WI-033) with a pessimistic multiplier (e.g., 1.5x). [Preventive] Time-box research and PoC phases for high-risk technologies like Vortice.Windows. [Detective] Closely monitor developer velocity and burndown charts, especially for EPIC-006.","Prioritize a Minimum Viable Product (MVP) that includes core functionality but defers complex features (e.g., advanced annotations, customizable print branding). Negotiate a deadline extension with stakeholders based on PoC results.",The DirectX rendering PoC (WI-033) takes more than 150% of its estimated time. Velocity for the first two sprints of EPIC-006 is less than 70% of the planned velocity.,Project Manager,Start of Project,Identified
RISK-TEC-007,Security,"The secure storage and retrieval of secrets from the Windows Credential Manager (WI-021) can be complex to implement correctly, and failure could result in credentials being exposed or the application failing to start.",3,4,12,Medium,"WI-021, EPIC-003",Dependency on an OS-level security feature which may have its own permission models or API intricacies.,"[Preventive] Encapsulate all interaction with the Credential Manager in a single service. [Preventive] Ensure the installer or first-run configuration logic has a clear process for storing the initial credentials. [Detective] Create integration tests that specifically target the secret storage and retrieval logic.","As a fallback, allow secrets to be stored in an encrypted configuration file using .NET's Data Protection APIs (DPAPI), which is simpler to manage but less secure. This would be a documented deviation from the requirements.",The application fails to connect to the database on a clean machine due to being unable to retrieve the password from the Credential Manager. Integration tests for the SecretsManager service fail intermittently.,Security Lead,Start of WS-008,Identified
RISK-TEC-008,Technical,"The interaction with the native Windows Print API (WI-046) is notoriously brittle and highly dependent on specific printer drivers. This can lead to printing failures, incorrect output, or application crashes that are difficult to debug.",4,3,12,Medium,"WI-046, EPIC-008",The printing subsystem is a complex legacy component of Windows with wide variability in driver quality and behavior.,"[Preventive] Test printing against a wide range of physical and virtual printers (e.g., Microsoft Print to PDF, XPS Document Writer). [Preventive] Instead of directly using System.Drawing for printing, generate a PDF using QuestPDF first and then print the PDF, as PDF printing is often more reliable.","Provide 'Export to PDF' as the primary, most reliable output method. Document known issues with specific printer types. Invest in a commercial printing library if the native API proves too unreliable.",Significant printing bugs (e.g., incorrect margins, image scaling issues, crashes) are reported for more than two different models of printers during QA.,Tech Lead,Start of WS-018,Identified
RISK-EXT-002,External,"The Odoo licensing API (REQ-1-011) could be unavailable or change, causing the application to enter a restricted mode for all users even if they are properly licensed.",3,3,9,Medium,"REQ-1-011, REQ-1-073",Dependency on a third-party, network-based service for a critical function like license validation.,"[Preventive] Implement the 72-hour grace period (REQ-1-073) robustly. [Preventive] Implement a resilient HTTP client with retry logic (e.g., using Polly) for API calls. [Detective] Add a specific status to the Health Dashboard (WI-056) for Odoo API connectivity.","If the API is permanently unavailable, issue a patch that extends the grace period or switches to a temporary manual license key validation method until the API is restored.",The license validation call fails for more than 24 hours during development or testing. The third-party vendor announces a breaking change to the API.,Project Manager,Start of License Feature Dev,Identified
RISK-TEC-009,Technical,"The database transaction and file system operations in the DICOM persistence consumer (WI-032) and data purge task (WI-028) are not atomic together. A failure after the DB commit but before the file move/delete could lead to an inconsistent state (orphaned files or database records).",3,3,9,Medium,"WI-032, WI-028",File system operations cannot be part of a relational database transaction, creating a window for inconsistency.,"[Preventive] Design the logic to be idempotent and recoverable. For example, attempt the file operation first before the DB commit. If that's not possible, write the DB record with a 'pending_file_operation' status, perform the file op, then update the status in a final transaction. [Detective] The data integrity check service (WI-044) is the key detective control for this risk.","Create a manual or semi-automated administrative tool to scan for and fix inconsistencies (e.g., delete DB records for which files are missing, or re-process files for which DB records are missing).",The data integrity check service (WI-044) reports a growing number of discrepancies between the database and the file system.,Tech Lead,Start of WS-012,Identified