task_id,task_name,primary_skill,secondary_skill,complexity_level,estimated_hours,required_experience,team_size,dependencies,critical_path,resource_notes,alternative_approach
TASK-001,"Design and Document Solution Architecture",Backend Development,Software Architecture,Medium,12,Lead,1,"",Yes,"Foundational task defining the entire system structure. Requires a holistic view of .NET Clean Architecture.",Start with a template and document decisions retroactively; higher risk of rework.
TASK-002,"Scaffold .NET 8 Solution and Project Structure",Backend Development,.NET CLI,Low,16,Mid,1,TASK-001,Yes,"Standard scaffolding task. Ensure project references align with the architecture document.",Use a pre-built solution template (e.g., Jason Taylor's Clean Architecture template).
TASK-003,"Install and Configure Core NuGet Packages",Backend Development,NuGet,Low,17,Mid,1,TASK-002,Yes,"Routine dependency management. Pay attention to version compatibility and licensing.",Create a central Directory.Packages.props file for easier version management across the solution.
TASK-004,"Define `IMessageBus` Abstraction and Core Contracts",Backend Development,Software Architecture,Medium,12,Senior,1,TASK-002,Yes,"Critical abstraction for decoupling services. Requires forward-thinking design.",Use a library like MassTransit or NServiceBus which provides these abstractions out-of-the-box.
TASK-005,"Implement Resilient RabbitMQ Connection Manager",Backend Development,RabbitMQ.Client,High,35,Senior,1,TASK-003,Yes,"Complex implementation requiring deep knowledge of RabbitMQ client lifecycle and async/retry patterns.","Use a library with built-in resilience policies, like Polly, to simplify retry logic."
TASK-006,"Implement `RabbitMqPublisher` Service",Backend Development,RabbitMQ.Client,Medium,25,Mid,1,"TASK-004,TASK-005",Yes,"Implements the core message publishing logic. Must correctly handle channel management and message properties.",Use a higher-level abstraction library like MassTransit to handle publishing complexities.
TASK-007,"Implement WPF Application Shell with Generic Host and DI",Frontend Development,WPF,Medium,24,Mid,1,TASK-002,Yes,Establishes the foundational structure for the entire client application.,Use a simpler DI container if Microsoft.Extensions.Hosting proves too heavyweight for the client.
TASK-008,"Implement Windows Service Host with Generic Host",Backend Development,Microsoft.Extensions.Hosting,Medium,20,Mid,1,TASK-002,Yes,Sets up the core background service process and DI container.,Use a more lightweight hosting model like Topshelf if generic host is overly complex for the needs.
TASK-009,"Implement RabbitMQ Topology Configuration Service",DevOps,RabbitMQ,High,33,Senior,1,TASK-005,Yes,"Requires detailed knowledge of RabbitMQ exchanges, queues, and bindings. Critical for system reliability.","Manually configure topology via RabbitMQ management UI for simpler environments, but this is not scalable or repeatable."
TASK-010,"Implement Generic RabbitMQ Consumer Hosted Service",Backend Development,Microsoft.Extensions.Hosting,High,48,Senior,1,"TASK-005,TASK-008",Yes,"Core component for all background processing. Must be robust, handling message acknowledgement and error scenarios gracefully.","Use a library like MassTransit that provides a consumer hosting model, reducing boilerplate code."
TASK-011,"Implement Named Pipe Server in Windows Service",Backend Development,.NET IPC,High,35,Senior,1,TASK-008,Yes,"Requires understanding of multithreading and System.IO.Pipes for low-level inter-process communication.",Use a higher-level IPC mechanism like gRPC or SignalR if Named Pipes prove too complex.
TASK-012,"Implement Named Pipe Client in WPF Application",Frontend Development,.NET IPC,Medium,25,Mid,1,TASK-007,Yes,"Client-side implementation of IPC. Must handle connection failures and timeouts cleanly to avoid locking up the UI.",Use a simple file-based flag system for a less reliable but simpler status check.
TASK-013,"Integration Test: IPC Communication",Quality Assurance,Test Automation,High,48,Senior,1,"TASK-006,TASK-010,TASK-011,TASK-012",Yes,"Complex test setup coordinating multiple processes. Requires Testcontainers for managing RabbitMQ dependency.",Rely on manual end-to-end testing, which is slow and not easily repeatable.
TASK-014,"Define User, Role, PasswordHistory EF Core Entities",Backend Development,EF Core,Low,17,Mid,1,TASK-002,Yes,Standard database entity creation task based on the ERD.,Use a micro-ORM like Dapper for simpler data access if EF Core is not required for other features.
TASK-015,"Configure `DicomAppDbContext` for User Management",Backend Development,EF Core,Low,15,Mid,1,TASK-014,Yes,"Standard EF Core DbContext setup. Attention to detail needed for Fluent API configuration.",Rely on default conventions and data annotations, which provides less control than the Fluent API.
TASK-016,"Generate and Apply Initial User Management DB Migration",DevOps,EF Core,Low,9,Junior,1,TASK-015,Yes,Routine EF Core migration task.,Manage schema changes with raw SQL scripts, which is more error-prone and less maintainable.
TASK-017,"Implement Password Hashing Service using BCrypt.Net-Next",Backend Development,Security,Medium,17,Senior,1,TASK-003,Yes,"Critical security task. Requires careful implementation to avoid vulnerabilities.",Use ASP.NET Core Identity's built-in password hasher, but this may introduce unwanted dependencies.
TASK-018,"Implement `IUserRepository` for Data Access",Backend Development,EF Core,Low,16,Mid,1,TASK-015,Yes,"Standard repository pattern implementation for data abstraction.",Use the DbContext directly in service layers, which tightly couples business logic to the data access technology.
TASK-019,"Implement `AuthenticationService` Business Logic",Backend Development,Security,Medium,24,Senior,1,"TASK-017,TASK-018",Yes,"Core security logic. Must handle all authentication scenarios securely without leaking information.",Use a third-party identity provider (e.g., IdentityServer, Auth0) for more complex authentication needs.
TASK-020,"Implement Central `AuthorizationService`",Backend Development,Software Architecture,Medium,24,Senior,1,TASK-019,Yes,"Core authorization component. Design must be flexible to handle future permission requirements.",Implement authorization checks directly within ViewModels and services, leading to scattered and duplicated logic.
TASK-021,"Create WPF Login View using Material Design",Frontend Development,WPF,Medium,21,Mid,1,TASK-007,Yes,"Standard UI development task. Requires familiarity with the Material Design in XAML Toolkit.",Use default WPF controls for a faster but less polished user interface.
TASK-022,"Implement Login ViewModel Logic",Frontend Development,MVVM,Medium,24,Mid,1,"TASK-019,TASK-021",Yes,"Standard MVVM implementation. Connects the UI to the backend authentication service.",Place logic directly in the View's code-behind, violating MVVM principles and making the code harder to test.
TASK-023,"Create `RoleToVisibilityConverter` for WPF",Frontend Development,WPF,Low,17,Mid,1,TASK-020,Yes,"Common WPF pattern for implementing role-based UI changes.",Control visibility directly from the ViewModel using boolean properties, which can lead to more boilerplate code.
TASK-024,"Write Integration and E2E Tests for Login Flow",Quality Assurance,Test Automation,High,48,Senior,1,TASK-022,Yes,"Requires a combination of database integration testing and UI automation, which can be complex to set up.",Rely solely on manual testing, which is time-consuming and must be repeated for every regression cycle.
TASK-025,"Implement `SecretsManager` Service using Windows Credential Manager",Backend Development,Security,High,48,Senior,1,"",Yes,"Complex and high-risk task involving P/Invoke and Win32 APIs. See RISK-TEC-007.",Store secrets in an encrypted configuration file using .NET DPAPI as a simpler fallback.
TASK-026,"Integrate Secrets Manager into Application Startup",Backend Development,.NET Generic Host,Medium,25,Senior,1,TASK-025,Yes,"Modifies a critical part of the application lifecycle. Must be done carefully to ensure the application starts reliably.",Store the full connection string in appsettings.json, which is a major security risk.
TASK-027,"Implement `UserManagementService` in Application Layer",Backend Development,Business Logic,High,48,Senior,1,"TASK-017,TASK-018,TASK-054",No,"Centralizes all user management business logic. Complex due to coordinating multiple services (repo, hasher, audit).",Implement user management logic directly in API controllers or ViewModels, leading to poor separation of concerns.
TASK-028,"Implement Backend Authorization Guards in Application Services",Backend Development,Security,Medium,33,Senior,1,TASK-020,Yes,"Critical security task to prevent unauthorized API access. Requires systematic application across all sensitive methods.","Rely only on hiding UI elements, which is insecure and can be bypassed by a malicious user."
TASK-029,"Apply RBAC Controls to All UI Views",Frontend Development,WPF,High,48,Mid,1,TASK-023,No,"Time-consuming task that touches a large portion of the UI codebase. Requires consistent application of authorization rules.",Manually set visibility/enabled state in code-behind, which is less maintainable and harder to manage.
TASK-030,"Implement Global User Activity Monitor using P/Invoke",Frontend Development,P/Invoke,Critical,48,Senior,1,TASK-007,Yes,"High-risk task using low-level Windows hooks. Potential for application instability. See RISK-TEC-005.",Use a simpler polling mechanism with `GetLastInputInfo`, which is safer but less precise.
TASK-031,"Implement `SessionManager` Service for Inactivity Timeout",Backend Development,Async Programming,Medium,25,Mid,1,TASK-030,Yes,Manages the core session locking timer and state.,Combine this logic into the MainViewModel, but this violates separation of concerns.
TASK-032,"Create WPF Lock Screen View",Frontend Development,WPF,Medium,24,Mid,1,TASK-007,Yes,Standard UI development for a modal overlay.,Use a simple standard WPF dialog instead of a custom overlay for faster implementation.
TASK-033,"Integrate Session Locking into Main Application",Frontend Development,MVVM,Medium,20,Mid,1,"TASK-031,TASK-032",Yes,Connects the session management logic to the main application UI.,Trigger the lock screen from a global static class, which is a poor architectural pattern.
TASK-034,"Implement Lock Screen ViewModel",Frontend Development,MVVM,Medium,33,Mid,1,"TASK-019,TASK-032",Yes,"Handles unlock/logout logic and failed attempt tracking. Involves security-sensitive operations.",Place logic in the lock screen's code-behind, making it difficult to unit test.
TASK-035,"Implement Audit Logging for Session Events",Backend Development,C#,Medium,24,Mid,1,"TASK-031,TASK-034",No,"Integrates the session management components with the audit service. Depends on the audit service being available.","Do not log session events, which would create a gap in security auditing."
TASK-036,"Design User Management Views and Workflow",Design,UI/UX Design,Medium,24,Mid,1,"",No,"Defines the user experience for a core administrative feature.",Skip formal design and build the UI directly, risking a poor user experience and rework.
TASK-037,"Implement User Management View and ViewModel",Frontend Development,MVVM,High,48,Mid,1,"TASK-027,TASK-036",No,A key administrative screen with multiple user interactions (CRUD commands).,Create separate, non-reusable views for each action, leading to code duplication.
TASK-038,"Implement 'Add/Edit User' Dialog",Frontend Development,MVVM,Medium,32,Mid,1,TASK-037,No,"A reusable component for user data entry. Requires robust validation.",Use simple input prompts which provide a poor user experience and limited validation capabilities.
TASK-039,"Integration Test: User Management Service (CRUD)",Quality Assurance,Test Automation,High,48,Senior,1,TASK-027,No,"Validates the correctness of all user management business logic against a real database.",Rely only on manual UI testing, which is slow and less comprehensive.
TASK-040,"Implement Forced Password Change Workflow",Backend Development,WPF,Medium,33,Senior,1,TASK-019,No,"Modifies the core post-login navigation flow, a sensitive part of the application.",Allow users to bypass the password change, which is a security risk.
TASK-041,"E2E Test: Full User Management Lifecycle",Quality Assurance,Test Automation,High,48,Senior,1,"TASK-037,TASK-038",No,"A complex end-to-end test script that validates a long and critical user workflow.",Perform this complex scenario manually, which is error-prone and time-consuming.
TASK-042,"Create 'Force Change Password' View and ViewModel",Frontend Development,MVVM,High,48,Mid,1,TASK-040,No,"Implements the UI for a critical security workflow. Requires integration with password policy validation.",Use a very basic form with no real-time validation, leading to a frustrating user experience.
TASK-043,"Research and Design pgcrypto Integration with EF Core",Backend Development,Security,High,33,Senior,1,TASK-015,Yes,"Research-heavy task to determine the best and most secure approach for database encryption.",Choose an implementation without research, risking a suboptimal or insecure solution.
TASK-044,"Implement EF Core `ValueConverter` for pgcrypto",Backend Development,EF Core,High,48,Senior,1,TASK-043,Yes,"Complex implementation requiring deep EF Core knowledge and raw SQL. Critical for data-at-rest security.",Perform encryption/decryption manually in the application service layer, which is error-prone.
TASK-045,"Define DICOM Entities and DbContext",Backend Development,EF Core,Medium,24,Mid,1,TASK-015,Yes,Defines the core data model for the application's primary domain.,Use a NoSQL database or store metadata in files, which would be a major architectural shift.
TASK-046,"Generate and Apply DICOM Schema DB Migration",DevOps,EF Core,Low,9,Junior,1,TASK-045,Yes,Routine EF Core migration task.,Manage schema changes with raw SQL scripts.
TASK-047,"Apply Encryption Converter to all PHI Entity Properties",Backend Development,EF Core,Medium,24,Senior,1,"TASK-044,TASK-045",Yes,"Security-critical task. Requires a systematic review of the data model to identify all PHI.",Forget to encrypt a PHI field, leading to a major data leak and compliance violation.
TASK-048,"Integration Test: Data at Rest Encryption",Quality Assurance,Security,High,33,Senior,1,TASK-047,Yes,"Validates that data is actually encrypted in the database. Requires raw database access to verify.",Trust that the implementation works without verification, which is a major security risk.
TASK-049,"Implement fo-dicom C-STORE SCP Service",Backend Development,DICOM,High,48,Senior,1,TASK-003,Yes,"Requires specialized knowledge of the DICOM standard and the fo-dicom library. See RISK-RES-001.",Build a custom DICOM listener from scratch, which would be extremely time-consuming and complex.
TASK-050,"Integrate SCP Listener into Windows Service Host",Backend Development,Microsoft.Extensions.Hosting,Medium,24,Mid,1,"TASK-008,TASK-049",Yes,Integrates the DICOM server into the main service lifecycle.,Run the DICOM listener as a separate, unmanaged process, making it harder to monitor and control.
TASK-051,"Implement Decoupled Metadata Extraction and Queuing",Backend Development,RabbitMQ,High,33,Senior,1,"TASK-006,TASK-049",Yes,"Core architectural pattern for ingestion. Must be reliable to prevent data loss.",Write directly to the database from the SCP handler, which would be slow and brittle under load.
TASK-052,"Implement DICOM Metadata Persistence Consumer",Backend Development,EF Core,High,48,Senior,1,"TASK-010,TASK-045,TASK-051",Yes,"Complex consumer logic that must be idempotent to prevent data duplication. See RISK-TEC-004.",Make the consumer non-idempotent, risking duplicate data on message redelivery.
TASK-053,"Implement Permanent File Storage Logic",Backend Development,File I/O,Medium,25,Mid,1,TASK-052,Yes,"Handles file system operations. Must be robust against I/O errors and race conditions. See RISK-TEC-009.",Leave files in a single flat directory, which would have poor performance with many files.
TASK-054,"E2E Test: DICOM C-STORE Ingestion Pipeline",Quality Assurance,Test Automation,Critical,57,Senior,1,TASK-053,Yes,"A very complex test verifying the entire asynchronous ingestion flow from network to database and filesystem.",Rely on manual testing with a third-party DICOM tool, which is hard to automate and repeat.
TASK-055,"Implement `PasswordPolicyService`",Backend Development,Business Logic,Medium,33,Senior,1,TASK-016,No,Implements security-critical validation logic for password changes.,Place validation logic directly in ViewModels, leading to duplicated and inconsistent rule enforcement.
TASK-056,"Create Password Policy Configuration View and ViewModel",Frontend Development,MVVM,Medium,33,Mid,1,TASK-055,No,Provides the administrative UI for a key security feature.,Hard-code the password policy, making it impossible for administrators to adjust to new security standards.
TASK-057,"Implement PACS Configuration CRUD Service",Backend Development,fo-dicom,Medium,33,Senior,1,TASK-016,No,"Combines database CRUD with DICOM C-ECHO network calls, requiring both skill sets.",Do not provide a verification (C-ECHO) feature, forcing admins to test connectivity manually.
TASK-058,"Create PACS Configuration View and ViewModel",Frontend Development,MVVM,High,48,Mid,1,TASK-057,No,"Administrative UI for managing a list of external system integrations.",Require administrators to configure PACS connections in a text or JSON file, which is error-prone.
TASK-059,"Create Data Retention Policy View and ViewModel",Frontend Development,MVVM,Medium,24,Mid,1,"",No,Simple UI for a high-impact, destructive background process.,Hard-code the data retention period, offering no flexibility.
TASK-060,"Implement Scheduled Data Purge Hosted Service",Backend Development,Microsoft.Extensions.Hosting,High,33,Senior,1,TASK-059,No,"Scheduled task that queries for and identifies data for deletion. Logic must be flawless to prevent accidental data loss.",Require manual execution of a data purge script, which is not a reliable long-term strategy.
TASK-061,"Define AuditLog Entity and DbContext",Backend Development,EF Core,Low,17,Mid,1,TASK-015,Yes,Defines the data structure for the critical audit trail.,Log audits to a text file, which is not secure, structured, or easily queryable.
TASK-062,"Implement `IAuditService` and `DatabaseAuditService`",Backend Development,EF Core,High,48,Senior,1,TASK-061,Yes,"A core, cross-cutting service used by many other features. Must be transactional and performant.",Have each service write its own audit logs directly to the database, leading to massive code duplication.
TASK-063,"Create Audit Trail View and ViewModel",Frontend Development,MVVM,High,48,Mid,1,TASK-062,No,"UI for a critical security feature. Must support filtering and exporting large amounts of data.",Provide no UI for the audit trail, forcing admins to query the database directly.
TASK-064,"Implement Serilog Enricher for PHI Redaction",Backend Development,Serilog,High,33,Senior,1,"",Yes,"Critical security task to prevent PHI leaks in logs. See RISK-TEC-003.",Manually redact PHI in every log message, which is impossible to enforce and will fail.
TASK-065,"Implement Data Purge Deletion and Auditing Logic",Backend Development,EF Core,High,48,Senior,1,"TASK-060,TASK-062",No,"High-risk destructive operation. Must be transactional and auditable. See RISK-TEC-006 and RISK-TEC-009.",Delete data without auditing, making it impossible to investigate accidental deletions.
TASK-066,"Integrate PHI Redaction into Logging Configuration",DevOps,Serilog,Medium,24,Mid,1,TASK-064,Yes,Ensures the redaction logic is applied globally to all log output.,Configure redaction on a per-service basis, risking that a new service is added without it.
TASK-067,"Implement DirectX Rendering Engine Proof-of-Concept",Frontend Development,DirectX,Critical,96,Lead,1,TASK-007,Yes,"Highest technical risk task in the project. Requires rare, specialized skills. See RISK-TEC-001.","Fall back to a slower, software-based renderer (e.g., WPF's WriteableBitmap)."
TASK-068,"Integrate Rendering Engine into a `DicomViewerControl`",Frontend Development,WPF,High,64,Senior,1,TASK-067,Yes,"Encapsulates the complex rendering logic into a reusable WPF component.",Mix rendering logic directly into the main viewer window, making it non-reusable and difficult to maintain.
TASK-069,"Implement Progressive Loading Strategy for Large Series",Frontend Development,Async Programming,High,64,Senior,1,TASK-068,Yes,"Complex performance optimization to keep the UI responsive. Requires careful background thread management.","Load images synchronously, which will freeze the UI for several seconds when opening large studies."
TASK-070,"Implement Thumbnail Panel View and ViewModel",Frontend Development,MVVM,Medium,33,Mid,1,TASK-068,No,Provides essential navigation for multi-image series.,Require users to navigate images sequentially with next/previous buttons, which is inefficient.
TASK-071,"Implement Side-by-Side Comparison View",Frontend Development,WPF,Medium,33,Mid,1,TASK-068,No,A key feature for clinical comparison workflows.,Force users to open two separate instances of the application to compare studies.
TASK-072,"Implement Viewer Synchronization Logic",Frontend Development,WPF,Medium,24,Mid,1,TASK-071,No,Improves usability of the comparison view by linking viewer actions.,Require users to manually synchronize pan/zoom on both viewers, which is tedious and imprecise.
TASK-073,"Implement Image Manipulation Tools (Zoom, Pan, Rotate, Flip)",Frontend Development,WPF,High,64,Senior,1,TASK-068,No,"Implements the core interactive tools for the viewer. Requires efficient handling of mouse input and matrix transforms.",Provide only basic image display with no manipulation tools, severely limiting the viewer's utility.
TASK-074,"Implement Interactive Window/Level (WW/WL) Adjustment",Frontend Development,DirectX,High,48,Senior,1,TASK-067,No,"A critical DICOM viewing feature. Requires real-time updates to the rendering pipeline.",Provide only static WW/WL presets with no interactive adjustment.
TASK-075,"Implement WW/WL Presets",Frontend Development,WPF,Medium,33,Mid,1,TASK-074,No,"Improves usability for common imaging modalities like CT.",Force users to manually set WW/WL values for every image, which is inefficient.
TASK-076,"Implement Drag-and-Drop Import Service",Frontend Development,WPF,High,48,Mid,1,"",No,"Provides a user-friendly way to import local files. Involves file system enumeration and validation.",Provide only a standard 'File -> Open' dialog, which is less convenient for multiple files/folders.
TASK-077,"Implement Local Study Browser View/ViewModel",Frontend Development,MVVM,High,48,Mid,1,TASK-045,Yes,"The main entry point for users to find and open local studies. Requires efficient data binding for potentially large lists.",Force users to browse the file system manually to find and open studies.
TASK-078,"Implement Duplicate Study Import Handling",Backend Development,Business Logic,High,48,Senior,1,TASK-076,No,"Prevents data corruption from accidental duplicate imports. Requires a modal dialog and backend logic.",Silently overwrite or reject duplicates, which could lead to data loss or user confusion.
TASK-079,"Implement Local Study Search Logic",Backend Development,EF Core,Medium,33,Mid,1,TASK-077,No,"A key feature for usability, allowing users to find studies quickly.",Provide no search functionality, forcing users to manually scroll through a potentially huge list.
TASK-080,"Implement Annotation and Measurement Tools (Draw Logic)",Frontend Development,WPF,High,64,Senior,1,TASK-068,No,"Complex UI task involving a drawing canvas, hit-testing, and managing graphical objects.",Provide no annotation capabilities, which is a major feature gap for a clinical viewer.
TASK-081,"Implement DICOM Grayscale Softcopy Presentation State (GSPS) Creation",Backend Development,DICOM,Critical,64,Senior,1,TASK-080,No,"Highly complex task requiring deep knowledge of the DICOM standard to create compliant GSPS objects.",Save annotations in a proprietary, non-standard format, which prevents interoperability.
TASK-082,"Implement GSPS Saving and Loading",Backend Development,fo-dicom,High,48,Senior,1,TASK-081,No,"Handles the persistence and retrieval of annotation data, ensuring they are linked to the correct images.",Do not save annotations, making them ephemeral for the current session only.
TASK-083,"Implement DICOM C-FIND SCU Service",Backend Development,DICOM,High,64,Senior,1,TASK-057,No,"Implements a key DICOM network service for interoperability. Requires knowledge of the C-FIND protocol.",Provide no PACS query functionality, isolating the application from external systems.
TASK-084,"Implement DICOM C-MOVE SCU Service",Backend Development,DICOM,High,48,Senior,1,"TASK-050,TASK-057",No,"Implements the DICOM network service for retrieving studies from a PACS.",Require users to manually export from the PACS and import into the application, which is a poor workflow.
TASK-085,"Create PACS Query/Retrieve View and ViewModel",Frontend Development,MVVM,High,64,Mid,1,"TASK-083,TASK-084",No,"Provides the UI for a complex, asynchronous network workflow. Must provide good user feedback.",Provide a command-line tool for PACS query/retrieve, which would not be user-friendly.
TASK-086,"Implement Print Job Submission Logic",Frontend Development,RabbitMQ,High,48,Mid,1,TASK-006,No,"Implements the client-side part of the asynchronous printing pipeline.",Attempt to print synchronously from the client, which would block and freeze the UI.
TASK-087,"Implement Print Job Consumer and Document Generation",Backend Development,QuestPDF,High,64,Mid,1,TASK-010,No,"Core of the printing feature. Uses a third-party library to create print documents from DICOM data.",Attempt to generate print documents using low-level GDI+ calls, which is extremely complex and error-prone.
TASK-088,"Implement Print Job Spooling via Windows Print API",Backend Development,P/Invoke,High,48,Senior,1,TASK-087,No,"High-risk task interacting with the brittle native Windows Print API. See RISK-TEC-008.","Generate a PDF and shell-execute it to ask the user to print it manually, which is a clunky workflow."
TASK-089,"Implement Print Queue View and ViewModel",Frontend Development,MVVM,High,48,Mid,1,"",No,"Provides users visibility into the status of their background print jobs.",Provide no print queue, leaving users to guess whether their print job succeeded or failed.
TASK-090,"Implement Print Queue Management Logic",Backend Development,Business Logic,Medium,33,Mid,1,TASK-089,No,"Allows users to cancel or retry print jobs, improving the user experience.",Provide no way to manage jobs, forcing users to re-submit a failed print job from scratch.
TASK-091,"Implement Print Preview UI and Layout Controls",Frontend Development,MVVM,High,64,Mid,1,"",No,"A complex UI for WYSIWYG print layout configuration.",Print directly with no preview, likely leading to wasted paper and user frustration.
TASK-092,"Implement Drag-and-Drop Image Rearrangement in Preview",Frontend Development,WPF,Medium,33,Mid,1,TASK-091,No,"Adds an intuitive, interactive feature to the print preview.",Force users to accept the default image order or specify it numerically.
TASK-093,"Implement Print Branding and Dynamic Text Overlays",Frontend Development,QuestPDF,Medium,48,Mid,1,TASK-091,No,"Adds a professional touch and context to printouts. Requires dynamic data merging.",Provide no branding or overlay options.
TASK-094,"Implement Asynchronous PDF Export",Frontend Development,RabbitMQ,High,48,Mid,1,TASK-091,No,Offloads a potentially slow operation to a background service to keep the UI responsive.,Generate the PDF synchronously on the client, freezing the UI for the duration.
TASK-095,"Implement PDF Generation Consumer",Backend Development,QuestPDF,High,48,Senior,1,TASK-094,No,"Implements the backend PDF generation, including security features like encryption.",Do not support PDF export, only physical printing.
TASK-096,"Implement SMTP Configuration UI and Service",Backend Development,SMTP,Medium,48,Mid,1,"",No,"Provides the backbone for all email-related features.",Require users to save files and attach them to an email using their own desktop client.
TASK-097,"Implement 'Send Email' Feature in Print Preview",Frontend Development,WPF,Medium,48,Mid,1,TASK-096,No,"Integrates email functionality directly into the user's workflow, improving efficiency.",Do not provide any in-app email functionality.
TASK-098,"Implement Unsecured PHI Email Warning",Backend Development,Security,High,33,Senior,1,TASK-097,No,"A critical compliance feature to prevent accidental PHI leaks over unsecure channels.",Allow users to email PHI without any warning, creating a major compliance risk.
TASK-099,"Implement System Health Monitoring Hosted Service",Backend Development,Microsoft.Extensions.Hosting,High,48,Senior,1,"",No,"Provides real-time visibility into the system's operational status for administrators.",Have no health monitoring, forcing admins to manually check each component to diagnose problems.
TASK-100,"Implement System Health Dashboard UI",Frontend Development,MVVM,High,48,Mid,1,TASK-099,No,"Presents complex system status information in an easily digestible format for administrators.",Provide health status only in log files, making it hard to get a quick overview.
TASK-101,"Implement Email Alerting Logic",Backend Development,SMTP,Medium,33,Senior,1,TASK-096,No,"Provides proactive notification of critical system issues.",Require admins to constantly monitor the dashboard or logs to detect problems.
TASK-102,"Implement Alert Triggers for DLQ and Health Thresholds",Backend Development,C#,Medium,48,Senior,1,"TASK-099,TASK-101",No,"Connects the monitoring services to the alerting service, automating the notification process.",Rely on manual administrator intervention to send alerts.
TASK-103,"Implement DICOM Metadata Viewer Panel",Frontend Development,fo-dicom,High,48,Mid,1,"",No,"A key feature for inspecting the full details of a DICOM object.",Provide no way to view detailed DICOM metadata, only basic patient/study info.
TASK-104,"Implement Metadata Search/Filter",Frontend Development,WPF,Medium,33,Mid,1,TASK-103,No,"Improves usability of the metadata viewer, especially for objects with hundreds of tags.",Force users to manually scroll through all tags to find the one they need.
TASK-105,"Create MSIX Installer Package Project",DevOps,MSIX,High,48,Senior,1,"",Yes,"Defines the deployment package for the entire application.",Distribute the application as a .zip file with manual installation instructions, which is unprofessional and error-prone.
TASK-106,"Implement MSIX Extension for Windows Service Installation",DevOps,MSIX,Critical,64,Senior,1,TASK-105,Yes,"Complex and high-risk task due to MSIX limitations with services. See RISK-TEC-002.",Require administrators to manually install and configure the Windows Service via command line.
TASK-107,"Implement Installer Prerequisite Check Logic",DevOps,WPF,High,64,Senior,1,TASK-105,Yes,"Improves installation reliability by validating dependencies upfront. See RISK-EXT-001.",Allow installation to complete with invalid dependencies, leading to an application that fails on first launch.
TASK-108,"Implement 'Working Copy' Logic for Metadata Editing",Backend Development,File I/O,High,64,Senior,1,"",No,"A critical non-functional requirement to ensure original DICOM data integrity.",Edit DICOM files in-place, which is destructive and risks irreversible data corruption.
TASK-109,"Implement DICOM Tag Editing Service",Backend Development,fo-dicom,High,64,Senior,1,"TASK-062,TASK-108",No,"Implements a sensitive, admin-only feature. Must be tightly integrated with the audit service.",Allow tag editing without creating a detailed audit trail, which is a major compliance violation.
TASK-110,"Implement Metadata Anonymization Service",Backend Development,Security,High,64,Senior,1,"",No,"A key feature for creating datasets for research or training while protecting patient privacy.",Provide no anonymization tools, limiting the use of the data.
TASK-111,"Implement Pixel Anonymization (Blackout) Logic",Backend Development,Image Processing,Critical,64,Senior,1,"",No,"A complex feature involving direct manipulation of image pixel data. Requires image processing skills.",Provide no pixel anonymization, making it impossible to remove burned-in PHI from images.
TASK-112,"Implement User Preference Service",Backend Development,EF Core,Medium,48,Mid,1,"",No,"Improves user experience by allowing personalization.",Do not allow users to save preferences, forcing them to re-configure their settings every session.
TASK-113,"Implement UI Theme Switching (Light/Dark/High-Contrast)",Frontend Development,WPF,Medium,64,Mid,1,"",No,"Improves accessibility and user comfort.",Provide only a single, hard-coded UI theme.
TASK-114,"Implement Full Keyboard Navigation and Tooltips",Frontend Development,Accessibility,High,64,Mid,1,"",No,"A critical accessibility feature. Time-consuming as it requires a full audit of the application.",Ignore keyboard navigation, making the application unusable for users with motor disabilities.
TASK-115,"Implement Consistent User Feedback (Progress/Toasts)",Frontend Development,UX,Medium,48,Mid,1,"",No,"Improves usability by keeping the user informed about system status.",Provide no feedback for background operations, leaving the user to wonder if their action was successful.
TASK-116,"Write Deployment Guide",Product Management,Technical Writing,High,64,Mid,2,"TASK-105,TASK-107",No,A critical document for customers to successfully install and use the product.,Provide no deployment documentation, leading to customer frustration and support calls.
TASK-117,"Write Administrator's Guide",Product Management,Technical Writing,Critical,96,Mid,2,"TASK-037,TASK-058,TASK-099",No,A critical document covering all administrative functions required for day-to-day operation.,Provide no admin guide, making it difficult for administrators to manage and maintain the system.
TASK-118,"Integrate & Run Dependency Vulnerability Scan",DevOps,Security Scanning,Medium,32,Senior,1,"",Yes,"An automated security control to mitigate risks from third-party libraries.",Manually check for vulnerabilities, which is not scalable or reliable.
TASK-119,"Perform UAT and Final Bug Fixing",Quality Assurance,Testing,Critical,320,Senior,2,"",Yes,"A buffer for stabilization, user feedback, and fixing high-priority issues before release.",Release without a UAT phase, risking that the product does not meet user expectations or has critical bugs.