Title,Description,Type,Status,Priority,Assignee,Reporter,Due Date,Estimate,Labels,Sprint,Epic,Project,Attachments,Comments,Parent ID,Dependencies,Created At,Updated At,Skills Required
"Design and Document Solution Architecture","Create a markdown document outlining the responsibilities of each project (Core, Application, Infrastructure, etc.) and the dependency flow, ensuring adherence to Clean Architecture principles.","Documentation","Backlog","Critical","techlead@project.com","pm@project.com","",3,"WI-001,Architecture,PLATFORM-001","Sprint 1","Core Application & Service Shell","DICOM Management Platform","","","PLATFORM-001","","2024-01-01 09:00","2024-01-01 09:00","Software Architecture,.NET"
"Scaffold .NET 8 Solution and Project Structure","Use `dotnet new` or Visual Studio templates to create the solution file and all required projects: Core, Application, Infrastructure, Persistence, Client.Wpf, and Service. Configure project references correctly.","Development","Backlog","Critical","devteam@project.com","pm@project.com","",4,"WI-001,Scaffolding,PLATFORM-001","Sprint 1","Core Application & Service Shell","DICOM Management Platform","","","PLATFORM-001","TASK-001","2024-01-01 09:00","2024-01-01 09:00",".NET CLI,Visual Studio"
"Install and Configure Core NuGet Packages","Add all required NuGet packages to the appropriate projects as defined in WI-002, such as Microsoft.Extensions.*, Serilog, EF Core, fo-dicom, RabbitMQ.Client, etc. Resolve any version conflicts.","Development","Backlog","Critical","devteam@project.com","pm@project.com","",4.3,"WI-002,Dependencies,PLATFORM-001","Sprint 1","Core Application & Service Shell","DICOM Management Platform","","","PLATFORM-001","TASK-002","2024-01-01 09:00","2024-01-01 09:00","NuGet,.NET"
"Define `IMessageBus` Abstraction and Core Contracts","In the Application project, define the `IMessageBus` interface and base message contracts. This creates a clean abstraction for the messaging system.","Development","Backlog","High","devteam@project.com","pm@project.com","",3,"WI-003,Architecture,RabbitMQ,PLATFORM-001","Sprint 1","Core Application & Service Shell","DICOM Management Platform","","","PLATFORM-001","TASK-002","2024-01-01 09:00","2024-01-01 09:00","C#,Software Architecture"
"Implement Resilient RabbitMQ Connection Manager","In the Infrastructure project, create a singleton service that manages the connection to the RabbitMQ broker. It must handle initial connection, connection loss, and automatic retries with exponential backoff.","Development","Backlog","High","devteam@project.com","pm@project.com","",8.7,"WI-003,RabbitMQ,Infrastructure,PLATFORM-001","Sprint 1","Core Application & Service Shell","DICOM Management Platform","","","PLATFORM-001","TASK-003","2024-01-01 09:00","2024-01-01 09:00","C#,RabbitMQ.Client,Async Programming"
"Implement `RabbitMqPublisher` Service","Implement the `IMessageBus` interface. This class will use the Connection Manager to get a channel, serialize the message object to JSON, and publish it to the appropriate exchange with correct properties (e.g., persistence).","Development","Backlog","High","devteam@project.com","pm@project.com","",6.3,"WI-003,RabbitMQ,Infrastructure,PLATFORM-001","Sprint 1","Core Application & Service Shell","DICOM Management Platform","","","PLATFORM-001","TASK-004,TASK-005","2024-01-01 09:00","2024-01-01 09:00","C#,RabbitMQ.Client"
"Implement WPF Application Shell with Generic Host and DI","Refactor `App.xaml.cs` to use `Host.CreateDefaultBuilder()` to set up configuration, logging, and dependency injection. Create a basic `MainWindow` and `MainViewModel` and ensure they are resolved and displayed via the DI container on startup.","Development","Backlog","High","devteam@project.com","pm@project.com","",6,"WI-008,WPF,Architecture,PLATFORM-001","Sprint 1","Core Application & Service Shell","DICOM Management Platform","","","PLATFORM-001","TASK-002","2024-01-01 09:00","2024-01-01 09:00","WPF,C#,DI,MVVM"
"Implement Windows Service Host with Generic Host","Create the `Program.cs` entry point for the Service project. Use `Host.CreateDefaultBuilder()` and the `.UseWindowsService()` extension to configure the application as a Windows Service. Set up DI registration for all service-side components.","Development","Backlog","High","devteam@project.com","pm@project.com","",5,"WI-007,WindowsService,Architecture,PLATFORM-001","Sprint 1","Core Application & Service Shell","DICOM Management Platform","","","PLATFORM-001","TASK-002","2024-01-01 09:00","2024-01-01 09:00","C#,Microsoft.Extensions.Hosting,DI"
"Implement RabbitMQ Topology Configuration Service","Create a service that runs on startup to declaratively configure the required RabbitMQ topology. This includes creating exchanges, durable queues, and setting up the dead-letter exchange (DLX) and dead-letter queue (DLQ) bindings for all main processing queues.","Development","Backlog","High","devteam@project.com","pm@project.com","",8.3,"WI-005,RabbitMQ,Configuration,PLATFORM-001","Sprint 1","Core Application & Service Shell","DICOM Management Platform","","","PLATFORM-001","TASK-005","2024-01-01 09:00","2024-01-01 09:00","RabbitMQ,C#"
"Implement Generic RabbitMQ Consumer Hosted Service","Create a base `IHostedService` in the Service project that manages the lifecycle of a RabbitMQ consumer. It should handle connecting, subscribing to a queue, and dispatching messages to a specific message handler.","Development","Backlog","High","devteam@project.com","pm@project.com","",12,"WI-004,RabbitMQ,Infrastructure,PLATFORM-001","Sprint 1","Core Application & Service Shell","DICOM Management Platform","","","PLATFORM-001","TASK-005,TASK-012","2024-01-01 09:00","2024-01-01 09:00","C#,Microsoft.Extensions.Hosting,RabbitMQ.Client"
"Implement Named Pipe Server in Windows Service","In the Service project, implement a background service that creates and listens on a `NamedPipeServerStream`. It should run in a loop, awaiting client connections, reading a simple request string (e.g., 'PING'), and writing a response string (e.g., 'PONG').","Development","Backlog","High","devteam@project.com","pm@project.com","",8.7,"WI-006,IPC,NamedPipes,PLATFORM-001","Sprint 1","Core Application & Service Shell","DICOM Management Platform","","","PLATFORM-001","TASK-012","2024-01-01 09:00","2024-01-01 09:00","C#,.NET IPC,System.IO.Pipes"
"Implement Named Pipe Client in WPF Application","In the Client.Wpf project's Infrastructure layer, create a client class that connects to the Named Pipe server. It should implement a method like `CheckServiceStatusAsync()` that sends 'PING', awaits 'PONG', and handles connection failures and timeouts gracefully.","Development","Backlog","High","devteam@project.com","pm@project.com","",6.3,"WI-006,IPC,NamedPipes,PLATFORM-001","Sprint 1","Core Application & Service Shell","DICOM Management Platform","","","PLATFORM-001","TASK-009","2024-01-01 09:00","2024-01-01 09:00","C#,.NET IPC,System.IO.Pipes"
"Integration Test: IPC Communication","Create an end-to-end integration test that starts both the client and service (or mocks thereof), and verifies the full IPC communication loop: Client uses Named Pipe to check service is up, then publishes a message via RabbitMQ, which is consumed and processed by the service.","Testing","Backlog","High","qateam@project.com","pm@project.com","",12,"IntegrationTest,IPC,PLATFORM-001","Sprint 1","Core Application & Service Shell","DICOM Management Platform","","","PLATFORM-001","TASK-006,TASK-007,TASK-010","2024-01-01 09:00","2024-01-01 09:00","C#,xUnit,Testcontainers"
"Define User, Role, PasswordHistory EF Core Entities","Create the C# POCO classes for `User`, `Role`, and `PasswordHistory` in the Core/Domain project. These classes will map to the database tables and include all properties from the ERD with appropriate data types and navigation properties.","Development","Backlog","Critical","devteam@project.com","pm@project.com","",4.2,"WI-009,EFCore,Database,US-001","Sprint 2","User Authentication & Session Management","DICOM Management Platform","","","US-001","TASK-002","2024-01-01 09:00","2024-01-01 09:00","C#,EF Core"
"Configure `DicomAppDbContext` for User Management","In the Persistence project, create the `DicomAppDbContext`. Add `DbSet` properties for the User, Role, and PasswordHistory entities. Use the Fluent API in `OnModelCreating` to configure constraints, such as the unique index on the `User.username` column.","Development","Backlog","Critical","devteam@project.com","pm@project.com","",3.8,"WI-010,EFCore,Database,US-001","Sprint 2","User Authentication & Session Management","DICOM Management Platform","","","US-001","TASK-014","2024-01-01 09:00","2024-01-01 09:00","C#,EF Core"
"Generate and Apply Initial User Management DB Migration","Use the `dotnet ef migrations add` command to generate the initial database migration for the user management tables. Review the generated script for correctness and apply it to the development database.","Development","Backlog","Critical","devteam@project.com","pm@project.com","",2.2,"WI-010,EFCore,Database,US-001","Sprint 2","User Authentication & Session Management","DICOM Management Platform","","Requires a PostgreSQL developer database to be accessible.","US-001","TASK-015","2024-01-01 09:00","2024-01-01 09:00","EF Core,.NET CLI"
"Implement Password Hashing Service using BCrypt.Net-Next","Create an `IPasswordHasher` interface and a `BCryptPasswordHasher` implementation. The service will encapsulate password hashing and verification logic, making it easy to test and swap if needed.","Development","Backlog","Critical","devteam@project.com","pm@project.com","",4.2,"WI-011,Security,Authentication,US-001","Sprint 2","User Authentication & Session Management","DICOM Management Platform","","","US-001","TASK-003","2024-01-01 09:00","2024-01-01 09:00","C#,Security,BCrypt"
"Implement `IUserRepository` for Data Access","Define the `IUserRepository` interface in the Application layer with methods like `GetUserByUsernameAsync`. Implement the repository in the Persistence layer using EF Core to query the database.","Development","Backlog","Critical","devteam@project.com","pm@project.com","",4,"WI-012,EFCore,Database,US-001","Sprint 2","User Authentication & Session Management","DICOM Management Platform","","","US-001","TASK-015","2024-01-01 09:00","2024-01-01 09:00","C#,EF Core,Repository Pattern"
"Implement `AuthenticationService` Business Logic","Create the core authentication service that orchestrates the login process. It will use the `IUserRepository` to fetch user data and the `IPasswordHasher` to verify the password. It must securely handle all authentication scenarios.","Development","Backlog","Critical","devteam@project.com","pm@project.com","",6,"WI-012,Authentication,BusinessLogic,US-001","Sprint 2","User Authentication & Session Management","DICOM Management Platform","","","US-001","TASK-017,TASK-018","2024-01-01 09:00","2024-01-01 09:00","C#,Security"
"Implement Central `AuthorizationService`","Create an `IAuthorizationService` interface and implementation. This service will be a singleton, initialized with the current user's role upon login. It will provide methods like `IsAdmin()` and `HasPermission(string permission)`.","Development","Backlog","Critical","devteam@project.com","pm@project.com","",6,"WI-017,RBAC,Security,US-002","Sprint 2","Role-Based Access Control (RBAC) & Security","DICOM Management Platform","","","US-002","TASK-019","2024-01-01 09:00","2024-01-01 09:00","C#,Software Architecture"
"Create WPF Login View using Material Design","Develop the `LoginView.xaml` file. Use controls from the Material Design in XAML Toolkit to create a modern UI with fields for username and password, a login button, and an area to display error messages.","Development","Backlog","Critical","devteam@project.com","pm@project.com","",5.2,"WI-013,UI,WPF,US-001","Sprint 2","User Authentication & Session Management","DICOM Management Platform","","","US-001","TASK-011","2024-01-01 09:00","2024-01-01 09:00","WPF,XAML,Material Design"
"Implement Login ViewModel Logic","Create the `LoginViewModel.cs`. It will have bindable properties for username and password, an `ICommand` for the login action, and properties for handling loading states and error messages. The command will invoke the `AuthenticationService`.","Development","Backlog","Critical","devteam@project.com","pm@project.com","",6,"WI-013,ViewModel,WPF,US-001","Sprint 2","User Authentication & Session Management","DICOM Management Platform","","","US-001","TASK-019,TASK-020","2024-01-01 09:00","2024-01-01 09:00","WPF,MVVM,C#"
"Create `RoleToVisibilityConverter` for WPF","Implement a WPF `IValueConverter` that uses the `IAuthorizationService`. The converter will take a parameter (e.g., 'Admin') and return `Visibility.Visible` or `Visibility.Collapsed` based on the current user's permissions.","Development","Backlog","Critical","devteam@project.com","pm@project.com","",4.2,"WI-018,RBAC,UI,US-002","Sprint 2","Role-Based Access Control (RBAC) & Security","DICOM Management Platform","","","US-002","TASK-029","2024-01-01 09:00","2024-01-01 09:00","WPF,XAML,C#"
"Write Integration and E2E Tests for Login Flow","Create a suite of tests to validate the entire login workflow. This includes integration tests for the `AuthenticationService` against a test database, and end-to-end UI tests that simulate a user typing credentials and clicking the login button.","Testing","Backlog","Critical","qateam@project.com","pm@project.com","",12,"Test,Authentication,US-001","Sprint 2","User Authentication & Session Management","DICOM Management Platform","","","US-001","TASK-021","2024-01-01 09:00","2024-01-01 09:00","xUnit,EF Core,Appium,WinAppDriver"
"Implement `SecretsManager` Service using Windows Credential Manager","Create a service that abstracts interaction with the Windows Credential Manager. It will have methods like `GetSecret(string target)` and `SetSecret(string target, string secret)`. This will require P/Invoke calls to `CredRead`, `CredWrite`, etc.","Development","Backlog","Critical","devteam@project.com","pm@project.com","",12,"WI-021,Security,Secrets,US-006","Sprint 2","Role-Based Access Control (RBAC) & Security","DICOM Management Platform","","RISK-TEC-007: Complexity and failure modes of Windows Credential Manager.","US-006","","2024-01-01 09:00","2024-01-01 09:00","C#,P/Invoke,Win32 API,Security"
"Integrate Secrets Manager into Application Startup","Modify the application startup logic in `Program.cs` for both the Client and Service. Instead of reading the full connection string from `appsettings.json`, read the template and use the `SecretsManager` to retrieve the password at runtime to build the final connection string.","Development","Backlog","Critical","devteam@project.com","pm@project.com","",6.3,"WI-021,Security,Secrets,US-006","Sprint 2","Role-Based Access Control (RBAC) & Security","DICOM Management Platform","","","US-006","TASK-037","2024-01-01 09:00","2024-01-01 09:00","C#,.NET Generic Host"
"Implement `UserManagementService` in Application Layer","Create the `IUserManagementService` and implementation. This service will contain the business logic for `CreateUserAsync`, `UpdateUserAsync`, `DeleteUserAsync`, and `ResetPasswordAsync`. It will coordinate the user repository, password hasher, and audit service.","Development","Backlog","High","devteam@project.com","pm@project.com","",12,"WI-023,BusinessLogic,Admin,US-008","Sprint 2","User & System Administration","DICOM Management Platform","","Depends on Audit Service (TASK-198) which will be built in a later sprint. This task focuses on the core user logic.","US-008","TASK-018,TASK-017,TASK-031","2024-01-01 09:00","2024-01-01 09:00","C#,EF Core,Business Logic"
"Implement Backend Authorization Guards in Application Services","Go through all sensitive Application Service methods (e.g., `CreateUserAsync`, `DeleteUserAsync`, `SaveSystemSettingsAsync`). At the beginning of each method, inject `IAuthorizationService` and perform a check. If the user is not authorized, throw an `UnauthorizedAccessException`.","Development","Backlog","Critical","devteam@project.com","pm@project.com","",8.3,"WI-019,RBAC,Security,US-002","Sprint 2","Role-Based Access Control (RBAC) & Security","DICOM Management Platform","","","US-002","TASK-029","2024-01-01 09:00","2024-01-01 09:00","C#"
"Apply RBAC Controls to All UI Views","Review every View and ViewModel in the application. Use the `RoleToVisibilityConverter` or bind `IsEnabled` properties to the `AuthorizationService` to hide or disable controls and navigation elements according to the RBAC rules.","Development","Backlog","Critical","devteam@project.com","pm@project.com","",12,"RBAC,UI,Security,US-002","Sprint 2","Role-Based Access Control (RBAC) & Security","DICOM Management Platform","","This is an ongoing task that will touch many future UI components. This initial task sets up the main navigation and shells.","US-002","TASK-030","2024-01-01 09:00","2024-01-01 09:00","WPF,XAML"
"Implement Global User Activity Monitor using P/Invoke","Create a singleton service that uses P/Invoke to set up low-level Windows keyboard and mouse hooks (`SetWindowsHookEx`). This service will monitor for input events system-wide when the application has focus and raise a C# event on activity.","Development","Backlog","Critical","devteam@project.com","pm@project.com","",12,"WI-014,Security,Session,US-003","Sprint 3","User Authentication & Session Management","DICOM Management Platform","","RISK-TEC-005: Instability from low-level Windows hooks.","US-003","TASK-011","2024-01-01 09:00","2024-01-01 09:00","C#,P/Invoke,Win32 API"
"Implement `SessionManager` Service for Inactivity Timeout","Create a `SessionManager` service that subscribes to the `UserActivityMonitorService`. It will manage a timer that gets reset on every activity event. If the timer elapses (default 15 minutes), it will raise a `SessionLocked` event.","Development","Backlog","Critical","devteam@project.com","pm@project.com","",6.3,"WI-015,Security,Session,US-003","Sprint 3","User Authentication & Session Management","DICOM Management Platform","","","US-003","TASK-023","2024-01-01 09:00","2024-01-01 09:00","C#,Async Programming"
"Create WPF Lock Screen View","Develop the `LockScreenView.xaml`. This view should be a modal overlay that contains a password box, an 'Unlock' button, and a 'Log Out' button. It should display the username of the locked session.","Development","Backlog","Critical","devteam@project.com","pm@project.com","",6,"WI-016,UI,Session,US-004","Sprint 3","User Authentication & Session Management","DICOM Management Platform","","","US-004","TASK-011","2024-01-01 09:00","2024-01-01 09:00","WPF,XAML,Material Design"
"Integrate Session Locking into Main Application","In the main application logic (e.g., `MainViewModel` or `App.xaml.cs`), subscribe to the `SessionManager.SessionLocked` event. When the event is raised, display the `LockScreenView` as a modal overlay.","Development","Backlog","Critical","devteam@project.com","pm@project.com","",5,"WI-015,WI-016,UI,Session,US-003","Sprint 3","User Authentication & Session Management","DICOM Management Platform","","","US-003","TASK-024,TASK-026","2024-01-01 09:00","2024-01-01 09:00","WPF,MVVM,C#"
"Implement Lock Screen ViewModel","Create `LockScreenViewModel.cs` to manage the state of the lock screen. Implement the 'Unlock' command, which will call the `AuthenticationService` to verify the password. Implement the 'Log Out' command. Track the number of failed attempts.","Development","Backlog","Critical","devteam@project.com","pm@project.com","",8.3,"WI-016,ViewModel,Session,US-004","Sprint 3","User Authentication & Session Management","DICOM Management Platform","","","US-004","TASK-019,TASK-026","2024-01-01 09:00","2024-01-01 09:00","WPF,MVVM,C#"
"Implement Audit Logging for Session Events","Inject the `IAuditService` into the `SessionManager` and `LockScreenViewModel`. Log events for 'Session Locked', 'Session Unlocked', 'Session Unlock Failed', and 'Session Terminated (Forced Logout)'.","Development","Backlog","High","devteam@project.com","pm@project.com","",6,"Auditing,Security,Session,US-004","Sprint 3","User Authentication & Session Management","DICOM Management Platform","","Depends on Audit Service (TASK-198) which is defined for a later sprint. This implementation will use a placeholder or mock service until the real one is available.","US-004","TASK-024,TASK-027","2024-01-01 09:00","2024-01-01 09:00","C#"
"Design User Management Views and Workflow","Create wireframes or mockups for the user management section, including the main user list view, the 'Add User' dialog, and the 'Edit User' dialog. Define the user flow for all CRUD operations.","Documentation","Backlog","High","uidesigner@project.com","pm@project.com","",6,"WI-022,UI,Design,US-008","Sprint 3","User & System Administration","DICOM Management Platform","","","US-008","","2024-01-01 09:00","2024-01-01 09:00","UI/UX Design,WPF"
"Implement User Management View and ViewModel","Create the `UserManagementView.xaml` and `UserManagementViewModel.cs`. The view will display a list of users. The ViewModel will fetch the list and expose commands (Add, Edit, Delete, Reset Password) that call the `UserManagementService`.","Development","Backlog","High","devteam@project.com","pm@project.com","",12,"WI-022,UI,Admin,US-008","Sprint 3","User & System Administration","DICOM Management Platform","","","US-008","TASK-039,TASK-040","2024-01-01 09:00","2024-01-01 09:00","WPF,MVVM,XAML"
"Implement 'Add/Edit User' Dialog","Create a reusable dialog view and viewmodel for adding a new user and editing an existing one. The dialog will contain fields for username (read-only when editing), role, and account status.","Development","Backlog","High","devteam@project.com","pm@project.com","",8,"WI-022,UI,Admin,US-008","Sprint 3","User & System Administration","DICOM Management Platform","","","US-008","TASK-041","2024-01-01 09:00","2024-01-01 09:00","WPF,MVVM,XAML"
"Integration Test: User Management Service (CRUD)","Create a suite of integration tests for the `UserManagementService`. These tests will use a test database to verify all CRUD operations and business rule enforcement.","Testing","Backlog","High","qateam@project.com","pm@project.com","",12,"WI-023,Test,Admin,US-009","Sprint 3","User & System Administration","DICOM Management Platform","","","US-009","TASK-040","2024-01-01 09:00","2024-01-01 09:00","C#,xUnit,EF Core,Testcontainers"
"Implement Forced Password Change Workflow","Modify the application's navigation logic post-login. If the authenticated user has the `isTemporaryPassword` flag set, redirect them to a non-dismissible `ChangePasswordView` instead of the `MainWindow`.","Development","Backlog","High","devteam@project.com","pm@project.com","",8.3,"WI-024,Security,Authentication,US-011","Sprint 3","User & System Administration","DICOM Management Platform","","","US-011","TASK-019","2024-01-01 09:00","2024-01-01 09:00","C#,WPF"
"E2E Test: Full User Management Lifecycle","Create an end-to-end test script using Appium/WinAppDriver that covers the full lifecycle of a user: Admin logs in, creates a new Technician user, edits that user's role, resets their password, disables the account, enables it, and finally deletes it.","Testing","Backlog","High","qateam@project.com","pm@project.com","",12,"Test,E2E,Admin,US-010","Sprint 3","User & System Administration","DICOM Management Platform","","","US-010","TASK-042","2024-01-01 09:00","2024-01-01 09:00","C#,Appium,WinAppDriver"
"Create 'Force Change Password' View and ViewModel","Implement the `ChangePasswordView.xaml` and its ViewModel. The view will have fields for new password and confirm password. The ViewModel will validate the input against the configured password policy and call a service to update the password.","Development","Backlog","High","devteam@project.com","pm@project.com","",12,"WI-024,UI,Security,US-011","Sprint 3","User & System Administration","DICOM Management Platform","","Depends on PasswordPolicyService (TASK-047) from a later sprint. Validation will be basic initially.","US-011","TASK-045","2024-01-01 09:00","2024-01-01 09:00","WPF,MVVM,C#"
"Research and Design pgcrypto Integration with EF Core","Investigate the best approach for integrating PostgreSQL's `pgcrypto` with EF Core 8. Options include custom `ValueConverter`s, database interceptors, or computed columns. Document the chosen approach.","Development","Backlog","Critical","devteam@project.com","pm@project.com","",8.3,"WI-020,Security,Encryption,Database,US-006","Sprint 4","Role-Based Access Control (RBAC) & Security","DICOM Management Platform","","","US-006","TASK-015","2024-01-01 09:00","2024-01-01 09:00","EF Core,PostgreSQL,pgcrypto,Security"
"Implement EF Core `ValueConverter` for pgcrypto","Based on the chosen design, implement a generic `ValueConverter` that uses raw SQL with `pgp_sym_encrypt()` and `pgp_sym_decrypt()` to handle encryption and decryption of string properties transparently.","Development","Backlog","Critical","devteam@project.com","pm@project.com","",12,"WI-020,Security,Encryption,US-006","Sprint 4","Role-Based Access Control (RBAC) & Security","DICOM Management Platform","","","US-006","TASK-033","2024-01-01 09:00","2024-01-01 09:00","EF Core,C#,PostgreSQL"
"Define DICOM Entities and DbContext","Define the EF Core entities for `Patient`, `Study`, `Series`, and `Image` in the Core project. Update the `DicomAppDbContext` with the new `DbSet`s and configure relationships using the Fluent API.","Development","Backlog","High","devteam@project.com","pm@project.com","",6,"DICOM,Database,EFCore,US-014","Sprint 4","DICOM C-STORE SCP (Ingestion Pipeline)","DICOM Management Platform","","","US-014","TASK-015","2024-01-01 09:00","2024-01-01 09:00","C#,EF Core"
"Generate and Apply DICOM Schema DB Migration","Use the `dotnet ef migrations add` command to generate a new migration for the DICOM tables. Review the script and apply it to the development database.","Development","Backlog","High","devteam@project.com","pm@project.com","",2.2,"DICOM,Database,EFCore,US-014","Sprint 4","DICOM C-STORE SCP (Ingestion Pipeline)","DICOM Management Platform","","","US-014","TASK-054","2024-01-01 09:00","2024-01-01 09:00","EF Core,.NET CLI"
"Apply Encryption Converter to all PHI Entity Properties","Modify all EF Core entity configurations (e.g., `Patient`, `Study`) that contain PHI. Apply the `PgcryptoValueConverter` to the relevant properties (e.g., `Patient.PatientName`, `Patient.DicomPatientId`).","Development","Backlog","Critical","devteam@project.com","pm@project.com","",6,"WI-020,Security,Encryption,US-006","Sprint 4","Role-Based Access Control (RBAC) & Security","DICOM Management Platform","","","US-006","TASK-034,TASK-054","2024-01-01 09:00","2024-01-01 09:00","EF Core,C#"
"Integration Test: Data at Rest Encryption","Create an integration test that saves an entity with PHI, then uses a raw ADO.NET query to read the encrypted value directly from the database to confirm it's not in plaintext. The test should then use EF Core to read the entity back and assert that the property is correctly decrypted.","Testing","Backlog","Critical","qateam@project.com","pm@project.com","",8.3,"WI-020,Test,Security,US-006","Sprint 4","Role-Based Access Control (RBAC) & Security","DICOM Management Platform","","","US-006","TASK-035","2024-01-01 09:00","2024-01-01 09:00","C#,xUnit,EF Core"
"Implement fo-dicom C-STORE SCP Service","Create a class that implements `Dicom.Network.IDicomServiceProvider` from fo-dicom. This class will handle incoming association requests and specifically the `OnCStoreRequest` event. Received files should be saved to a configurable temporary location.","Development","Backlog","High","devteam@project.com","pm@project.com","",12,"WI-029,DICOM,SCP,US-014","Sprint 4","DICOM C-STORE SCP (Ingestion Pipeline)","DICOM Management Platform","","RISK-RES-001: Potential lack of specialized DICOM skills.","US-014","TASK-003","2024-01-01 09:00","2024-01-01 09:00","C#,fo-dicom,DICOM"
"Integrate SCP Listener into Windows Service Host","Create an `IHostedService` wrapper for the fo-dicom server. The `StartAsync` method will create and start the DICOM server on a configurable port. The `StopAsync` method will shut it down gracefully.","Development","Backlog","High","devteam@project.com","pm@project.com","",6,"WI-030,DICOM,WindowsService,US-014","Sprint 4","DICOM C-STORE SCP (Ingestion Pipeline)","DICOM Management Platform","","","US-014","TASK-012,TASK-056","2024-01-01 09:00","2024-01-01 09:00","C#,Microsoft.Extensions.Hosting,fo-dicom"
"Implement Decoupled Metadata Extraction and Queuing","Modify the `DicomScpService`. In the `OnCStoreRequest` handler, after saving the file, use `fo-dicom` to parse the file and extract key metadata. Create a DTO with this metadata and the temp file path, then publish it as a message to a dedicated RabbitMQ queue. Only after successful publishing should the success response be sent to the SCU.","Development","Backlog","High","devteam@project.com","pm@project.com","",8.3,"WI-031,DICOM,RabbitMQ,US-014","Sprint 4","DICOM C-STORE SCP (Ingestion Pipeline)","DICOM Management Platform","","","US-014","TASK-056,TASK-006","2024-01-01 09:00","2024-01-01 09:00","C#,fo-dicom,RabbitMQ"
"Implement DICOM Metadata Persistence Consumer","Create a message handler for the 'dicom_ingest' queue. This handler will consume the message, use EF Core to perform an upsert for the Patient, Study, Series, and Image records. This operation must be idempotent.","Development","Backlog","High","devteam@project.com","pm@project.com","",12,"WI-032,DICOM,Database,US-014","Sprint 4","DICOM C-STORE SCP (Ingestion Pipeline)","DICOM Management Platform","","RISK-TEC-004: Risk of data duplication if not idempotent.","US-014","TASK-007,TASK-055,TASK-058","2024-01-01 09:00","2024-01-01 09:00","C#,EF Core,PostgreSQL"
"Implement Permanent File Storage Logic","After the database transaction in the persistence consumer is successful, implement the logic to move the DICOM file from the temporary location to its permanent, structured storage path (`[StoragePath]/[PatientID]/[StudyUID]/[SeriesUID]/[SopInstanceUID].dcm`).","Development","Backlog","High","devteam@project.com","pm@project.com","",6.3,"WI-032,DICOM,FileSystem,US-014","Sprint 4","DICOM C-STORE SCP (Ingestion Pipeline)","DICOM Management Platform","","RISK-TEC-009: Risk of inconsistency between DB and file system.","US-014","TASK-059","2024-01-01 09:00","2024-01-01 09:00","C#,File I/O"
"E2E Test: DICOM C-STORE Ingestion Pipeline","Create a full end-to-end test for the ingestion pipeline. The test will use a DICOM toolkit to send a study to the running service. It will then poll the database and filesystem to verify that the metadata was persisted correctly and the file was moved to its permanent location.","Testing","Backlog","High","qateam@project.com","pm@project.com","",14.2,"Test,E2E,DICOM,US-014","Sprint 4","DICOM C-STORE SCP (Ingestion Pipeline)","DICOM Management Platform","","","US-014","TASK-060","2024-01-01 09:00","2024-01-01 09:00","C#,xUnit,DICOM,Testcontainers"
"Implement `PasswordPolicyService`","Create a service that retrieves password policy settings (min length, complexity, etc.) from the `SystemSetting` database table. It will provide a method `ValidatePassword(string password, User user)` that checks a new password against all configured rules, including password history.","Development","Backlog","High","devteam@project.com","pm@project.com","",8.3,"WI-025,Security,BusinessLogic,US-012","Sprint 5","User & System Administration","DICOM Management Platform","","","US-012","TASK-016","2024-01-01 09:00","2024-01-01 09:00","C#,EF Core"
"Create Password Policy Configuration View and ViewModel","Implement a `PasswordPolicyView.xaml` and ViewModel in the Administration section. The UI will have controls for all configurable policy parameters. The ViewModel will load the current settings and save any changes back to the `SystemSetting` table.","Development","Backlog","High","devteam@project.com","pm@project.com","",8.3,"WI-025,UI,Admin,US-012","Sprint 5","User & System Administration","DICOM Management Platform","","","US-012","TASK-047","2024-01-01 09:00","2024-01-01 09:00","WPF,MVVM,C#"
"Implement PACS Configuration CRUD Service","Create a service to manage CRUD operations for `PacsConfiguration` entities in the database. Also, implement the C-ECHO verification logic using `fo-dicom`'s `DicomCEchoRequest`.","Development","Backlog","High","devteam@project.com","pm@project.com","",8.3,"WI-026,DICOM,Admin,US-007","Sprint 5","User & System Administration","DICOM Management Platform","","","US-007","TASK-016","2024-01-01 09:00","2024-01-01 09:00","C#,EF Core,fo-dicom"
"Create PACS Configuration View and ViewModel","Implement the `PacsConfigurationView.xaml` and ViewModel. The UI will show a list of PACS servers and provide buttons for Add, Edit, Delete, and Verify. These actions will be handled by commands in the ViewModel that call the `PacsConfigurationService`.","Development","Backlog","High","devteam@project.com","pm@project.com","",12,"WI-026,UI,Admin,US-007","Sprint 5","User & System Administration","DICOM Management Platform","","","US-007","TASK-049","2024-01-01 09:00","2024-01-01 09:00","WPF,MVVM,C#"
"Create Data Retention Policy View and ViewModel","In the Administration section, implement a simple UI (`DataRetentionView.xaml`) with a numeric input for the retention period (e.g., in days) and a save button. The ViewModel will save this value to the `SystemSetting` table.","Development","Backlog","High","devteam@project.com","pm@project.com","",6,"WI-027,UI,Admin,US-013","Sprint 5","User & System Administration","DICOM Management Platform","","","US-013","","2024-01-01 09:00","2024-01-01 09:00","WPF,MVVM"
"Implement Scheduled Data Purge Hosted Service","In the Windows Service project, create an `IHostedService` that runs on a daily schedule. This service will read the retention policy from the database. It will then query for all studies older than the policy dictates.","Development","Backlog","High","devteam@project.com","pm@project.com","",8.3,"WI-028,WindowsService,DataManagement,US-013","Sprint 5","User & System Administration","DICOM Management Platform","","","US-013","TASK-051","2024-01-01 09:00","2024-01-01 09:00","C#,Microsoft.Extensions.Hosting,EF Core"
"Define AuditLog Entity and DbContext","Create the `AuditLog` entity in the Core project and add it to the `DicomAppAuxDB` context. This will store all audit trail information.","Development","Backlog","High","devteam@project.com","pm@project.com","",4.2,"Auditing,Database,US-028","Sprint 5","Auditing, Logging, and Monitoring","DICOM Management Platform","","This task corresponds to TASK-199 from the hidden breakdown.","US-028","TASK-015","2024-01-01 09:00","2024-01-01 09:00","C#,EF Core"
"Implement `IAuditService` and `DatabaseAuditService`","Create the service responsible for writing audit log entries to the database transactionally.","Development","Backlog","High","devteam@project.com","pm@project.com","",12,"Auditing,BusinessLogic,US-028","Sprint 5","Auditing, Logging, and Monitoring","DICOM Management Platform","","This task corresponds to TASK-198 from the hidden breakdown.","US-028","TASK-199","2024-01-01 09:00","2024-01-01 09:00","C#,EF Core"
"Create Audit Trail View and ViewModel","Implement the UI for Administrators to view, filter, and export the audit trail.","Development","Backlog","High","devteam@project.com","pm@project.com","",12,"UI,Auditing,Admin,US-028","Sprint 5","Auditing, Logging, and Monitoring","DICOM Management Platform","","This task corresponds to TASK-201 from the hidden breakdown.","US-028","TASK-198","2024-01-01 09:00","2024-01-01 09:00","WPF,MVVM,C#"
"Implement Serilog Enricher for PHI Redaction","Create a custom Serilog `ILogEventEnricher` that identifies and masks properties known to contain PHI (e.g., PatientName, PatientID) before the log event is written to any sink.","Development","Backlog","High","devteam@project.com","pm@project.com","",8.3,"Logging,Security,PHI,US-029","Sprint 5","Auditing, Logging, and Monitoring","DICOM Management Platform","","This task corresponds to TASK-202 from the hidden breakdown.","US-029","","2024-01-01 09:00","2024-01-01 09:00","C#,Serilog"
"Implement Data Purge Deletion and Auditing Logic","For each study identified for deletion, the service must perform a transactional operation: delete the associated files from the filesystem, delete the corresponding database records, and write a detailed audit log entry for the deletion.","Development","Backlog","High","devteam@project.com","pm@project.com","",12,"WI-028,DataManagement,Security,US-013","Sprint 5","User & System Administration","DICOM Management Platform","","RISK-TEC-006: Accidental deletion of valid data.","US-013","TASK-052,TASK-198","2024-01-01 09:00","2024-01-01 09:00","C#,EF Core,File I/O"
"Integrate PHI Redaction into Logging Configuration","Configure Serilog in both the Client and Service applications to use the new PHI redaction enricher for all configured log sinks (file, Windows Event Log).","Development","Backlog","High","devteam@project.com","pm@project.com","",6,"Logging,Security,Configuration,US-029","Sprint 5","Auditing, Logging, and Monitoring","DICOM Management Platform","","This task corresponds to TASK-203 from the hidden breakdown.","US-029","TASK-202","2024-01-01 09:00","2024-01-01 09:00","C#,Serilog,.NET Generic Host"
"Implement DirectX Rendering Engine Proof-of-Concept","Create a PoC to validate the core rendering pipeline using Vortice.Windows. This should load a single DICOM image, apply WW/WL, and render it to a WPF control with acceptable performance. This task is crucial for mitigating RISK-TEC-001.","Development","Backlog","Critical","devteam@project.com","pm@project.com","",24,"WI-033,PoC,Rendering,DirectX,US-018","Sprint 6","DICOM Viewer & Tools","DICOM Management Platform","","This task corresponds to TASK-111. High priority to de-risk the project.","US-018","TASK-011","2024-01-01 09:00","2024-01-01 09:00","C#,DirectX,Vortice.Windows,WPF"
"Integrate Rendering Engine into a `DicomViewerControl`","Encapsulate the DirectX rendering logic within a reusable WPF `UserControl`. This control will expose dependency properties for the DICOM image source, WW/WL settings, etc.","Development","Backlog","Critical","devteam@project.com","pm@project.com","",16,"WI-033,Rendering,UI,US-018","Sprint 6","DICOM Viewer & Tools","DICOM Management Platform","","This task corresponds to TASK-112.","US-018","TASK-111","2024-01-01 09:00","2024-01-01 09:00","WPF,DirectX,C#"
"Implement Progressive Loading Strategy for Large Series","Implement the logic to first load and display a downsampled, low-resolution version of an image series for immediate UI feedback, while the full-resolution data is loaded on a background thread.","Development","Backlog","High","devteam@project.com","pm@project.com","",16,"WI-034,Performance,Rendering,US-018","Sprint 6","DICOM Viewer & Tools","DICOM Management Platform","","This task corresponds to TASK-114.","US-018","TASK-112","2024-01-01 09:00","2024-01-01 09:00","C#,Async Programming,WPF"
"Implement Thumbnail Panel View and ViewModel","Create the UI component that displays a scrollable grid of thumbnails for all images in the current series. Clicking a thumbnail should load the corresponding image in the main viewer.","Development","Backlog","High","devteam@project.com","pm@project.com","",8.3,"UI,Viewer,US-020","Sprint 6","DICOM Viewer & Tools","DICOM Management Platform","","This task corresponds to TASK-121.","US-020","TASK-112","2024-01-01 09:00","2024-01-01 09:00","WPF,MVVM,C#"
"Implement Side-by-Side Comparison View","Modify the viewer layout to support displaying two `DicomViewerControl` instances next to each other for comparing two different series.","Development","Backlog","High","devteam@project.com","pm@project.com","",8.3,"UI,Viewer,US-020","Sprint 6","DICOM Viewer & Tools","DICOM Management Platform","","This task corresponds to TASK-122.","US-020","TASK-112","2024-01-01 09:00","2024-01-01 09:00","WPF,XAML"
"Implement Viewer Synchronization Logic","Add the logic to synchronize pan, zoom, and scroll actions between the two viewports when in side-by-side comparison mode and the 'sync' option is enabled.","Development","Backlog","High","devteam@project.com","pm@project.com","",6,"Viewer,BusinessLogic,US-020","Sprint 6","DICOM Viewer & Tools","DICOM Management Platform","","This task corresponds to TASK-123.","US-020","TASK-122","2024-01-01 09:00","2024-01-01 09:00","C#,WPF"
"Implement Image Manipulation Tools (Zoom, Pan, Rotate, Flip)","Add the user interaction logic and UI controls (toolbar buttons) for the standard set of image manipulation tools. This includes mouse handlers for zooming and panning.","Development","Backlog","High","devteam@project.com","pm@project.com","",16,"WI-036,UI,Viewer,US-019","Sprint 7","DICOM Viewer & Tools","DICOM Management Platform","","This task corresponds to TASK-124.","US-019","TASK-112","2024-01-01 09:00","2024-01-01 09:00","WPF,C#"
"Implement Interactive Window/Level (WW/WL) Adjustment","Implement the mouse handler that allows users to adjust the window width and level by dragging the mouse over the image. The rendering engine must update the image in real-time based on these changes.","Development","Backlog","High","devteam@project.com","pm@project.com","",12,"WI-037,UI,Rendering,US-019","Sprint 7","DICOM Viewer & Tools","DICOM Management Platform","","This task corresponds to TASK-125.","US-019","TASK-111","2024-01-01 09:00","2024-01-01 09:00","WPF,DirectX,C#"
"Implement WW/WL Presets","Add a menu or set of buttons for common WW/WL presets (e.g., Lung, Bone). These presets should be configurable and apply the correct WW/WL values to the viewer when selected.","Development","Backlog","High","devteam@project.com","pm@project.com","",8.3,"WI-037,UI,Viewer,US-019","Sprint 7","DICOM Viewer & Tools","DICOM Management Platform","","This task corresponds to TASK-126.","US-019","TASK-125","2024-01-01 09:00","2024-01-01 09:00","WPF,C#"
"Implement Drag-and-Drop Import Service","Create a service that handles the file drop event on the main window. It should recursively enumerate dropped files/folders, validate them as DICOM, and group them by study.","Development","Backlog","High","devteam@project.com","pm@project.com","",12,"WI-042,Import,BusinessLogic,US-016","Sprint 7","DICOM Query/Retrieve SCU & Storage Management","DICOM Management Platform","","This task corresponds to TASK-143.","US-016","","2024-01-01 09:00","2024-01-01 09:00","C#,WPF"
"Implement Local Study Browser View/ViewModel","Create the UI that displays a searchable and sortable list of all DICOM studies stored locally in the database.","Development","Backlog","High","devteam@project.com","pm@project.com","",12,"WI-043,UI,DataManagement,US-017","Sprint 7","DICOM Query/Retrieve SCU & Storage Management","DICOM Management Platform","","This task corresponds to TASK-149.","US-017","TASK-054","2024-01-01 09:00","2024-01-01 09:00","WPF,MVVM,C#"
"Implement Duplicate Study Import Handling","Implement the logic to check if an imported Study Instance UID already exists. If it does, display the modal dialog to the user with the 'Overwrite', 'Discard', and 'Save as New' options and handle their choice.","Development","Backlog","High","devteam@project.com","pm@project.com","",12,"WI-042,Import,BusinessLogic,US-016","Sprint 7","DICOM Query/Retrieve SCU & Storage Management","DICOM Management Platform","","This task corresponds to TASK-145.","US-016","TASK-143","2024-01-01 09:00","2024-01-01 09:00","C#,WPF"
"Implement Local Study Search Logic","Add the backend logic to the study browser to filter studies based on Patient Name, Study Date, and Modality by querying the EF Core context.","Development","Backlog","High","devteam@project.com","pm@project.com","",8.3,"WI-043,Database,BusinessLogic,US-017","Sprint 7","DICOM Query/Retrieve SCU & Storage Management","DICOM Management Platform","","This task corresponds to TASK-150.","US-017","TASK-149","2024-01-01 09:00","2024-01-01 09:00","C#,EF Core"
"Implement Annotation and Measurement Tools (Draw Logic)","Implement the UI logic for drawing various annotations (arrows, text) and measurement lines (length, angle) on a canvas overlaid on the DICOM image.","Development","Backlog","High","devteam@project.com","pm@project.com","",16,"WI-038,UI,Viewer,US-021","Sprint 8","DICOM Viewer & Tools","DICOM Management Platform","","This task corresponds to TASK-128.","US-021","TASK-112","2024-01-01 09:00","2024-01-01 09:00","WPF,C#"
"Implement DICOM Grayscale Softcopy Presentation State (GSPS) Creation","Implement the logic to take the user-drawn annotations and measurements and serialize them into a valid DICOM GSPS object using the fo-dicom library.","Development","Backlog","High","devteam@project.com","pm@project.com","",16,"WI-039,DICOM,GSPS,US-021","Sprint 8","DICOM Viewer & Tools","DICOM Management Platform","","This task corresponds to TASK-130. High complexity due to DICOM standard specifics.","US-021","TASK-128","2024-01-01 09:00","2024-01-01 09:00","C#,fo-dicom,DICOM"
"Implement GSPS Saving and Loading","Implement the functionality to save the newly created GSPS object as a file associated with the original series, and to automatically find and load any existing GSPS files when a study is opened.","Development","Backlog","High","devteam@project.com","pm@project.com","",12,"WI-039,DataManagement,US-021","Sprint 8","DICOM Viewer & Tools","DICOM Management Platform","","This task corresponds to TASK-131.","US-021","TASK-130","2024-01-01 09:00","2024-01-01 09:00","C#,fo-dicom"
"Implement DICOM C-FIND SCU Service","Create a service that uses fo-dicom to construct and send a C-FIND request to a configured remote PACS. It must handle the stream of responses and map them to a list of DTOs.","Development","Backlog","High","devteam@project.com","pm@project.com","",16,"WI-040,DICOM,SCU,US-015","Sprint 8","DICOM Query/Retrieve SCU & Storage Management","DICOM Management Platform","","This task corresponds to TASK-137.","US-015","TASK-049","2024-01-01 09:00","2024-01-01 09:00","C#,fo-dicom,DICOM"
"Implement DICOM C-MOVE SCU Service","Create a service that uses fo-dicom to send a C-MOVE request. It must correctly specify the destination AE Title as the application's own SCP.","Development","Backlog","High","devteam@project.com","pm@project.com","",12,"WI-041,DICOM,SCU,US-015","Sprint 8","DICOM Query/Retrieve SCU & Storage Management","DICOM Management Platform","","This task corresponds to TASK-138.","US-015","TASK-049,TASK-057","2024-01-01 09:00","2024-01-01 09:00","C#,fo-dicom,DICOM"
"Create PACS Query/Retrieve View and ViewModel","Implement the UI for querying a remote PACS. This includes input fields for search criteria, a data grid to display results, and buttons for 'Search' and 'Retrieve'. The UI must remain responsive during network operations.","Development","Backlog","High","devteam@project.com","pm@project.com","",16,"UI,DICOM,US-015","Sprint 8","DICOM Query/Retrieve SCU & Storage Management","DICOM Management Platform","","This task corresponds to TASK-139.","US-015","TASK-137,TASK-138","2024-01-01 09:00","2024-01-01 09:00","WPF,MVVM,C#"
"Implement Print Job Submission Logic","In the client application, implement the logic that serializes the print job details (image references, layout settings, branding) into a message and publishes it to the 'print_jobs' RabbitMQ queue.","Development","Backlog","High","devteam@project.com","pm@project.com","",12,"WI-045,Printing,RabbitMQ,US-022","Sprint 9","Printing & PDF Export Pipeline","DICOM Management Platform","","This task corresponds to TASK-167.","US-022","TASK-006","2024-01-01 09:00","2024-01-01 09:00","C#,RabbitMQ"
"Implement Print Job Consumer and Document Generation","In the Windows Service, create a consumer for the 'print_jobs' queue. This consumer will use QuestPDF to generate a print document based on the job details and the DICOM image data.","Development","Backlog","High","devteam@project.com","pm@project.com","",16,"WI-046,Printing,PDF,US-022","Sprint 9","Printing & PDF Export Pipeline","DICOM Management Platform","","This task corresponds to TASK-169.","US-022","TASK-007","2024-01-01 09:00","2024-01-01 09:00","C#,QuestPDF"
"Implement Print Job Spooling via Windows Print API","After generating the print document, the consumer will interact with the native Windows Print API to send the job to the specified printer's spooler. Error handling for offline printers is critical.","Development","Backlog","High","devteam@project.com","pm@project.com","",12,"WI-046,Printing,WindowsAPI,US-022","Sprint 9","Printing & PDF Export Pipeline","DICOM Management Platform","","RISK-TEC-008: High brittleness of Windows Print API. This task corresponds to TASK-170.","US-022","TASK-169","2024-01-01 09:00","2024-01-01 09:00","C#,P/Invoke"
"Implement Print Queue View and ViewModel","Create the UI for the Print Queue. It will display a list of print jobs for the current user (or all users for Admins) and their status, which is queried from the `PrintJob` table in the database.","Development","Backlog","High","devteam@project.com","pm@project.com","",12,"WI-047,UI,Printing,US-023","Sprint 9","Printing & PDF Export Pipeline","DICOM Management Platform","","This task corresponds to TASK-173.","US-023","","2024-01-01 09:00","2024-01-01 09:00","WPF,MVVM,C#"
"Implement Print Queue Management Logic","Add commands to the Print Queue ViewModel for cancelling a 'Queued' job or retrying a 'Failed' job. These actions will update the job's state in the database or re-queue it.","Development","Backlog","High","devteam@project.com","pm@project.com","",8.3,"WI-047,BusinessLogic,Printing,US-023","Sprint 9","Printing & PDF Export Pipeline","DICOM Management Platform","","This task corresponds to TASK-174.","US-023","TASK-173","2024-01-01 09:00","2024-01-01 09:00","C#"
"Implement Print Preview UI and Layout Controls","Develop the interactive print preview window. This includes a WYSIWYG canvas and UI controls for selecting layouts, orientation, margins, and scaling.","Development","Backlog","High","devteam@project.com","pm@project.com","",16,"WI-048,UI,Printing,US-024","Sprint 9","Printing & PDF Export Pipeline","DICOM Management Platform","","This task corresponds to TASK-176.","US-024","","2024-01-01 09:00","2024-01-01 09:00","WPF,MVVM,XAML"
"Implement Drag-and-Drop Image Rearrangement in Preview","Add the functionality to the print preview canvas that allows users to drag and drop image thumbnails to reorder them within the selected layout grid.","Development","Backlog","High","devteam@project.com","pm@project.com","",8.3,"WI-048,UI,Printing,US-024","Sprint 9","Printing & PDF Export Pipeline","DICOM Management Platform","","This task corresponds to TASK-177.","US-024","TASK-176","2024-01-01 09:00","2024-01-01 09:00","WPF,C#"
"Implement Print Branding and Dynamic Text Overlays","Add UI controls for uploading a logo and adding text fields to the print preview. The rendering logic must support these overlays, including resolving dynamic variables like `[PatientName]`.","Development","Backlog","Medium","devteam@project.com","pm@project.com","",12,"WI-049,Printing,UI,US-025","Sprint 10","Printing & PDF Export Pipeline","DICOM Management Platform","","This task corresponds to TASK-179.","US-025","TASK-176","2024-01-01 09:00","2024-01-01 09:00","WPF,C#"
"Implement Asynchronous PDF Export","Create the client-side logic to request a PDF export by sending a message to a RabbitMQ queue. The message should contain all layout and branding information.","Development","Backlog","High","devteam@project.com","pm@project.com","",12,"WI-050,PDF,RabbitMQ,US-026","Sprint 10","Printing & PDF Export Pipeline","DICOM Management Platform","","This task corresponds to TASK-182.","US-026","TASK-176","2024-01-01 09:00","2024-01-01 09:00","C#,RabbitMQ"
"Implement PDF Generation Consumer","Create a consumer in the background service that processes PDF export requests. It will use QuestPDF to generate the PDF/A-3 compliant file and apply AES-256 password encryption if requested.","Development","Backlog","High","devteam@project.com","pm@project.com","",12,"WI-050,PDF,BusinessLogic,US-026","Sprint 10","Printing & PDF Export Pipeline","DICOM Management Platform","","This task corresponds to TASK-183.","US-026","TASK-182","2024-01-01 09:00","2024-01-01 09:00","C#,QuestPDF,Security"
"Implement SMTP Configuration UI and Service","Create the UI for Administrators to configure SMTP settings. Implement a service that can send emails using these settings.","Development","Backlog","Medium","devteam@project.com","pm@project.com","",12,"WI-051,Email,Admin,US-027","Sprint 10","Printing & PDF Export Pipeline","DICOM Management Platform","","This task corresponds to TASK-185.","US-027","","2024-01-01 09:00","2024-01-01 09:00","WPF,C#,SMTP"
"Implement 'Send Email' Feature in Print Preview","Add the UI to compose an email from the print preview screen, with options to attach the output as PDF or images. Implement the logic to call the email service.","Development","Backlog","Medium","devteam@project.com","pm@project.com","",12,"WI-051,UI,Email,US-027","Sprint 10","Printing & PDF Export Pipeline","DICOM Management Platform","","This task corresponds to TASK-186.","US-027","TASK-185","2024-01-01 09:00","2024-01-01 09:00","WPF,C#"
"Implement Unsecured PHI Email Warning","Add the security check that scans the email subject, body, and attachments for PHI. If found and the attachments are not encrypted, display the modal warning dialog that requires explicit user confirmation to send.","Development","Backlog","High","devteam@project.com","pm@project.com","",8.3,"Security,PHI,Email,US-027","Sprint 10","Printing & PDF Export Pipeline","DICOM Management Platform","","This task corresponds to TASK-188.","US-027","TASK-186","2024-01-01 09:00","2024-01-01 09:00","C#,WPF"
"Implement System Health Monitoring Hosted Service","In the Windows Service, create a background service that periodically checks the status of PostgreSQL, RabbitMQ, and disk space, and caches the results in a thread-safe singleton service.","Development","Backlog","High","devteam@project.com","pm@project.com","",12,"WI-056,Monitoring,WindowsService,US-030","Sprint 10","Auditing, Logging, and Monitoring","DICOM Management Platform","","This task corresponds to TASK-204.","US-030","","2024-01-01 09:00","2024-01-01 09:00","C#,Microsoft.Extensions.Hosting"
"Implement System Health Dashboard UI","In the client, create the `SystemHealthDashboardView` and ViewModel. The ViewModel will use a mechanism (e.g., polling a simple API endpoint on the service, or via Named Pipes) to retrieve the latest health status from the service and display it.","Development","Backlog","High","devteam@project.com","pm@project.com","",12,"WI-056,UI,Monitoring,US-030","Sprint 10","Auditing, Logging, and Monitoring","DICOM Management Platform","","This task corresponds to TASK-205.","US-030","TASK-204","2024-01-01 09:00","2024-01-01 09:00","WPF,MVVM,C#"
"Implement Email Alerting Logic","Create a service that can be triggered by other parts of the system (e.g., the DLQ monitor, the health monitor). This service will use the configured SMTP settings to send a pre-formatted alert email to the admin.","Development","Backlog","Medium","devteam@project.com","pm@project.com","",8.3,"WI-057,Alerting,Email,US-031","Sprint 11","Auditing, Logging, and Monitoring","DICOM Management Platform","","This task corresponds to TASK-207.","US-031","TASK-185","2024-01-01 09:00","2024-01-01 09:00","C#,SMTP"
"Implement Alert Triggers for DLQ and Health Thresholds","Integrate the alerting service. Create a monitor for the DLQ that triggers an alert if the message count > 0. Modify the health monitoring service to trigger an alert if a metric crosses its critical threshold.","Development","Backlog","Medium","devteam@project.com","pm@project.com","",12,"WI-057,Monitoring,Alerting,US-031","Sprint 11","Auditing, Logging, and Monitoring","DICOM Management Platform","","This task corresponds to TASK-208.","US-031","TASK-207,TASK-204","2024-01-01 09:00","2024-01-01 09:00","C#"
"Implement DICOM Metadata Viewer Panel","Create a UI component that displays all DICOM tags from a selected image/series in a grouped, human-readable format.","Development","Backlog","High","devteam@project.com","pm@project.com","",12,"UI,DICOM,Metadata,US-034","Sprint 11","DICOM Viewer & Tools","DICOM Management Platform","","This task corresponds to TASK-133.","US-034","","2024-01-01 09:00","2024-01-01 09:00","WPF,fo-dicom"
"Implement Metadata Search/Filter","Add a search bar to the metadata viewer panel that allows users to filter the tag list by tag name or tag number (e.g., (0010,0010)).","Development","Backlog","High","devteam@project.com","pm@project.com","",8.3,"UI,DICOM,Metadata,US-034","Sprint 11","DICOM Viewer & Tools","DICOM Management Platform","","This task corresponds to TASK-134.","US-034","TASK-133","2024-01-01 09:00","2024-01-01 09:00","WPF,C#"
"Create MSIX Installer Package Project","Add a new Windows Application Packaging Project to the solution to create the MSIX installer. Configure it to include the WPF client application and the Windows Service executable.","Development","Backlog","High","devteam@project.com","pm@project.com","",12,"WI-058,Deployment,MSIX,US-032","Sprint 11","Installation & Deployment","DICOM Management Platform","","This task corresponds to TASK-227.","US-032","","2024-01-01 09:00","2024-01-01 09:00","MSIX,Visual Studio"
"Implement MSIX Extension for Windows Service Installation","Add the necessary declarations to the `Package.appxmanifest` to register and configure the background Windows Service. This includes setting the service name and recovery options.","Development","Backlog","High","devteam@project.com","pm@project.com","",16,"WI-060,Deployment,WindowsService,US-032","Sprint 11","Installation & Deployment","DICOM Management Platform","","RISK-TEC-002: MSIX installer limitations. This task corresponds to TASK-228.","US-032","TASK-227","2024-01-01 09:00","2024-01-01 09:00","MSIX,XML"
"Implement Installer Prerequisite Check Logic","Create a custom installer component or a first-run check in the main application that prompts for and validates the connection to PostgreSQL (including pgcrypto) and RabbitMQ before allowing the application to be fully used.","Development","Backlog","High","devteam@project.com","pm@project.com","",16,"WI-059,Deployment,Validation,US-033","Sprint 11","Installation & Deployment","DICOM Management Platform","","This task corresponds to TASK-229.","US-033","TASK-227","2024-01-01 09:00","2024-01-01 09:00","C#,WPF"
"Implement 'Working Copy' Logic for Metadata Editing","Implement the backend logic that, upon an edit request from an Admin, creates a physical copy of the entire study's DICOM files in a temporary 'working' directory. All subsequent edits will be performed on these copied files.","Development","Backlog","High","devteam@project.com","pm@project.com","",16,"BusinessLogic,DICOM,Metadata,US-035","Sprint 12","DICOM Viewer & Tools","DICOM Management Platform","","This task corresponds to TASK-209.","US-035","","2024-01-01 09:00","2024-01-01 09:00","C#,File I/O"
"Implement DICOM Tag Editing Service","Create a service that allows an authorized Administrator to modify specific DICOM tags in the 'working copy' files using fo-dicom. The service must log every single tag change (old value, new value) to the audit trail.","Development","Backlog","High","devteam@project.com","pm@project.com","",16,"BusinessLogic,DICOM,Auditing,US-035","Sprint 12","DICOM Viewer & Tools","DICOM Management Platform","","This task corresponds to TASK-210.","US-035","TASK-209,TASK-198","2024-01-01 09:00","2024-01-01 09:00","C#,fo-dicom"
"Implement Metadata Anonymization Service","Create a service that creates a new, de-identified copy of a study. It must support different profiles (Basic, Full De-ID) and remove/replace DICOM tags according to the selected profile.","Development","Backlog","High","devteam@project.com","pm@project.com","",16,"BusinessLogic,DICOM,Anonymization,US-036","Sprint 12","DICOM Viewer & Tools","DICOM Management Platform","","This task corresponds to TASK-215.","US-036","","2024-01-01 09:00","2024-01-01 09:00","C#,fo-dicom,Security"
"Implement Pixel Anonymization (Blackout) Logic","Implement the logic to permanently burn blackout shapes into the pixel data of a DICOM image. This must create a new DICOM series, leaving the original images untouched.","Development","Backlog","High","devteam@project.com","pm@project.com","",16,"BusinessLogic,DICOM,PixelData,US-036","Sprint 12","DICOM Viewer & Tools","DICOM Management Platform","","This task corresponds to TASK-219. High complexity.","US-036","","2024-01-01 09:00","2024-01-01 09:00","C#,fo-dicom,Image Processing"
"Implement User Preference Service","Create a service and database table (`UserPreference`) to store user-specific settings, such as default annotation color and custom WW/WL presets.","Development","Backlog","Medium","devteam@project.com","pm@project.com","",12,"BusinessLogic,Database,UX,US-037","Sprint 13","DICOM Viewer & Tools","DICOM Management Platform","","This task corresponds to TASK-221.","US-037","","2024-01-01 09:00","2024-01-01 09:00","C#,EF Core"
"Implement UI Theme Switching (Light/Dark/High-Contrast)","Integrate the Material Design in XAML Toolkit's theming capabilities to allow the user to switch between a light, dark, and a custom high-contrast theme at runtime.","Development","Backlog","Medium","devteam@project.com","pm@project.com","",16,"UI,UX,Accessibility,US-038","Sprint 13","DICOM Viewer & Tools","DICOM Management Platform","","This task corresponds to TASK-223.","US-038","","2024-01-01 09:00","2024-01-01 09:00","WPF,Material Design,XAML"
"Implement Full Keyboard Navigation and Tooltips","Perform a full audit of the application to ensure all interactive controls are reachable and operable via the keyboard (Tab, Enter, Space, Arrow keys). Add descriptive tooltips to all buttons and controls.","Development","Backlog","Medium","devteam@project.com","pm@project.com","",16,"UI,Accessibility,US-039","Sprint 13","DICOM Viewer & Tools","DICOM Management Platform","","This task corresponds to TASK-225.","US-039","","2024-01-01 09:00","2024-01-01 09:00","WPF,XAML"
"Implement Consistent User Feedback (Progress/Toasts)","Establish a consistent pattern for user feedback. Use progress indicators for long-running synchronous operations and non-blocking toast notifications for the result of asynchronous background tasks (e.g., 'Print job completed').","Development","Backlog","Medium","devteam@project.com","pm@project.com","",12,"UI,UX,US-040","Sprint 13","DICOM Viewer & Tools","DICOM Management Platform","","This task corresponds to TASK-226.","US-040","","2024-01-01 09:00","2024-01-01 09:00","WPF,C#"
"Write Deployment Guide","Create a comprehensive guide detailing the step-by-step process for installing the application and its prerequisites (PostgreSQL, RabbitMQ), including required configurations.","Documentation","Backlog","High","techwriter@project.com","pm@project.com","",16,"Documentation,Deployment,US-041","Sprint 14","Operations & Release","DICOM Management Platform","","","US-041","US-032,US-033","2024-01-01 09:00","2024-01-01 09:00","Technical Writing"
"Write Administrator's Guide","Create a guide for system administrators covering all day-to-day administrative tasks, such as user management, system configuration, monitoring, and backup/recovery procedures.","Documentation","Backlog","High","techwriter@project.com","pm@project.com","",24,"Documentation,Admin,US-041","Sprint 14","Operations & Release","DICOM Management Platform","","","US-041","US-008,US-007,US-030","2024-01-01 09:00","2024-01-01 09:00","Technical Writing"
"Integrate & Run Dependency Vulnerability Scan","Integrate an automated dependency vulnerability scanner (e.g., OWASP Dependency-Check) into the CI/CD pipeline to identify and report on known vulnerabilities in third-party libraries.","Development","Backlog","High","devops@project.com","pm@project.com","",8,"Security,CI-CD,REQ-1-085","Sprint 14","Role-Based Access Control (RBAC) & Security","DICOM Management Platform","","","REQ-1-085","","2024-01-01 09:00","2024-01-01 09:00","CI/CD,Security Scanning"
"Perform UAT and Final Bug Fixing","Allocate time for User Acceptance Testing (UAT) with stakeholders and address any high-priority bugs discovered during the final hardening phase.","Testing","Backlog","Critical","qateam@project.com","pm@project.com","",80,"UAT,Hardening,Bugfix","Sprint 14","Operations & Release","DICOM Management Platform","","This is a buffer task for stabilization.","","","2024-01-01 09:00","2024-01-01 09:00","QA,Testing"