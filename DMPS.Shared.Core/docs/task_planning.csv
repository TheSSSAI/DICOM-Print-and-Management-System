Title,Description,Type,Status,Priority,Assignee,Reporter,Due Date,Estimate,Labels,Sprint,Epic,Project,Attachments,Comments,Parent ID,Dependencies,Created At,Updated At,Skills Required
"Initialize .NET Solution and Project Structure","Use the .NET CLI to create the solution (.sln) and the four core projects (Service, Application, Domain, Infrastructure), establishing the Clean Architecture foundation.","Task","Backlog","Highest","backend-dev@project.com","pm@project.com","",3.2,"Setup,Architecture,EPIC-001,US-001","Sprint 1","EPIC-001: Core Service Architecture & Communication","DICOM Management Platform Service","","","US-001","","2024-01-01 09:00","2024-01-01 09:00",".NET CLI,C#"
"Implement .NET Generic Host for Windows Service","Configure Program.cs to use Microsoft.Extensions.Hosting with the `UseWindowsService()` extension. Set up the basic DI container and configuration loading from `appsettings.json`.","Task","Backlog","Highest","backend-dev@project.com","pm@project.com","",4.2,"Host,Configuration,EPIC-001,US-001","Sprint 1","EPIC-001: Core Service Architecture & Communication","DICOM Management Platform Service","","","US-001","TASK-001","2024-01-01 09:00","2024-01-01 09:00",".NET 8,C# 12,Windows Services"
"Implement Serilog PHI Redaction Enricher","Create a custom Serilog `ILogEventEnricher` that uses regular expressions to find and mask known PHI patterns (e.g., Patient Name, Patient ID) in log messages before they are written.","Task","Backlog","Highest","backend-dev@project.com","pm@project.com","",6.3,"Logging,Security,HIPAA,EPIC-001,US-001","Sprint 1","EPIC-001: Core Service Architecture & Communication","DICOM Management Platform Service","","This is a high-risk task due to compliance requirements.","US-001","TASK-002","2024-01-01 09:00","2024-01-01 09:00","Serilog,C#,Regex"
"Configure Serilog Sinks for File and Windows Event Log","Add and configure the Serilog sinks for writing to a rolling text file and the Windows Event Log. Ensure the PHI enricher is applied to both sinks.","Task","Backlog","Highest","backend-dev@project.com","pm@project.com","",3.2,"Logging,Configuration,EPIC-001,US-001","Sprint 1","EPIC-001: Core Service Architecture & Communication","DICOM Management Platform Service","","","US-001","TASK-003","2024-01-01 09:00","2024-01-01 09:00","Serilog,C#"
"Write Unit Tests for PHI Redaction Enricher","Create a suite of xUnit tests to validate the `PhiRedactionEnricher`. Tests should cover messages with and without PHI, multiple PHI elements in one message, and edge cases.","Task","Backlog","Highest","qa-automation@project.com","pm@project.com","",7.2,"Unit Test,Security,EPIC-001,US-001","Sprint 1","EPIC-001: Core Service Architecture & Communication","DICOM Management Platform Service","","Validation task for WI-002.","US-001","TASK-003","2024-01-01 09:00","2024-01-01 09:00","xUnit,C#"
"Define EF Core Entities for User Management","Create the C# entity classes for User, Role, and PasswordHistory. Annotate them with primary keys, foreign keys, and constraints as defined in the database design.","Task","Backlog","Highest","backend-dev@project.com","pm@project.com","",4.2,"EF Core,Data Model,EPIC-001,US-003","Sprint 1","EPIC-001: Core Service Architecture & Communication","DICOM Management Platform Service","","","US-003","TASK-001","2024-01-01 09:00","2024-01-01 09:00","EF Core 8,C#"
"Define EF Core Entities for DICOM Data","Create the C# entity classes for Patient, Study, Series, Image, and PresentationState. Annotate them with keys, relationships, and unique constraints (e.g., for UIDs).","Task","Backlog","Highest","backend-dev@project.com","pm@project.com","",7.2,"EF Core,Data Model,EPIC-001,US-003","Sprint 1","EPIC-001: Core Service Architecture & Communication","DICOM Management Platform Service","","","US-003","TASK-001","2024-01-01 09:00","2024-01-01 09:00","EF Core 8,C#"
"Define EF Core Entities for System & Configuration","Create the C# entity classes for SystemSetting, PacsConfiguration, AutoRoutingRule, PrintJob, HangingProtocol, and UserPreference.","Task","Backlog","Highest","backend-dev@project.com","pm@project.com","",7.2,"EF Core,Data Model,EPIC-001,US-003","Sprint 1","EPIC-001: Core Service Architecture & Communication","DICOM Management Platform Service","","","US-003","TASK-001","2024-01-01 09:00","2024-01-01 09:00","EF Core 8,C#"
"Implement and Configure DicomAppDbContext","Create the `DicomAppDbContext` class. Add `DbSet` properties for all entities. Configure the connection to PostgreSQL, enable TLS (Npgsql options), and set up mappings in `OnModelCreating`.","Task","Backlog","Highest","backend-dev@project.com","pm@project.com","",8.3,"EF Core,Database,EPIC-001,US-003","Sprint 1","EPIC-001: Core Service Architecture & Communication","DICOM Management Platform Service","","Depends on all entity definitions.","US-003","TASK-011,TASK-012,TASK-013","2024-01-01 09:00","2024-01-01 09:00","EF Core 8,PostgreSQL,C#"
"Implement Generic Repository Pattern","Create a generic `IRepository<T>` interface and a concrete `Repository<T>` class to handle common CRUD operations (Add, GetById, Update, Delete) to abstract the DbContext.","Task","Backlog","Highest","backend-dev@project.com","pm@project.com","",6,"EF Core,Architecture,Repository,EPIC-001,US-003","Sprint 1","EPIC-001: Core Service Architecture & Communication","DICOM Management Platform Service","","","US-003","TASK-014","2024-01-01 09:00","2024-01-01 09:00","EF Core 8,C#"
"Implement Specific Repositories","Create specific repository interfaces and implementations (e.g., `IStudyRepository`, `IUserRepository`) for entities that require complex queries not covered by the generic repository.","Task","Backlog","Highest","backend-dev@project.com","pm@project.com","",8.2,"EF Core,Architecture,Repository,EPIC-001,US-003","Sprint 1","EPIC-001: Core Service Architecture & Communication","DICOM Management Platform Service","","","US-003","TASK-015","2024-01-01 09:00","2024-01-01 09:00","EF Core 8,C#"
"Set up and Create Initial EF Core Migration","Install the `dotnet-ef` tool and the EF Core design package. Run the `migrations add` command to generate the first migration script based on the complete DbContext.","Task","Backlog","Highest","backend-dev@project.com","pm@project.com","",3.3,"EF Core,Migrations,EPIC-001,US-003","Sprint 1","EPIC-001: Core Service Architecture & Communication","DICOM Management Platform Service","","","US-003","TASK-014","2024-01-01 09:00","2024-01-01 09:00","EF Core CLI"
"Write Integration Test to Apply Migration and Verify Schema","Create an integration test that uses Testcontainers for PostgreSQL. The test will start a fresh database, apply the EF Core migrations, and then query the database schema to ensure all expected tables and columns have been created.","Task","Backlog","Highest","qa-automation@project.com","pm@project.com","",8.7,"Integration Test,EF Core,Migrations,EPIC-001,US-003","Sprint 1","EPIC-001: Core Service Architecture & Communication","DICOM Management Platform Service","","","US-003","TASK-017","2024-01-01 09:00","2024-01-01 09:00","Testcontainers,xUnit,EF Core 8"
"Implement RabbitMQ Singleton Connection Manager","Create a thread-safe singleton service to manage a single, persistent connection to the RabbitMQ broker. Implement automatic reconnection logic with exponential backoff.","Task","Backlog","Highest","backend-dev@project.com","pm@project.com","",8.7,"RabbitMQ,Infrastructure,EPIC-001,US-002","Sprint 1","EPIC-001: Core Service Architecture & Communication","DICOM Management Platform Service","","","US-002","TASK-002","2024-01-01 09:00","2024-01-01 09:00","RabbitMQ .NET Client,C#,Multithreading"
"Write Integration Tests for Connection Manager","Using Testcontainers, write integration tests that validate the connection manager's behavior. Tests should cover initial connection, and disconnection/reconnection scenarios.","Task","Backlog","Highest","qa-automation@project.com","pm@project.com","",8.3,"Integration Test,RabbitMQ,EPIC-001,US-002","Sprint 1","EPIC-001: Core Service Architecture & Communication","DICOM Management Platform Service","","","US-002","TASK-006","2024-01-01 09:00","2024-01-01 09:00","Testcontainers,xUnit,Docker"
"Implement Generic Message Publisher Service","Create a scoped service `IMessagePublisher` that uses the connection manager to get a channel and publish a serialized message to a given exchange and routing key.","Task","Backlog","Highest","backend-dev@project.com","pm@project.com","",4.2,"RabbitMQ,Messaging,EPIC-001,US-002","Sprint 1","EPIC-001: Core Service Architecture & Communication","DICOM Management Platform Service","","","US-002","TASK-006","2024-01-01 09:00","2024-01-01 09:00","RabbitMQ .NET Client,C#"
"Implement Base Consumer IHostedService with DLQ Logic","Create an abstract `BaseRabbitMqConsumer` that handles the IHostedService lifecycle, queue/exchange/DLQ declaration, and reliable message processing loop with retry and dead-lettering logic.","Task","Backlog","Highest","backend-dev@project.com","pm@project.com","",14.3,"RabbitMQ,Architecture,High-Risk,EPIC-001,US-002","Sprint 1","EPIC-001: Core Service Architecture & Communication","DICOM Management Platform Service","","RISK-004: Critical and complex task. Forms the basis of system reliability.","US-002","TASK-006","2024-01-01 09:00","2024-01-01 09:00","RabbitMQ .NET Client,C#,.NET 8"
"Write Integration Tests for Base Consumer","Using Testcontainers, write integration tests for the `BaseRabbitMqConsumer`. Create a concrete test implementation that can be configured to succeed or fail, and validate the full message lifecycle.","Task","Backlog","Highest","qa-automation@project.com","pm@project.com","",14.3,"Integration Test,RabbitMQ,High-Risk,EPIC-001,US-002","Sprint 1","EPIC-001: Core Service Architecture & Communication","DICOM Management Platform Service","","RISK-004: Critical validation for the base consumer logic.","US-002","TASK-009","2024-01-01 09:00","2024-01-01 09:00","Testcontainers,xUnit,RabbitMQ .NET Client"
"Implement Windows Credential Manager Provider","Create a helper class that uses P/Invoke or a suitable library to read credentials (username/password) from the Windows Credential Manager for a specific target name.","Task","Backlog","Highest","backend-dev@project.com","pm@project.com","",9.3,"Security,Windows API,High-Risk,EPIC-006,US-011,US-014","Sprint 1","EPIC-006: Security & Compliance Implementation","DICOM Management Platform Service","","RISK-008: Complex native integration.","US-014","TASK-002","2024-01-01 09:00","2024-01-01 09:00","C#,Windows API,Security"
"Create Credential Setup Script","Develop a PowerShell script (`setup_credentials.ps1`) to be used during deployment. The script will prompt for sensitive passwords and store them securely in the Windows Credential Manager for the service to use.","Task","Backlog","Highest","devops@project.com","pm@project.com","",6.3,"Deployment,Security,PowerShell,EPIC-006,US-014","Sprint 1","EPIC-006: Security & Compliance Implementation","DICOM Management Platform Service","","RISK-008: Required for deploying the solution that uses WI-022.","US-014","TASK-046","2024-01-01 09:00","2024-01-01 09:00","PowerShell,Windows Security"
"Integrate OWASP Dependency-Check into CI Pipeline","Modify the CI pipeline configuration (e.g., azure-pipelines.yml) to add a step that invokes the OWASP Dependency-Check tool against the solution. Configure it to fail the build on 'High' severity findings.","Task","Backlog","Highest","devops@project.com","pm@project.com","",6.7,"CI/CD,DevSecOps,Security,EPIC-006,US-014","Sprint 1","EPIC-006: Security & Compliance Implementation","DICOM Management Platform Service","","","US-014","","2024-01-01 09:00","2024-01-01 09:00","CI/CD,Security,YAML"
"Implement fo-dicom SCP Listener as an IHostedService","Create the `DicomScpService` class implementing `IHostedService`. In the `StartAsync` method, configure and start the `DicomServer` from the `fo-dicom` library, listening on a port defined in `appsettings.json`.","Task","Backlog","Highest","backend-dev@project.com","pm@project.com","",8.5,"DICOM,fo-dicom,Networking,EPIC-002,US-004","Sprint 2","EPIC-002: DICOM SCP Functionality","DICOM Management Platform Service","","RISK-005: Requires specialized knowledge of fo-dicom library.","US-004","TASK-002","2024-01-01 09:00","2024-01-01 09:00","fo-dicom,.NET 8,C#"
"Implement OnCStoreRequest Handler for Decoupled Ingestion","Implement the `IDicomCStoreProvider` interface. In the `OnCStoreRequestAsync` method, save the incoming DICOM file to a temporary disk location, extract key metadata, and publish a message to RabbitMQ using the `IMessagePublisher`.","Task","Backlog","Highest","backend-dev@project.com","pm@project.com","",12.3,"DICOM,fo-dicom,RabbitMQ,EPIC-002,US-004","Sprint 2","EPIC-002: DICOM SCP Functionality","DICOM Management Platform Service","","RISK-001, RISK-005: High performance and architectural complexity.","US-004","TASK-008,TASK-019","2024-01-01 09:00","2024-01-01 09:00","fo-dicom,RabbitMQ,C#"
"Write E2E Test for DICOM C-STORE Ingestion","Create an end-to-end integration test that starts the service, uses a `fo-dicom` based `DicomClient` to send a C-STORE request, and verifies that the correct message appears in the RabbitMQ queue.","Task","Backlog","Highest","qa-automation@project.com","pm@project.com","",12,"E2E Test,DICOM,RabbitMQ,EPIC-002,US-004","Sprint 2","EPIC-002: DICOM SCP Functionality","DICOM Management Platform Service","","","US-004","TASK-020","2024-01-01 09:00","2024-01-01 09:00","xUnit,fo-dicom,Testcontainers,RabbitMQ"
"Implement Auto-Routing Service Logic","Create the `AutoRoutingService`. It will fetch all active `AutoRoutingRule` entities from the database via a repository, evaluate them in order of priority against the input DICOM metadata, and return the destination path of the first matching rule.","Task","Backlog","High","backend-dev@project.com","pm@project.com","",8.2,"Business Logic,Rules Engine,EPIC-002,US-005","Sprint 2","EPIC-002: DICOM SCP Functionality","DICOM Management Platform Service","","","US-005","TASK-016","2024-01-01 09:00","2024-01-01 09:00","C#,EF Core 8"
"Write Unit Tests for Auto-Routing Service","Create xUnit tests for the `AutoRoutingService`. The tests should use a mocked repository to provide various sets of rules and verify that the service returns the correct path for different DICOM metadata inputs.","Task","Backlog","High","qa-automation@project.com","pm@project.com","",7.5,"Unit Test,Business Logic,EPIC-002,US-005","Sprint 2","EPIC-002: DICOM SCP Functionality","DICOM Management Platform Service","","","US-005","TASK-022","2024-01-01 09:00","2024-01-01 09:00","xUnit,C#,Moq"
"Implement DICOM Persistence Consumer Logic","Create `DicomPersistenceConsumer` inheriting from `BaseRabbitMqConsumer`. Implement the `HandleMessage` method to coordinate fetching routing info, moving the file, and saving metadata to the database within a transaction.","Task","Backlog","Highest","backend-dev@project.com","pm@project.com","",12.7,"Consumer,DICOM,High-Risk,EPIC-003,US-006","Sprint 2","EPIC-003: Asynchronous Job Processing Consumers","DICOM Management Platform Service","","RISK-001, RISK-007: High risk due to transactional complexity between DB and file system.","US-006","TASK-009,TASK-016,TASK-022","2024-01-01 09:00","2024-01-01 09:00","RabbitMQ,EF Core 8,C#"
"Write Integration Test for Persistence Consumer","Using Testcontainers for RabbitMQ and PostgreSQL, create an end-to-end test for the `DicomPersistenceConsumer`. The test will publish a message and verify the final state in the database and mock file system.","Task","Backlog","Highest","qa-automation@project.com","pm@project.com","",16.5,"Integration Test,Consumer,High-Risk,EPIC-003,US-006","Sprint 2","EPIC-003: Asynchronous Job Processing Consumers","DICOM Management Platform Service","","RISK-001, RISK-007: Critical validation for the entire ingestion pipeline.","US-006","TASK-024","2024-01-01 09:00","2024-01-01 09:00","Testcontainers,xUnit,EF Core 8,RabbitMQ"
"Implement PDF Generation Consumer Logic","Create `PdfGenerationConsumer` inheriting `BaseRabbitMqConsumer`. The `HandleMessage` method will deserialize the job request, use the `QuestPDF` library to compose the document, and save it to disk.","Task","Backlog","Highest","backend-dev@project.com","pm@project.com","",9.3,"Consumer,PDF,EPIC-003,US-007","Sprint 2","EPIC-003: Asynchronous Job Processing Consumers","DICOM Management Platform Service","","","US-007","TASK-009","2024-01-01 09:00","2024-01-01 09:00","RabbitMQ,QuestPDF,C#"
"Write Integration Test for PDF Generation Consumer","Create an integration test that publishes a PDF job to the queue and verifies that a valid PDF file is created. The test does not need a full DB, just RabbitMQ.","Task","Backlog","Highest","qa-automation@project.com","pm@project.com","",7,"Integration Test,Consumer,PDF,EPIC-003,US-007","Sprint 2","EPIC-003: Asynchronous Job Processing Consumers","DICOM Management Platform Service","","","US-007","TASK-026","2024-01-01 09:00","2024-01-01 09:00","Testcontainers,xUnit,RabbitMQ"
"Implement Print Spooling Consumer Logic","Create `PrintSpoolingConsumer`. The `HandleMessage` method will deserialize the print job, update the job status in the DB to 'Processing', interact with the Windows Print API to spool the job, and finally update the job status to 'Completed' or 'Failed'.","Task","Backlog","Highest","backend-dev@project.com","pm@project.com","",8.3,"Consumer,Printing,Windows API,EPIC-003,US-008","Sprint 2","EPIC-003: Asynchronous Job Processing Consumers","DICOM Management Platform Service","","","US-008","TASK-009,TASK-016","2024-01-01 09:00","2024-01-01 09:00","RabbitMQ,Windows Print API,C#"
"Write Integration Test for Print Consumer","Create an integration test that validates the `PrintSpoolingConsumer`. The test will use a virtual printer (e.g., 'Microsoft Print to PDF') to avoid physical printing. It will verify database status updates.","Task","Backlog","Highest","qa-automation@project.com","pm@project.com","",6,"Integration Test,Consumer,Printing,EPIC-003,US-008","Sprint 2","EPIC-003: Asynchronous Job Processing Consumers","DICOM Management Platform Service","","","US-008","TASK-028","2024-01-01 09:00","2024-01-01 09:00","Testcontainers,xUnit,RabbitMQ"
"Implement Named Pipes Server as an IHostedService","Create `NamedPipeServerService` that implements `IHostedService`. In a background task, it will create a `NamedPipeServerStream` and asynchronously wait for client connections in a loop.","Task","Backlog","High","backend-dev@project.com","pm@project.com","",7.5,"IPC,Named Pipes,EPIC-004,US-009","Sprint 2","EPIC-004: Synchronous Inter-Process Communication (IPC)","DICOM Management Platform Service","","RISK-011: Requires careful concurrency management.","US-009","TASK-002","2024-01-01 09:00","2024-01-01 09:00","System.IO.Pipes,.NET 8,C#"
"Implement IPC Request Handler for PING/PONG","Within the Named Pipe server's connection handler, implement the logic to read a string from the client. If the string is 'PING', write 'PONG' back.","Task","Backlog","High","backend-dev@project.com","pm@project.com","",4,"IPC,Named Pipes,EPIC-004,US-009","Sprint 2","EPIC-004: Synchronous Inter-Process Communication (IPC)","DICOM Management Platform Service","","","US-009","TASK-030","2024-01-01 09:00","2024-01-01 09:00","System.IO.Pipes,C#"
"Write Integration Test for Named Pipes Server","Create an integration test that starts the `NamedPipeServerService` and then uses `NamedPipeClientStream` to connect, send 'PING', and assert that the response is 'PONG'.","Task","Backlog","High","qa-automation@project.com","pm@project.com","",6.3,"Integration Test,IPC,EPIC-004,US-009","Sprint 2","EPIC-004: Synchronous Inter-Process Communication (IPC)","DICOM Management Platform Service","","","US-009","TASK-031","2024-01-01 09:00","2024-01-01 09:00","xUnit,System.IO.Pipes,C#"
"Implement System Health Probe Hosted Service","Create `HealthProbeService` as an `IHostedService` with a periodic timer. On each tick, it will invoke separate health check methods for the database, message queue, and disk space.","Task","Backlog","Highest","backend-dev@project.com","pm@project.com","",9.3,"Monitoring,Health Check,EPIC-005,US-010","Sprint 2","EPIC-005: System Health, Monitoring & Administration","DICOM Management Platform Service","","","US-010","TASK-002,TASK-006,TASK-014","2024-01-01 09:00","2024-01-01 09:00",".NET 8,C#"
"Write Integration Test for Health Probe Service","Using Testcontainers, write tests for the `HealthProbeService`. Validate that it correctly reports 'Healthy' status for running dependencies and 'Unhealthy' status when a dependency container is stopped.","Task","Backlog","Highest","qa-automation@project.com","pm@project.com","",12,"Integration Test,Monitoring,EPIC-005,US-010","Sprint 2","EPIC-005: System Health, Monitoring & Administration","DICOM Management Platform Service","","","US-010","TASK-033","2024-01-01 09:00","2024-01-01 09:00","Testcontainers,xUnit"
"Expose Health Data via Named Pipes","Extend the `NamedPipeServerService` to handle a 'GET_HEALTH' request. When received, it should retrieve the current status from the `SystemHealthCache` singleton, serialize it, and send it back to the client.","Task","Backlog","Highest","backend-dev@project.com","pm@project.com","",5.3,"IPC,Monitoring,EPIC-005,US-010","Sprint 2","EPIC-005: System Health, Monitoring & Administration","DICOM Management Platform Service","","","US-010","TASK-031,TASK-033","2024-01-01 09:00","2024-01-01 09:00","Named Pipes,C#"
"Implement SMTP Alerting Service","Create an `IAlertingService` with a concrete `SmtpAlertingService` implementation. This service will use `MailKit` or a similar library to send emails via an SMTP server configured in `appsettings.json`.","Task","Backlog","High","backend-dev@project.com","pm@project.com","",7.2,"Alerting,SMTP,EPIC-005,US-011","Sprint 3","EPIC-005: System Health, Monitoring & Administration","DICOM Management Platform Service","","Depends on secure credential provider from Sprint 1.","US-011","TASK-046","2024-01-01 09:00","2024-01-01 09:00","SMTP,.NET 8,C#"
"Integrate Alerting with Health Probe and DLQ Monitor","Modify the `HealthProbeService` to call `IAlertingService` when a component's status changes to critical. Create a new simple `IHostedService` (`DlqMonitorService`) that periodically checks the DLQ depth and calls the alerting service if it's > 0.","Task","Backlog","High","backend-dev@project.com","pm@project.com","",8.5,"Alerting,Monitoring,EPIC-005,US-011","Sprint 3","EPIC-005: System Health, Monitoring & Administration","DICOM Management Platform Service","","","US-011","TASK-033,TASK-037","2024-01-01 09:00","2024-01-01 09:00",".NET 8,C#"
"Write Integration Tests for Alerting Triggers","Write integration tests that simulate failure conditions and verify that the `IAlertingService` is called. Use a mock implementation of the alerting service to check invocations.","Task","Backlog","High","qa-automation@project.com","pm@project.com","",8.3,"Integration Test,Alerting,EPIC-005,US-011","Sprint 3","EPIC-005: System Health, Monitoring & Administration","DICOM Management Platform Service","","","US-011","TASK-038","2024-01-01 09:00","2024-01-01 09:00","xUnit,Testcontainers,Moq"
"Implement Data Retention Hosted Service","Create `DataRetentionService` as a daily scheduled `IHostedService`. It will read the retention period from config, query the database for studies older than that period, and perform a soft delete in the DB and a hard delete of the files.","Task","Backlog","Low","backend-dev@project.com","pm@project.com","",9.7,"Data Management,Scheduled Task,High-Risk,EPIC-005,US-012","Sprint 3","EPIC-005: System Health, Monitoring & Administration","DICOM Management Platform Service","","High-risk due to automated data deletion.","US-012","TASK-002,TASK-016","2024-01-01 09:00","2024-01-01 09:00",".NET 8,EF Core 8,C#"
"Add Audit Logging to Data Retention Service","Integrate with an (assumed) `IAuditLogService` to record every automated study deletion. The log entry must include which study was deleted and that it was performed by the system's automated process.","Task","Backlog","Low","backend-dev@project.com","pm@project.com","",3.2,"Auditing,Data Management,EPIC-005,US-012","Sprint 3","EPIC-005: System Health, Monitoring & Administration","DICOM Management Platform Service","","","US-012","TASK-040","2024-01-01 09:00","2024-01-01 09:00","C#,EF Core 8"
"Write Integration Test for Data Retention Service","Create an integration test with a test database containing studies of various ages (e.g., 1 year old, 8 years old). Run the retention service logic and assert that only the old studies are purged.","Task","Backlog","Low","qa-automation@project.com","pm@project.com","",11.3,"Integration Test,Data Management,EPIC-005,US-012","Sprint 3","EPIC-005: System Health, Monitoring & Administration","DICOM Management Platform Service","","","US-012","TASK-041","2024-01-01 09:00","2024-01-01 09:00","xUnit,Testcontainers,EF Core 8"
"Implement Data Integrity Hosted Service","Create `DataIntegrityService` as a weekly scheduled `IHostedService`. It will iterate through all `Image` records in the database in batches, check `File.Exists()` for each file path, and log any discrepancies.","Task","Backlog","Low","backend-dev@project.com","pm@project.com","",8.3,"Data Management,Scheduled Task,EPIC-005,US-013","Sprint 3","EPIC-005: System Health, Monitoring & Administration","DICOM Management Platform Service","","","US-013","TASK-002,TASK-016","2024-01-01 09:00","2024-01-01 09:00",".NET 8,EF Core 8,C#"
"Write Integration Test for Data Integrity Service","Create an integration test that seeds a test database and a mock file system. One of the files should be intentionally omitted. Run the service logic and verify that the logs contain the expected warning for the missing file.","Task","Backlog","Low","qa-automation@project.com","pm@project.com","",8.7,"Integration Test,Data Management,EPIC-005,US-013","Sprint 3","EPIC-005: System Health, Monitoring & Administration","DICOM Management Platform Service","","","US-013","TASK-043","2024-01-01 09:00","2024-01-01 09:00","xUnit,Testcontainers"