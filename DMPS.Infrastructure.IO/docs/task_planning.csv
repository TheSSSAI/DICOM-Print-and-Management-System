"task_id","title","description","type","status","priority","assignee","reporter","due_date","estimated_hours","story_points","labels","sprint","sprint_goal","epic","epic_id","project","parent_id","dependencies","skills_required","complexity","risk_level","acceptance_criteria","definition_of_done","created_at","updated_at","sprint_start_date","sprint_end_date","capacity_allocation","collaboration_required","external_dependencies","testing_requirements","deployment_notes","business_value"
"TASK-WI016-001","Backend: Create Password Hashing Service with BCrypt","Implement a reusable service that encapsulates password hashing and verification using the `BCrypt.Net` library. It will have two methods: `HashPassword(string password)` and `VerifyPassword(string password, string hash)`.","Task","Sprint Backlog","Critical","senior.backend@company.com","product.owner@company.com","2024-11-15","4.17","2","backend,security,auth","Sprint 1","Establish foundational user authentication and authorization framework.","User Authentication, Authorization & Session Management","EPIC-003","DICOM Management and Printing System","US-001","","C#,Security,BCrypt.Net","Medium","Medium","`HashPassword` returns a valid BCrypt hash string; `VerifyPassword` returns true for a correct password and false for an incorrect one.","Code reviewed; Unit tests passing with 100% coverage; DI registration complete.","2024-10-26T09:00:00Z","2024-10-26T09:00:00Z","2024-11-04","2024-11-15","100%","","","Unit tests for hash and verify methods.","Core security component.","Enables secure password storage, a critical HIPAA requirement."
"TASK-WI017-001","Backend: Implement User Authentication Service","Create the `AuthenticationService` that takes a username and password. It will fetch the user record from the database, use the `PasswordHasherService` to verify the password, and handle different login outcomes.","Task","Sprint Backlog","Critical","senior.backend@company.com","product.owner@company.com","2024-11-15","8.33","3","backend,security,auth","Sprint 1","Establish foundational user authentication and authorization framework.","User Authentication, Authorization & Session Management","EPIC-003","DICOM Management and Printing System","US-001","TASK-WI016-001","C#,Entity Framework Core","Medium","Low","Service returns a `UserSession` object on successful authentication; Throws specific exceptions for failure modes; Denies login for inactive users.","Code reviewed; Unit tests for all login scenarios passing with >90% coverage.","2024-10-26T09:00:00Z","2024-10-26T09:00:00Z","2024-11-04","2024-11-15","100%","","","Unit tests for all login scenarios.","","Implements the core logic for user authentication."
"TASK-WI018-001","Frontend: Build WPF Login View","Create the `LoginView.xaml`. This view will serve as the application's entry point, styled with Material Design.","Task","Sprint Backlog","Critical","frontend.dev@company.com","product.owner@company.com","2024-11-15","6","2","frontend,wpf,ui","Sprint 1","Establish foundational user authentication and authorization framework.","User Authentication, Authorization & Session Management","EPIC-003","DICOM Management and Printing System","US-001","","WPF,XAML,Material Design in XAML Toolkit","Low","Low","View is displayed on startup; Password characters are masked; UI elements are styled correctly.","UI matches design specifications; View is bound to ViewModel.","2024-10-26T09:00:00Z","2024-10-26T09:00:00Z","2024-11-04","2024-11-15","100%","","","Visual review.","","Provides the user interface for application entry."
"TASK-US006-001","Backend: Implement User Creation Service Logic","Implement the `CreateUserAsync` method in `UserService`. This includes checking for duplicate usernames, generating a secure temporary password, calling the password hashing service, and setting the 'force password change' flag.","Task","Sprint Backlog","Critical","backend.dev@company.com","product.owner@company.com","2024-11-15","8.33","3","backend,security,user-management","Sprint 1","Establish foundational user authentication and authorization framework.","User Authentication, Authorization & Session Management","EPIC-003","DICOM Management and Printing System","US-006","TASK-WI016-001","C#,Entity Framework Core,Security","Medium","Low","Method throws `DuplicateUsernameException`; Generates secure temp password; Returns new user object and plaintext password.","Code reviewed; Unit tests passing with >90% coverage.","2024-10-26T09:00:00Z","2024-10-26T09:00:00Z","2024-11-04","2024-11-15","100%","senior.backend@company.com for security review","","Unit tests for user creation logic.","","Enables administrators to provision new user accounts."
"TASK-WI020-001","Backend: Implement Authorization Service","Create a service, `IAuthorizationService`, that holds the current user's session context. It will expose methods like `IsAdmin()` or `HasPermission(Permission permission)`.","Task","Sprint Backlog","Critical","senior.backend@company.com","product.owner@company.com","2024-11-15","6","2","backend,security,auth","Sprint 1","Establish foundational user authentication and authorization framework.","User Authentication, Authorization & Session Management","EPIC-003","DICOM Management and Printing System","US-002","TASK-US001-005","C#,Microsoft.Extensions.DependencyInjection","Medium","Low","Service is initialized with user's role after login; `IsAdmin()` returns correct boolean based on role; Service can be injected anywhere.","Code reviewed; Unit tests passing for different roles.","2024-10-26T09:00:00Z","2024-10-26T09:00:00Z","2024-11-04","2024-11-15","100%","","","Unit tests for role validation.","","Provides the core mechanism for enforcing role-based access control."
"TASK-US001-006","QA: Create E2E Tests for All Login Scenarios","Using WinAppDriver, create automated end-to-end tests for: successful login (as Admin and Technician), login with incorrect password, login with non-existent user, and login with a disabled account.","Task","Sprint Backlog","High","qa.engineer@company.com","product.owner@company.com","2024-11-15","12.01","5","qa,e2e,automation,auth","Sprint 1","Establish foundational user authentication and authorization framework.","User Authentication, Authorization & Session Management","EPIC-003","DICOM Management and Printing System","US-001","TASK-US001-005","QA,WPF Automation (WinAppDriver)","Medium","Low","All specified test cases are implemented; Tests correctly assert the expected outcome; Tests are integrated into the CI/CD pipeline.","All tests pass reliably in the CI pipeline; Test execution report is generated.","2024-10-26T09:00:00Z","2024-10-26T09:00:00Z","2024-11-04","2024-11-15","100%","frontend.dev@company.com for UI element IDs","","E2E testing framework (WinAppDriver).","","Ensures the login process is robust and secure from a user perspective."
"TASK-WI035-001","Graphics: Spike/POC for Vortice.Windows DirectX Integration","Create a time-boxed proof-of-concept to validate the core technical approach of hosting a DirectX swap chain in a custom WPF control and rendering a simple shape.","Spike","Sprint Backlog","Critical","senior.frontend@company.com","product.owner@company.com","2024-11-29","17","8","spike,poc,graphics,directx,risk-mitigation","Sprint 2","De-risk the viewer, build session security, and establish core infrastructure.","DICOM Viewer and Image Manipulation","EPIC-005","DICOM Management and Printing System","US-012","","WPF,DirectX,Vortice.Windows,C#","High","High","A DirectX-rendered shape is visible within a WPF window; The POC is stable and does not leak memory; Key findings and a go/no-go recommendation are documented.","Successful demonstration of the POC; Technical report submitted and reviewed.","2024-10-26T09:00:00Z","2024-10-26T09:00:00Z","2024-11-18","2024-11-29","100%","","","Performance profiling and memory leak analysis.","This is a non-deployable proof-of-concept.","Mitigates RISK-001, the highest technical risk in the project, before committing significant resources to viewer development."
"TASK-WI026-001","Infra: Implement Global User Activity Monitor","Create a service that reliably monitors application-wide keyboard and mouse input, likely using P/Invoke to hook into low-level Windows messages. The service should raise an `OnUserActivity` event.","Task","Sprint Backlog","High","frontend.dev@company.com","product.owner@company.com","2024-11-29","12","5","frontend,infra,security,session","Sprint 2","De-risk the viewer, build session security, and establish core infrastructure.","User Authentication, Authorization & Session Management","EPIC-003","DICOM Management and Printing System","US-003","","C#,P/Invoke,Windows API","High","Medium","Service correctly raises an event for user input; Implementation is thread-safe and has negligible performance impact; Hook is properly installed/uninstalled.","Code reviewed; Performance profiling confirms minimal impact.","2024-10-26T09:00:00Z","2024-10-26T09:00:00Z","2024-11-18","2024-11-29","100%","","","Performance testing.","","Provides the foundational component for HIPAA-compliant automatic session locking."
"TASK-WI027-001","Backend: Implement Session Lock Service","Create `SessionLockService` that subscribes to the `UserActivityMonitorService`. It will manage a resettable timer and trigger a global 'LockSession' event when the timer elapses.","Task","Sprint Backlog","High","backend.dev@company.com","product.owner@company.com","2024-11-29","6","2","backend,security,session","Sprint 2","De-risk the viewer, build session security, and establish core infrastructure.","User Authentication, Authorization & Session Management","EPIC-003","DICOM Management and Printing System","US-003","TASK-WI026-001","C#,.NET Timers","Medium","Low","Timer starts on login; Timer resets on user activity; 'LockSession' event is broadcast on timeout; 'Session Locked' is logged to audit trail.","Code reviewed; Unit tests for timer logic are passing.","2024-10-26T09:00:00Z","2024-10-26T09:00:00Z","2024-11-18","2024-11-29","100%","","","Unit tests and integration testing with activity monitor.","","Implements the core business logic for the automatic session lock feature."
"TASK-WI036-001","Graphics: Implement Monochrome DICOM to GPU Texture Pipeline","Implement the logic to read pixel data from a `fo-dicom` object for a monochrome image, create a DirectX texture, upload the pixel data, and render it.","Task","Sprint Backlog","Critical","senior.frontend@company.com","product.owner@company.com","2024-12-13","17","8","frontend,graphics,directx,dicom,viewer","Sprint 3","Deliver a basic, functional DICOM viewer capable of rendering an image with interactive tools.","DICOM Viewer and Image Manipulation","EPIC-005","DICOM Management and Printing System","US-012","TASK-WI035-001","DirectX,`fo-dicom`,C#","High","High","A single-frame monochrome DICOM image can be loaded and displayed; Supports 8-bit and 16-bit grayscale; Uses a default window/level.","Code reviewed; Visual validation against a reference DICOM viewer confirms rendering accuracy.","2024-10-26T09:00:00Z","2024-10-26T09:00:00Z","2024-12-02","2024-12-13","100%","","","Visual validation and comparison with a tool like Horos or RadiAnt.","Critical path for viewer functionality.","First step to visualizing clinical data, the core purpose of the application."
"TASK-WI044-001","DICOM: Spike/Research on DICOM GSPS Creation with fo-dicom","Conduct a time-boxed research spike to understand the structure of a DICOM GSPS object and how to create a minimal, valid GSPS file that contains a single line annotation.","Spike","Sprint Backlog","Critical","senior.backend@company.com","product.owner@company.com","2024-12-27","17","8","spike,poc,dicom,gsps,risk-mitigation","Sprint 4","De-risk annotations with a GSPS spike and implement the application licensing workflow.","DICOM Viewer and Image Manipulation","EPIC-005","DICOM Management and Printing System","US-013","","`fo-dicom`,DICOM Standard","High","High","A valid GSPS DICOM file is programmatically generated; File is validated by a third-party DICOM tool; A summary document of findings is produced.","POC GSPS file is generated and validated; Research document is reviewed and approved.","2024-10-26T09:00:00Z","2024-10-26T09:00:00Z","2024-12-16","2024-12-27","100%","","Third-party DICOM validation tools (e.g., dcmtk).","Validation using external tools.","Non-deployable research spike.","Mitigates RISK-003, a major technical risk related to the annotation feature's compliance and interoperability."
"TASK-WI066-001","Backend: Implement Odoo REST API Client","Create a service using `HttpClient` to send a license key to the Odoo API. The service must handle HTTPS, JSON serialization/deserialization, and network errors.","Task","Sprint Backlog","High","backend.dev@company.com","product.owner@company.com","2024-12-27","8.33","3","backend,api-integration,licensing","Sprint 4","De-risk annotations with a GSPS spike and implement the application licensing workflow.","Deployment, Licensing & Migration","EPIC-008","DICOM Management and Printing System","US-020","","C#,HttpClient,REST","Medium","Medium","Service can parse 'valid' and 'invalid' responses; Service handles `HttpRequestException` and returns 'ApiUnreachable' status.","Code reviewed; Integration tests against a mocked API endpoint are passing.","2024-10-26T09:00:00Z","2024-10-26T09:00:00Z","2024-12-16","2024-12-27","100%","","Odoo Licensing API documentation and test endpoint.","Integration tests against a mock API.","","Provides the technical foundation for license validation."
"TASK-WI044-002","DICOM: Implement GSPS Creation Service","Based on the spike findings, create a `GspsService` that can take a list of annotation objects and generate a complete, compliant DICOM GSPS object using `fo-dicom`.","Task","Sprint Backlog","Critical","senior.backend@company.com","product.owner@company.com","2025-01-17","25.67","13","backend,dicom,gsps,annotations","Sprint 5","Implement DICOM GSPS for annotations and complete the data migration analysis.","DICOM Viewer and Image Manipulation","EPIC-005","DICOM Management and Printing System","US-013","TASK-WI044-001","`fo-dicom`,DICOM Standard,C#","High","High","Service can create a GSPS object with multiple annotation layers; The object is saved as a new DICOM instance; Service populates all required DICOM modules.","Code reviewed; Generated GSPS files pass third-party validation.","2024-10-26T09:00:00Z","2024-10-26T09:00:00Z","2025-01-06","2025-01-17","100%","","Third-party DICOM validation tools.","Integration tests and validation with external tools.","Critical for interoperability of annotations.","Enables saving user-created annotations in a standards-compliant, shareable format."
"TASK-WI068-001","Analysis: Analyze Legacy Data and Define Mapping Rules","Obtain a sample of the legacy data and schema. Analyze the source data structures and define explicit mapping rules from legacy fields to the new PostgreSQL schema's fields.","Analysis","Sprint Backlog","Critical","senior.backend@company.com","product.owner@company.com","2025-01-17","25.67","8","analysis,database,migration,etl","Sprint 5","Implement DICOM GSPS for annotations and complete the data migration analysis.","Deployment, Licensing & Migration","EPIC-008","DICOM Management and Printing System","US-021","","Data Analysis,SQL,ETL","High","High","A data mapping document is created; All data transformations are identified; Data quality issues are identified with a handling strategy.","Data Mapping Specification Document is peer-reviewed and approved.","2024-10-26T09:00:00Z","2024-10-26T09:00:00Z","2025-01-06","2025-01-17","100%","Stakeholders from the legacy system.","Availability of a legacy data sample.","Review of the mapping document.","","Mitigates RISK-005 by clarifying the scope and complexity of the data migration effort."
"TASK-WI068-003","Backend: Implement 'Extract' and 'Transform' Logic for Migration","Implement the code to connect to the legacy data source, extract the data, and transform it into the new EF Core entity objects, based on the mapping document.","Task","Sprint Backlog","Critical","senior.backend@company.com","product.owner@company.com","2025-01-31","25.67","13","backend,database,migration,etl","Sprint 6","Deliver a testable, standalone data migration utility for transitioning from the legacy system.","Deployment, Licensing & Migration","EPIC-008","DICOM Management and Printing System","US-021","TASK-WI068-001","C#,ETL,SQL","High","High","Utility can read from legacy source; Transformation logic correctly maps all fields; Handles data quality issues gracefully by logging and skipping.","Code reviewed; Unit tests for transformation logic are passing; Code successfully transforms a sample data file.","2024-10-26T09:00:00Z","2024-10-26T09:00:00Z","2025-01-20","2025-01-31","100%","","","Unit testing and testing with sample legacy data.","Core component of the migration utility.","Implements the most complex part of the migration process, making the transition feasible."