Title,Description,Type,Status,Priority,Assignee,Reporter,Due Date,Estimate,Labels,Sprint,Epic,Project,Attachments,Comments,Parent ID,Dependencies,Created At,Updated At,Skills Required
"Scaffold Solution and Project Structure","Create the main .NET solution and all required projects (`Client.WPF`, `Service`, `Core`, `Application`, `Infrastructure`) targeting .NET 8. Configure project references according to Clean Architecture principles.",Configuration,Backlog,Critical,"tech-lead@project.com","pm@project.com","",4.17,"WI-001,Architecture,Setup","Sprint 1","Core Architecture & Project Setup","DicomApp Project","","This is the foundational first task for the entire project.","US-001","",2024-01-01 09:00,2024-01-01 09:00,".NET CLI,Visual Studio"
"Configure Dependency Injection in Windows Service","Implement `Microsoft.Extensions.DependencyInjection` in the `DicomApp.Service` project using the Generic Host builder (`Host.CreateDefaultBuilder`).",Development,Backlog,Critical,"backend-dev@project.com","pm@project.com","",6,"WI-002,Architecture,DI","Sprint 1","Core Architecture & Project Setup","DicomApp Project","","Requires the project structure to be in place.","US-001","TASK-ARC-001",2024-01-01 09:00,2024-01-01 09:00,".NET,Dependency Injection"
"Configure Dependency Injection in WPF Client","Implement `Microsoft.Extensions.DependencyInjection` in the `DicomApp.Client.WPF` project. Configure the service provider in `App.xaml.cs` and set up a mechanism to resolve ViewModels and services.",Development,Backlog,Critical,"frontend-dev@project.com","pm@project.com","",8.5,"WI-002,Architecture,DI","Sprint 1","Core Architecture & Project Setup","DicomApp Project","","Requires the project structure to be in place.","US-001","TASK-ARC-001",2024-01-01 09:00,2024-01-01 09:00,".NET,WPF,Dependency Injection"
"Integrate Serilog and Configure Basic Sinks","Add Serilog NuGet packages to client and service projects. Configure basic Serilog logger in both applications to write to a rolling text file and the Windows Event Log. No PHI masking at this stage.",Development,Backlog,Critical,"backend-dev@project.com","pm@project.com","",8,"WI-003,Logging,Security","Sprint 1","Core Architecture & Project Setup","DicomApp Project","","Requires DI to be set up for logger injection.","US-002","TASK-ARC-002,TASK-ARC-003",2024-01-01 09:00,2024-01-01 09:00,"Serilog,.NET"
"Define User, Role, PasswordHistory EF Core Entities","Create the `User`, `Role`, and `PasswordHistory` C# classes with EF Core data annotations and fluent API configurations. Define properties, relationships, and constraints like unique username.",Development,Backlog,Critical,"backend-dev@project.com","pm@project.com","",6,"WI-007,Database,Auth","Sprint 1","User Authentication & Authorization","DicomApp Project","","Requires the project structure.","US-005","TASK-ARC-001",2024-01-01 09:00,2024-01-01 09:00,"Entity Framework Core,C#"
"Create and Apply Initial User Schema Migration","Use the `dotnet ef` CLI tools to generate an initial database migration based on the auth entities and apply it to the PostgreSQL database.",Configuration,Backlog,Critical,"devops@project.com","pm@project.com","",3.17,"WI-008,Database,Auth","Sprint 1","User Authentication & Authorization","DicomApp Project","","Requires the EF Core entities to be defined.","US-005","TASK-AUTH-001",2024-01-01 09:00,2024-01-01 09:00,"EF Core CLI,PostgreSQL"
"Implement RabbitMQ Connection Management","Create a singleton service responsible for creating and maintaining a persistent connection and channel(s) to the RabbitMQ broker. Implement resilience logic for automatic reconnection.",Development,Backlog,Critical,"backend-dev@project.com","pm@project.com","",10.33,"WI-006,IPC,RabbitMQ","Sprint 1","Core Architecture & Project Setup","DicomApp Project","","Requires DI for singleton service registration.","US-004","TASK-ARC-002,TASK-ARC-003",2024-01-01 09:00,2024-01-01 09:00,"RabbitMQ,C#"
"Implement RabbitMQ Topology Declaration Service","Create a startup service that programmatically declares all necessary RabbitMQ topology: exchanges, main processing queues (durable), Dead-Letter Exchange (DLX), and Dead-Letter Queues (DLQ). The declaration must be idempotent.",Development,Backlog,Critical,"backend-dev@project.com","pm@project.com","",8.5,"WI-006,IPC,RabbitMQ,Setup","Sprint 1","Core Architecture & Project Setup","DicomApp Project","","Requires a connection to the broker.","US-004","TASK-IPC-004",2024-01-01 09:00,2024-01-01 09:00,"RabbitMQ,C#"
"Implement Named Pipe Server in Windows Service","Create a singleton hosted service (`IHostedService`) that creates a `NamedPipeServerStream`. It should run in a background thread, listen for client connections, read a 'PING' message, and write back a 'PONG' response.",Development,Backlog,High,"backend-dev@project.com","pm@project.com","",12.33,"WI-004,IPC,Service","Sprint 1","Core Architecture & Project Setup","DicomApp Project","","Requires the service host and DI to be in place.","US-003","TASK-ARC-002",2024-01-01 09:00,2024-01-01 09:00,"C#,Named Pipes,Multithreading"
"Implement Named Pipe Client in WPF Application","Create a client-side service (`IServiceStatusClient`) that encapsulates the logic for connecting to the named pipe. Implement the `IsServiceRunningAsync` method, which connects, sends 'PING', awaits 'PONG', and handles timeouts and exceptions.",Development,Backlog,High,"frontend-dev@project.com","pm@project.com","",8.83,"WI-005,IPC,Client","Sprint 1","Core Architecture & Project Setup","DicomApp Project","","Requires the client DI setup.","US-003","TASK-ARC-003",2024-01-01 09:00,2024-01-01 09:00,"C#,Named Pipes,async/await"
"Design and Develop PHI Masking Enricher","Create a custom Serilog `ILogEventEnricher` that inspects log event properties. If a property is identified as containing PHI (e.g., by name like 'PatientName' or a custom attribute), its value is replaced with a redacted placeholder.",Development,Backlog,Critical,"backend-dev@project.com","pm@project.com","",12.33,"WI-003,Logging,Security,HIPAA","Sprint 2","Core Architecture & Project Setup","DicomApp Project","","Requires basic Serilog integration.","US-002","TASK-LOG-001",2024-01-01 09:00,2024-01-01 09:00,"Serilog,C#,Security"
"Implement Unit Tests for PHI Masking Enricher","Write a comprehensive suite of xUnit tests for the `PhiMaskingEnricher`. Tests should cover various scenarios: objects with and without PHI, primitive PHI properties, nested objects, and collections.",Testing,Backlog,Critical,"qa@project.com","pm@project.com","",8.5,"WI-003,Logging,Security,Testing","Sprint 2","Core Architecture & Project Setup","DicomApp Project","","Requires the enricher to be implemented.","US-002","TASK-LOG-002",2024-01-01 09:00,2024-01-01 09:00,"xUnit,C#"
"Implement BCrypt Password Hashing Service","Create a reusable service (`IPasswordHasher`) that wraps a trusted BCrypt library. It will provide two methods: `HashPassword(string password)` and `VerifyPassword(string password, string hash)`.",Development,Backlog,Critical,"backend-dev@project.com","pm@project.com","",6,"WI-009,Security,Auth","Sprint 2","User Authentication & Authorization","DicomApp Project","","Requires DI for service registration.","US-005","TASK-ARC-002,TASK-ARC-003",2024-01-01 09:00,2024-01-01 09:00,"C#,BCrypt,Security"
"Implement Backend Authentication Service","Create an `IAuthenticationService` with a `LoginAsync(username, password)` method. This service will use the EF Core `DbContext` to find the user and the `IPasswordHasher` to verify the password. It should return a user session object on success or throw specific exceptions on failure.",Development,Backlog,Critical,"backend-dev@project.com","pm@project.com","",10.33,"WI-010,Auth,Service","Sprint 2","User Authentication & Authorization","DicomApp Project","","Requires DB schema and password hasher.","US-005","TASK-AUTH-002,TASK-AUTH-003",2024-01-01 09:00,2024-01-01 09:00,"C#,EF Core,async/await"
"Develop WPF Login View (XAML)","Create the `LoginView.xaml` user control. It should contain a username TextBox, a password PasswordBox, a Login Button, and a TextBlock for displaying error messages. Style with Material Design in XAML Toolkit.",Development,Backlog,Critical,"frontend-dev@project.com","pm@project.com","",8,"WI-010,Auth,UI","Sprint 2","User Authentication & Authorization","DicomApp Project","","Requires the WPF project.","US-005","TASK-ARC-001",2024-01-01 09:00,2024-01-01 09:00,"WPF,XAML,Material Design"
"Develop WPF Login ViewModel","Create the `LoginViewModel.cs` that provides data binding for the `LoginView`. It will have properties for Username and Password, an `ICommand` for the login button, and a property for the error message. It will use the `IAuthenticationService` to perform the login.",Development,Backlog,Critical,"frontend-dev@project.com","pm@project.com","",14.33,"WI-010,Auth,ViewModel","Sprint 2","User Authentication & Authorization","DicomApp Project","","Requires the backend service and the XAML view.","US-005","TASK-AUTH-004,TASK-AUTH-005",2024-01-01 09:00,2024-01-01 09:00,"WPF,MVVM,C#"
"Implement Centralized Session Context Service","Create a singleton service (`ISessionContext`) that holds the current authenticated user's information, including their ID, username, and role. This service will be the single source of truth for authorization checks.",Development,Backlog,Critical,"fullstack-dev@project.com","pm@project.com","",8.5,"WI-011,Auth,RBAC","Sprint 2","User Authentication & Authorization","DicomApp Project","","Requires the login service to provide session data.","US-006","TASK-AUTH-004",2024-01-01 09:00,2024-01-01 09:00,"C#,MVVM"
"Apply and Validate End-to-End PHI Masking","Integrate the `PhiMaskingEnricher` into the Serilog configuration for both the client and service applications. Perform manual validation by triggering logs with PHI data and inspecting the output in log files and the Windows Event Viewer.",Integration,Backlog,Critical,"qa@project.com","pm@project.com","",4,"WI-003,Logging,Security,Validation","Sprint 2","Core Architecture & Project Setup","DicomApp Project","","Requires the enricher and its unit tests to be complete.","US-002","TASK-LOG-003",2024-01-01 09:00,2024-01-01 09:00,"Serilog,.NET"
"Implement RBAC in ViewModels and UI","Refactor base ViewModels to inject `ISessionContext`. Expose authorization properties (e.g., `CanManageUsers`) from the ViewModels and bind UI element visibility/enabled state to them in the XAML.",Development,Backlog,Critical,"frontend-dev@project.com","pm@project.com","",17,"WI-011,Auth,RBAC,UI","Sprint 3","User Authentication & Authorization","DicomApp Project","","Requires the session context service.","US-006","TASK-AUTH-010",2024-01-01 09:00,2024-01-01 09:00,"WPF,MVVM,XAML"
"Implement Backend Authorization Checks","Add authorization checks to the application service layer. Before executing a sensitive operation (e.g., `CreateUser`), the service method must check the `ISessionContext` to ensure the current user has the required role.",Development,Backlog,Critical,"backend-dev@project.com","pm@project.com","",7,"WI-011,Auth,RBAC,Service","Sprint 3","User Authentication & Authorization","DicomApp Project","","Requires the session context service.","US-006","TASK-AUTH-010",2024-01-01 09:00,2024-01-01 09:00,"C#,Security"
"Define AuditLog EF Core Entity and Migration","Create the `AuditLog` entity class in the Core project. It should include fields for user ID, timestamp, event type, a JSONB field for details, and a correlation ID. Generate and apply the EF Core migration.",Development,Backlog,Critical,"backend-dev@project.com","pm@project.com","",4.17,"WI-017,Audit,Database","Sprint 3","System Administration","DicomApp Project","","Depends on the initial database setup.","US-012","TASK-AUTH-002",2024-01-01 09:00,2024-01-01 09:00,"Entity Framework Core,C#"
"Implement Centralized Audit Logging Service","Create an `IAuditService` and its implementation that provides a method `LogEventAsync(AuditEvent)`. This service will be used by other parts of the application to write to the `AuditLogs` table. The service must be able to participate in existing database transactions.",Development,Backlog,Critical,"backend-dev@project.com","pm@project.com","",10.33,"WI-018,Audit,Service","Sprint 3","System Administration","DicomApp Project","","Requires the AuditLog entity and table.","US-012","TASK-ADMIN-001",2024-01-01 09:00,2024-01-01 09:00,"C#,EF Core"
"Develop Audit Trail Viewer UI (XAML)","Create the `AuditTrailView.xaml` for administrators. The UI will include date pickers for a date range filter, a combobox to filter by user, a DataGrid to display results, and an 'Export' button.",Development,Backlog,Critical,"frontend-dev@project.com","pm@project.com","",10.33,"WI-019,Audit,UI","Sprint 3","System Administration","DicomApp Project","","Requires the RBAC mechanism to restrict access.","US-012","TASK-AUTH-011",2024-01-01 09:00,2024-01-01 09:00,"WPF,XAML"
"Develop Audit Trail ViewModel (Filtering and Data Fetching)","Create `AuditTrailViewModel.cs`. It will fetch audit logs from the database based on the filter criteria (user, date range). It needs to handle loading states and expose the log collection to the view.",Development,Backlog,Critical,"frontend-dev@project.com","pm@project.com","",16,"WI-019,Audit,ViewModel","Sprint 3","System Administration","DicomApp Project","","Requires the audit service/repository and the view.","US-012","TASK-ADMIN-002,TASK-ADMIN-003",2024-01-01 09:00,2024-01-01 09:00,"WPF,MVVM,EF Core"
"Implement 'Export to CSV' Functionality","Add logic to the `AuditTrailViewModel` for the 'Export' command. This logic will take the currently filtered collection of audit logs, format it as a CSV string, and use a file save dialog to write it to a file.",Development,Backlog,High,"frontend-dev@project.com","pm@project.com","",8.5,"WI-019,Audit,Export","Sprint 3","System Administration","DicomApp Project","","Requires the filtered data collection from the ViewModel.","US-012","TASK-ADMIN-004",2024-01-01 09:00,2024-01-01 09:00,"C#,MVVM"
"Develop User Management View and ViewModel (List Users)","Create the main `UserManagementView.xaml` and `UserManagementViewModel.cs`. This initial version will fetch and display a list of all system users in a DataGrid. It will include placeholders for Add, Edit, and Delete buttons.",Development,Backlog,Critical,"frontend-dev@project.com","pm@project.com","",12.33,"WI-013,User Management,UI","Sprint 4","System Administration","DicomApp Project","","Requires the user schema and RBAC.","US-008","TASK-AUTH-002,TASK-AUTH-011",2024-01-01 09:00,2024-01-01 09:00,"WPF,MVVM,EF Core"
"Implement Configurable Password Policy Service","Create a service that manages and enforces the system's password policy (length, complexity, history). The policy parameters should be configurable and stored in the database (e.g., in a `SystemSettings` table).",Development,Backlog,Critical,"backend-dev@project.com","pm@project.com","",14.5,"US-011,Security,Auth","Sprint 4","System Administration","DicomApp Project","","Requires the PasswordHistory table.","US-008","TASK-AUTH-002",2024-01-01 09:00,2024-01-01 09:00,"C#,EF Core"
"Develop 'Add User' Dialog (View and ViewModel)","Create the `AddUserView.xaml` modal dialog and its `AddUserViewModel.cs`. The view will have inputs for username and a role selector. The ViewModel will handle validation (e.g., required fields).",Development,Backlog,Critical,"frontend-dev@project.com","pm@project.com","",10.33,"WI-014,User Management,UI","Sprint 4","System Administration","DicomApp Project","","Launched from the main user management view.","US-008","TASK-ADMIN-006",2024-01-01 09:00,2024-01-01 09:00,"WPF,MVVM,C#"
"Implement Backend 'Create User' Service Logic","Create a `UserService.CreateUserAsync` method. This method must perform all actions in a single database transaction: check for unique username, generate and hash a temporary password, create the User record with the 'force password change' flag, and call the AuditService to log the event.",Development,Backlog,Critical,"backend-dev@project.com","pm@project.com","",17,"WI-014,User Management,Service","Sprint 4","System Administration","DicomApp Project","","Requires AuditService and PasswordHasher.","US-008","TASK-ADMIN-002,TASK-AUTH-003",2024-01-01 09:00,2024-01-01 09:00,"C#,EF Core,Security"
"Integrate Create User Flow and Display Temporary Password","Wire up the `AddUserViewModel` to call the `UserService.CreateUserAsync` method. Upon successful creation, the ViewModel should close the 'Add' dialog, refresh the user list, and display a success notification or dialog containing the returned temporary password.",Integration,Backlog,Critical,"fullstack-dev@project.com","pm@project.com","",8.5,"WI-014,User Management,Integration","Sprint 4","System Administration","DicomApp Project","","Connects the frontend dialog to the backend service.","US-008","TASK-ADMIN-008,TASK-ADMIN-009",2024-01-01 09:00,2024-01-01 09:00,"WPF,MVVM"
"Develop 'Edit User' Dialog (View and ViewModel)","Create the `EditUserView.xaml` and `EditUserViewModel.cs`. The dialog will be pre-populated with the selected user's data. It will allow changing the role and account status. The username will be read-only.",Development,Backlog,Critical,"frontend-dev@project.com","pm@project.com","",10.33,"WI-015,User Management,UI","Sprint 4","System Administration","DicomApp Project","","Launched from the user management view.","US-009","TASK-ADMIN-006",2024-01-01 09:00,2024-01-01 09:00,"WPF,MVVM"
"Implement Backend 'Update User' Service Logic","Create a `UserService.UpdateUserAsync` method. It must include critical business rule validation: prevent self-editing, and prevent the demotion or disabling of the last active administrator. All changes must be logged to the audit trail within the same transaction.",Development,Backlog,Critical,"backend-dev@project.com","pm@project.com","",15.17,"WI-015,User Management,Service","Sprint 5","System Administration","DicomApp Project","","Requires AuditService.","US-009","TASK-ADMIN-002",2024-01-01 09:00,2024-01-01 09:00,"C#,EF Core"
"Integrate Edit User Flow","Wire up the `UserManagementViewModel` to open the `EditUserView` for a selected user. The 'Edit' button should be disabled for the admin's own entry in the list. The `EditUserViewModel` will call the `UserService.UpdateUserAsync` on save.",Integration,Backlog,Critical,"fullstack-dev@project.com","pm@project.com","",8.83,"WI-015,User Management,Integration","Sprint 5","System Administration","DicomApp Project","","Connects the frontend dialog to the backend service.","US-009","TASK-ADMIN-011,TASK-ADMIN-012",2024-01-01 09:00,2024-01-01 09:00,"WPF,MVVM"
"Implement Backend 'Delete User' Service Logic","Create a `UserService.DeleteUserAsync` method. It must perform the same 'self-delete' and 'last admin' checks as the update method. The user deletion and audit log creation must be in a single transaction.",Development,Backlog,High,"backend-dev@project.com","pm@project.com","",10.83,"WI-013,User Management,Service","Sprint 5","System Administration","DicomApp Project","","Uses similar validation logic to the Update method.","US-010","TASK-ADMIN-012",2024-01-01 09:00,2024-01-01 09:00,"C#,EF Core"
"Integrate Delete User Flow","Add a 'Delete' command to the `UserManagementViewModel`. The 'Delete' button in the grid should be disabled for the current admin. Clicking delete shows a confirmation dialog before calling the `UserService.DeleteUserAsync` method.",Integration,Backlog,High,"frontend-dev@project.com","pm@project.com","",8.5,"WI-013,User Management,Integration","Sprint 5","System Administration","DicomApp Project","","Requires the main view and the backend service.","US-010","TASK-ADMIN-006,TASK-ADMIN-014",2024-01-01 09:00,2024-01-01 09:00,"WPF,MVVM"
"Define DICOM Data EF Core Entities and Migrations","Create EF Core entities for Patient, Study, Series, and Image. Configure relationships and data types. Generate and apply the database migration.",Development,Backlog,Critical,"backend-dev@project.com","pm@project.com","",8,"WI-024,Database,DICOM","Sprint 5","DICOM Core Functionality","DicomApp Project","","Depends on the base DB setup.","US-014","TASK-AUTH-002",2024-01-01 09:00,2024-01-01 09:00,"EF Core,C#"
"Implement DICOM C-STORE SCP Listener in Windows Service","Using fo-dicom, create a C-STORE SCP listener within the Windows Service. On receiving a study, it should save files to a temporary location and publish a message to RabbitMQ with the metadata and file paths.",Development,Backlog,Critical,"backend-dev@project.com","pm@project.com","",16,"WI-021,DICOM,C-STORE,Service","Sprint 5","DICOM Core Functionality","DicomApp Project","","Requires RabbitMQ infrastructure from Sprint 1.","US-014","TASK-IPC-005",2024-01-01 09:00,2024-01-01 09:00,"fo-dicom,C#,RabbitMQ"
"Implement DICOM Metadata Persistence from Queue","Create a RabbitMQ consumer in the Windows service that listens for study ingestion messages. The consumer will parse the metadata, write Patient/Study/Series/Image records to the database transactionally, and move the files to permanent storage.",Development,Backlog,Critical,"backend-dev@project.com","pm@project.com","",12,"WI-022,DICOM,Persistence,Service","Sprint 5","DICOM Core Functionality","DicomApp Project","","Depends on the DICOM entities and the C-STORE listener.","US-014","TASK-DICOM-001,TASK-DICOM-002",2024-01-01 09:00,2024-01-01 09:00,"C#,EF Core,RabbitMQ"
"Implement Global Input Hook Service","Develop a service that uses P/Invoke to hook into low-level Windows keyboard and mouse events (`WH_KEYBOARD_LL`, `WH_MOUSE_LL`). This service will raise a C# event whenever user activity is detected.",Development,Backlog,Critical,"fullstack-dev@project.com","pm@project.com","",18,"WI-012,Security,Session,PInvoke","Sprint 6","User Authentication & Authorization","DicomApp Project","High Risk: R-TEC-002. P/Invoke and low-level Windows hooks are complex, error-prone, and hard to debug.","Self-contained technical component.","US-007","",2024-01-01 09:00,2024-01-01 09:00,"C#,P/Invoke,Win32 API"
"Implement Session Inactivity Timer Service","Create a service that subscribes to the `GlobalInputHookService`. It will manage a timer that gets reset on every user activity event. When the timer elapses (e.g., 15 minutes), it will raise a `OnSessionTimeout` event.",Development,Backlog,Critical,"fullstack-dev@project.com","pm@project.com","",8.5,"WI-012,Security,Session","Sprint 6","User Authentication & Authorization","DicomApp Project","","Requires the input hook service.","US-007","TASK-AUTH-013",2024-01-01 09:00,2024-01-01 09:00,"C#,Multithreading"
"Develop Lock Screen View and ViewModel","Create the `LockScreenView.xaml` and `LockScreenViewModel.cs`. This view will be a modal overlay covering the entire application. It will display the current user, a password box, and an 'Unlock' button. The ViewModel will handle the unlock logic.",Development,Backlog,Critical,"frontend-dev@project.com","pm@project.com","",16,"WI-012,Security,Session,UI","Sprint 6","User Authentication & Authorization","DicomApp Project","","Requires the auth service for password verification and audit service for logging.","US-007","TASK-AUTH-004,TASK-ADMIN-002",2024-01-01 09:00,2024-01-01 09:00,"WPF,MVVM,C#"
"Integrate Session Lock Orchestration","In the main application shell/window, listen for the `OnSessionTimeout` event from the `SessionInactivityService`. When the event fires, display the `LockScreenView` as a modal dialog, ensuring it completely covers the existing UI and preserves its state.",Integration,Backlog,Critical,"frontend-dev@project.com","pm@project.com","",12.5,"WI-012,Security,Session,Integration","Sprint 6","User Authentication & Authorization","DicomApp Project","","Requires the timer service and the lock screen UI.","US-007","TASK-AUTH-014,TASK-AUTH-015",2024-01-01 09:00,2024-01-01 09:00,"WPF,MVVM,C#"
"Implement Forced Logout After Failed Unlocks","Add logic to the `LockScreenViewModel` to track the number of consecutive failed unlock attempts. After 5 failures, the session should be terminated, and the application should return to the main login screen.",Development,Backlog,High,"fullstack-dev@project.com","pm@project.com","",8.5,"US-004,Security,Session","Sprint 6","User Authentication & Authorization","DicomApp Project","","Extends the Lock Screen ViewModel.","US-007","TASK-AUTH-015",2024-01-01 09:00,2024-01-01 09:00,"C#,MVVM"
"E2E Test: Session Lock and Unlock","Perform manual E2E testing of the session lock feature. Set the timeout to a short duration (e.g., 1 minute) for testing. Verify locking, correct password unlock, incorrect password handling, and state preservation.",Testing,Backlog,Critical,"qa@project.com","pm@project.com","",10.83,"WI-012,Security,Session,E2E Testing","Sprint 6","User Authentication & Authorization","DicomApp Project","","Requires the full feature to be implemented.","US-007","TASK-AUTH-016,TASK-AUTH-018",2024-01-01 09:00,2024-01-01 09:00,"QA,Manual Testing"
"Implement Backend 'Reset Password' Service Logic","Create a `UserService.ResetPasswordAsync` method. This method will generate a secure temporary password, hash it, update the user's record with the new hash and the 'force password change' flag, and log the event to the audit trail. All in one transaction.",Development,Backlog,Critical,"backend-dev@project.com","pm@project.com","",12.33,"WI-016,User Management,Service","Sprint 7","System Administration","DicomApp Project","","Requires AuditService and PasswordHasher.","US-011","TASK-ADMIN-002,TASK-AUTH-003",2024-01-01 09:00,2024-01-01 09:00,"C#,EF Core,Security"
"Integrate Reset Password Flow","Add a 'Reset Password' command to the `UserManagementViewModel`. The button should be disabled for the admin's own row. Clicking it shows a confirmation dialog, calls the backend service, and then displays the new temporary password in a success dialog.",Integration,Backlog,Critical,"frontend-dev@project.com","pm@project.com","",11,"WI-016,User Management,Integration","Sprint 7","System Administration","DicomApp Project","","Requires the user management view and the backend service.","US-011","TASK-ADMIN-006,TASK-ADMIN-016",2024-01-01 09:00,2024-01-01 09:00,"WPF,MVVM"
"Forced Password Change UI (View and ViewModel)","Create the `ForcePasswordChangeView.xaml` and `ForcePasswordChangeViewModel.cs`. This modal view is shown after a user logs in with a temporary password. It must collect a new password and a confirmation, and prevent any other application interaction.",Development,Backlog,Critical,"frontend-dev@project.com","pm@project.com","",12.33,"US-005,Auth,Security","Sprint 7","User Authentication & Authorization","DicomApp Project","","Depends on the password policy service to display rules.","US-005","TASK-ADMIN-007",2024-01-01 09:00,2024-01-01 09:00,"WPF,MVVM,C#"
"Modify Authentication Flow for Forced Password Change","Update the `AuthenticationService` and `LoginViewModel` to handle the 'force password change' flag. After a successful login, if the flag is true, the system must navigate to the `ForcePasswordChangeView` instead of the main application.",Development,Backlog,Critical,"fullstack-dev@project.com","pm@project.com","",10.33,"US-005,Auth,Security","Sprint 7","User Authentication & Authorization","DicomApp Project","","Requires the login logic and the password change UI.","US-005","TASK-AUTH-006,TASK-AUTH-008",2024-01-01 09:00,2024-01-01 09:00,"C#,MVVM,EF Core"
"E2E Test: Full Login Flow","Perform manual and/or automated E2E testing of the entire login flow. This includes testing with valid admin credentials, valid technician credentials, invalid passwords, non-existent users, and disabled accounts.",Testing,Backlog,Critical,"qa@project.com","pm@project.com","",9.33,"WI-010,Auth,E2E Testing","Sprint 7","User Authentication & Authorization","DicomApp Project","","Requires the complete login feature and the role-based UI control to be implemented.","US-005","TASK-AUTH-006,TASK-AUTH-011",2024-01-01 09:00,2024-01-01 09:00,"QA,Manual Testing"
"Implement Local Study Browser and Search UI/VM","Create a WPF view and viewmodel to browse, search, and filter local studies. The viewmodel will query the PostgreSQL database via EF Core based on user input (Patient Name, Study Date, etc.).",Development,Backlog,Critical,"frontend-dev@project.com","pm@project.com","",16,"WI-025,DICOM,Browser,UI","Sprint 7","DICOM Core Functionality","DicomApp Project","","Requires DICOM DB entities.","US-016","TASK-DICOM-001",2024-01-01 09:00,2024-01-01 09:00,"WPF,MVVM,EF Core"
"Spike: GPU-Accelerated Rendering Pipeline PoC","Develop a standalone proof-of-concept (PoC) for the rendering pipeline using Vortice.Windows and DirectX. The goal is to validate the ability to render a large, multi-frame DICOM series with acceptable performance and stability.",Research,Backlog,Critical,"gpu-specialist@project.com","pm@project.com","",40,"WI-027,Viewer,GPU,DirectX,PoC,Risk-Mitigation","Sprint 8","DICOM Viewer Implementation","DicomApp Project","High Risk: R-TEC-001, R-RES-001. This task is to de-risk the entire viewer epic.","Self-contained.","US-018","",2024-01-01 09:00,2024-01-01 09:00,"DirectX,Vortice.Windows,WPF,C#"
"Implement C-FIND/C-MOVE SCU in WPF Client","Develop the UI and backend logic for the client to act as a DICOM Service Class User (SCU). Implement C-FIND to query a remote PACS and C-MOVE to initiate retrieval of selected studies.",Development,Backlog,Critical,"fullstack-dev@project.com","pm@project.com","",32,"WI-023,DICOM,PACS,C-FIND,C-MOVE","Sprint 8","DICOM Core Functionality","DicomApp Project","","Requires fo-dicom library and a test PACS server.","US-015","",2024-01-01 09:00,2024-01-01 09:00,"fo-dicom,C#,WPF,MVVM"
"Develop Viewer Layout and Comparison Mode","Based on the PoC, integrate the rendering pipeline into a WPF control. Develop the UI for viewer layouts, including a thumbnail panel and a side-by-side comparison mode with synchronized pan/zoom.",Development,Backlog,Critical,"gpu-specialist@project.com","pm@project.com","",24,"WI-028,Viewer,UI,Layout","Sprint 9","DICOM Viewer Implementation","DicomApp Project","","Depends on the successful completion of the rendering PoC.","US-018","TASK-VIEWER-001",2024-01-01 09:00,2024-01-01 09:00,"WPF,MVVM,DirectX"
"Implement Standard Image Manipulation Tools","Implement interactive viewer tools: zoom (mouse wheel), pan (drag), window/level (drag), rotate, and flip. Provide a selection of common WW/WL presets (e.g., Lung, Bone).",Development,Backlog,Critical,"gpu-specialist@project.com","pm@project.com","",32,"WI-029,Viewer,Tools,Interaction","Sprint 9","DICOM Viewer Implementation","DicomApp Project","","Depends on the core viewer control.","US-019","TASK-VIEWER-002",2024-01-01 09:00,2024-01-01 09:00,"WPF,DirectX,C#"
"Implement Drag-and-Drop DICOM Import","Enable drag-and-drop on the main window. The flow will check for duplicates via a synchronous Named Pipe call, then publish an import job to RabbitMQ for asynchronous processing by the background service.",Development,Backlog,High,"fullstack-dev@project.com","pm@project.com","",24,"WI-026,DICOM,Import,DragAndDrop","Sprint 9","DICOM Core Functionality","DicomApp Project","","Requires Named Pipe and RabbitMQ infrastructure.","US-017","TASK-IPC-001,TASK-IPC-006",2024-01-01 09:00,2024-01-01 09:00,"WPF,MVVM,Named Pipes,RabbitMQ"
"Implement Annotation and Measurement Tools (GSPS)","Implement tools for drawing non-destructive annotations (arrows, text) and measurements (length, angle) on images. On save, create a DICOM Grayscale Softcopy Presentation State (GSPS) object.",Development,Backlog,High,"gpu-specialist@project.com","pm@project.com","",40,"WI-030,Viewer,Annotations,GSPS","Sprint 10","DICOM Viewer Implementation","DicomApp Project","High Risk: R-TIM-001. GSPS creation is complex.","Depends on the core viewer tools.","US-020","TASK-VIEWER-003",2024-01-01 09:00,2024-01-01 09:00,"fo-dicom,WPF,DirectX"
"Implement Health Data Collection in Windows Service","Create a service that periodically checks the status of its dependencies: DB connection (`CanConnectAsync`), RabbitMQ connection (`IsOpen`), and available disk space. It should cache this data for retrieval.",Development,Backlog,High,"backend-dev@project.com","pm@project.com","",14.33,"WI-020,Monitoring,Service","Sprint 10","System Administration","DicomApp Project","","Runs within the service host.","US-013","TASK-ARC-002",2024-01-01 09:00,2024-01-01 09:00,"C#,EF Core,RabbitMQ"
"Expose Health Data via a New Named Pipe Endpoint","Extend the Named Pipe server to handle a new request type, e.g., 'GET_HEALTH'. When this request is received, it should serialize the cached health data DTO to JSON and send it back to the client.",Development,Backlog,High,"backend-dev@project.com","pm@project.com","",8.5,"WI-020,Monitoring,IPC","Sprint 10","System Administration","DicomApp Project","","Extends the existing pipe server and uses the health data.","US-013","TASK-IPC-001,TASK-ADMIN-018",2024-01-01 09:00,2024-01-01 09:00,"C#,Named Pipes"
"Develop System Health Dashboard (View and ViewModel)","Create the `SystemHealthDashboardView.xaml` and its ViewModel. The ViewModel will use a timer to periodically call a new client-side service that fetches the health data from the service via the Named Pipe. The data will be bound to UI elements.",Development,Backlog,High,"frontend-dev@project.com","pm@project.com","",17,"WI-020,Monitoring,UI","Sprint 10","System Administration","DicomApp Project","","Requires the backend to expose health data.","US-013","TASK-ADMIN-019",2024-01-01 09:00,2024-01-01 09:00,"WPF,MVVM,C#"
"Implement Print Job Submission and Consumption","Develop the client-side logic to check service status via Named Pipe and submit a print job to RabbitMQ. Develop the service-side consumer that receives the job, generates a print document, and spools it to a Windows printer.",Development,Backlog,Critical,"fullstack-dev@project.com","pm@project.com","",32,"WI-031,WI-032,Printing,IPC","Sprint 11","Printing & Exporting","DicomApp Project","","Requires core IPC and a study to print.","US-021","TASK-IPC-001,TASK-IPC-006",2024-01-01 09:00,2024-01-01 09:00,"WPF,RabbitMQ,C#"
"Implement Print Queue UI and Logic","Create a WPF view and viewmodel to display the status of print jobs from the database. Users can cancel their own jobs; admins can manage all jobs. The view must poll or receive updates on job status changes.",Development,Backlog,High,"fullstack-dev@project.com","pm@project.com","",24,"WI-033,Printing,Queue,UI","Sprint 11","Printing & Exporting","DicomApp Project","","Depends on the print job submission creating records in the DB.","US-022","TASK-PRINT-001",2024-01-01 09:00,2024-01-01 09:00,"WPF,MVVM,EF Core"
"Implement PDF/A-3 Export with QuestPDF","Create a background task to generate a PDF from a print layout. Use the QuestPDF library to create a PDF/A-3 compliant file, with options for AES-256 password encryption.",Development,Backlog,High,"backend-dev@project.com","pm@project.com","",20,"WI-034,Printing,Export,PDF","Sprint 11","Printing & Exporting","DicomApp Project","","Job will be submitted via RabbitMQ.","US-023","TASK-IPC-007",2024-01-01 09:00,2024-01-01 09:00,"C#,QuestPDF,RabbitMQ"
"Implement Email Sending Functionality","Create an admin UI for SMTP configuration. Develop a user-facing dialog to compose and send an email with the print output attached as a PDF. Implement a security warning for sending unsecured PHI.",Development,Backlog,Medium,"fullstack-dev@project.com","pm@project.com","",24,"WI-035,Printing,Export,Email","Sprint 12","Printing & Exporting","DicomApp Project","","Depends on PDF export.","US-024","TASK-PRINT-003",2024-01-01 09:00,2024-01-01 09:00,"WPF,MVVM,C#"
"Implement Critical Error Alerting via Email","Create a service that can be triggered when a critical error is logged or a health metric crosses a threshold. This service will use configured SMTP settings to send an alert email to a designated administrator address.",Development,Backlog,High,"backend-dev@project.com","pm@project.com","",12.33,"REQ-1-092,Monitoring,Alerting","Sprint 12","System Administration","DicomApp Project","","Triggered by the Health Probe Service; reuses the Email Service.","US-013","TASK-ADMIN-018,TASK-PRINT-004",2024-01-01 09:00,2024-01-01 09:00,"C#,.NET Mail"
"Configure MSIX Packaging Project","Create a Visual Studio Packaging Project to build a signed MSIX installer. Configure the manifest to correctly install the WPF client and register/start the Windows Service.",Development,Backlog,Critical,"devops@project.com","pm@project.com","",20,"WI-036,Deployment,MSIX,Installer","Sprint 12","Deployment & Installation","DicomApp Project","High Risk: R-OPS-001","Depends on all other components being complete.","US-025","",2024-01-01 09:00,2024-01-01 09:00,"MSIX,Visual Studio,DevOps"
"Implement Installer Prerequisite Checks","Implement a first-run check in the WPF application that validates connectivity to PostgreSQL (including `pgcrypto` extension) and RabbitMQ. The application will not proceed until these checks pass.",Development,Backlog,Critical,"fullstack-dev@project.com","pm@project.com","",16,"WI-037,Deployment,Validation","Sprint 12","Deployment & Installation","DicomApp Project","","Depends on all core services.","US-025","",2024-01-01 09:00,2024-01-01 09:00,"WPF,C#,PostgreSQL,RabbitMQ"
"Write Deployment Guide","Create a comprehensive Deployment Guide document. It will cover prerequisite installation (PostgreSQL, RabbitMQ), system requirements, and step-by-step instructions for running the MSIX installer and performing initial configuration.",Documentation,Backlog,High,"tech-lead@project.com","pm@project.com","",24,"WI-038,Documentation,Deployment","Sprint 13","Deployment & Installation","DicomApp Project","","Requires the installation process to be finalized.","US-026","TASK-DEPLOY-001",2024-01-01 09:00,2024-01-01 09:00,"Technical Writing"
"Write Administrator's Guide","Create a comprehensive Administrator's Guide document. It will cover all day-to-day administrative tasks, such as user management, system configuration, monitoring the health dashboard, and detailed, tested procedures for database backup and restore.",Documentation,Backlog,High,"tech-lead@project.com","pm@project.com","",32,"WI-039,Documentation,Admin","Sprint 13","Deployment & Installation","DicomApp Project","","Requires all administrative features to be complete.","US-026","",2024-01-01 09:00,2024-01-01 09:00,"Technical Writing"
"Hardening and Final QA","Sprint dedicated to bug fixing, performance tuning, final end-to-end testing across all features, and preparation for release. No new features will be introduced.",Testing,Backlog,Critical,"qa@project.com","pm@project.com","",80,"Release,Hardening,QA","Sprint 13","Deployment & Installation","DicomApp Project","","Final sprint for stabilization.","US-025","",2024-01-01 09:00,2024-01-01 09:00,"QA,Performance Testing"