risk_id,risk_category,risk_description,probability,impact,risk_score,priority_level,affected_tasks,root_cause,mitigation_strategy,contingency_plan,monitoring_trigger,owner,due_date,status
R-TEC-001,Technical,"Failure to implement a stable and performant GPU-accelerated rendering pipeline using Vortice.Windows/DirectX, leading to viewer instability, visual artifacts, or inability to render large studies, jeopardizing the core application functionality.",4,5,20,High,"WI-027, WI-028, WI-029, WI-030",Extreme technical complexity of DirectX/WPF interop, potential for memory leaks, and dependency on a non-commercial wrapper library (Vortice.Windows).,"1. Develop a standalone proof-of-concept (PoC) for the rendering pipeline early in the project. 2. Profile memory and GPU usage rigorously during development. 3. Enforce strict code reviews focusing on native resource management.","1. Develop a simpler, software-based rendering fallback using WPF's WriteableBitmap, accepting a performance penalty for large studies. 2. Allocate budget to hire an external DirectX consultant if the PoC fails.","PoC not rendering a 500-slice CT study at an acceptable frame rate by end of Sprint 2. Memory usage continuously grows during viewer interaction in performance tests.",Tech Lead,2025-02-28,Open
R-RES-001,Resource,Lack of available developers with the niche and highly specialized skills required for DirectX/Vortice.Windows programming (WI-027), creating a single point of failure and a significant project bottleneck.,3,5,15,High,WI-027,"Specialized skill set (GPU programming) is not common among typical WPF application developers, creating a key-person dependency.",","1. Identify and pre-vet external contractors or consultants specializing in DirectX. 2. Pair a junior developer with the specialist to facilitate knowledge transfer. 3. Prioritize building the software-based rendering fallback (contingency for R-TEC-001).","The primary developer assigned to WI-027 becomes unavailable for more than one week. PoC for GPU rendering is delayed.",Project Manager,2025-01-31,Open
R-TEC-002,Technical,The custom implementation of global inactivity monitoring using low-level Windows hooks (P/Invoke) proves to be unstable, causing application crashes or failing to detect inactivity, which compromises a critical HIPAA security requirement.,4,4,16,High,WI-012,Complexity and fragility of interacting with unmanaged Win32 APIs from a managed .NET application. Hooks can interfere with other applications or be difficult to debug.,"1. Isolate the hook logic in a separate, thoroughly tested module. 2. Research and prototype alternative, less intrusive methods for activity detection if possible. 3. Conduct extensive testing on all target OS versions (Windows 10/11) and with various other applications running.","If hooks are unstable, replace the automatic lock with a more prominent, manual 'Lock Session' button and enforce the policy through user training, accepting a lower level of security compliance until a robust solution is found.",User input is not detected or the application crashes during extended test sessions. High CPU usage is observed from the monitoring service.,Tech Lead,2025-03-15,Open
R-SEC-001,Technical,"Incomplete or faulty implementation of PHI (Protected Health Information) masking in logs, leading to sensitive data exposure in log files or the Windows Event Log, resulting in a severe HIPAA compliance violation.",3,5,15,High,WI-003,Complexity of identifying all PHI properties across numerous data models and ensuring the Serilog enricher correctly redacts them without fail.,"1. Define a clear data annotation (e.g., `[PiiData]`) to mark all PHI properties in domain models. 2. Implement the masking enricher to specifically target this annotation. 3. Mandate peer reviews for all new models containing PHI and for any changes to the logging configuration. 4. Add a specific step in the testing plan to review logs for any leaked PHI after running automated tests.","In case of a breach, immediately disable the affected log sinks (File, EventLog). Manually purge all existing logs containing PHI from the file system and Event Viewer. Re-architect the logging to only log non-sensitive correlation IDs.",A manual or automated scan of log files during a test run reveals unmasked patient names, IDs, or other PHI.,Security Officer,2025-02-15,Open
R-TIM-001,Timeline,"The complexity of creating valid DICOM Grayscale Softcopy Presentation State (GSPS) objects for annotations is underestimated, causing significant delays in the viewer development track.",4,3,12,Medium,"WI-030, EPIC-005","The DICOM standard is notoriously complex and verbose. Correctly constructing a compliant GSPS object from scratch using fo-dicom requires deep domain knowledge and is highly error-prone.","1. Allocate specific research time (a spike) to understand the GSPS specification and fo-dicom's capabilities before starting implementation. 2. Create a minimal PoC to save and load a single line annotation. 3. Engage with the fo-dicom community for guidance early.",Descope advanced measurement tools (angle, area) for a future release, delivering only basic annotations (arrows, text boxes) which require simpler GSPS structures.,The PoC for saving and reloading a basic annotation is not functional after one week of development.,Developer,2025-04-30,Open
R-OPS-001,Operational,"The MSIX installer fails to correctly register or configure the background Windows Service, or the prerequisite checks for PostgreSQL/RabbitMQ fail on user machines due to environmental variations, leading to a failed deployment and poor user experience.",4,4,16,High,"WI-036, WI-037",MSIX deployment for applications with service components has specific complexities. Variations in user environments (firewalls, permissions, existing software) can break connectivity checks.,"1. Create a comprehensive suite of test VMs representing different Windows versions and configurations (e.g., with/without firewall, different UAC levels). 2. Provide a standalone diagnostic tool for users to test connectivity to PostgreSQL/RabbitMQ. 3. The installer/first-run check must provide clear, actionable error messages (e.g., 'Cannot connect to PostgreSQL on host X, port Y. Please check firewall rules.')","Provide a manual installation guide that details how to configure the service and connection settings outside of the installer. Offer remote support sessions for initial customer deployments.",More than 10% of test installations fail during internal QA. Beta testers report installation or first-run configuration issues.,DevOps Lead,2025-06-15,Open
R-TEC-003,Technical,"The decoupled C-STORE SCP architecture, while good for performance, leads to data integrity issues where a DICOM file is saved but the corresponding database record fails to be created (e.g., due to a poison message in RabbitMQ), resulting in orphaned files.",3,4,12,Medium,"WI-021, WI-022",The process involves multiple systems (file system, message queue, database) and is not a single atomic transaction. A failure after the message is queued but before the DB write is complete can lead to inconsistency.,"1. Implement a robust Dead-Letter Queue (DLQ) mechanism for failed messages as required. 2. Make the database consumer idempotent (e.g., check if the SOPInstanceUID already exists before inserting). 3. Create a scheduled background task that periodically scans for orphaned files (files on disk with no corresponding DB entry) and reports them.",Create a manual, admin-driven tool to re-process messages from the DLQ or to scan a directory of orphaned files and re-queue them for processing.",The number of messages in the Dead-Letter Queue is greater than zero. The orphan file scan reports discrepancies.",Tech Lead,2025-03-31,Open
R-EXT-001,External,"A bug, breaking change, or lack of support in a critical third-party library (especially Vortice.Windows or fo-dicom) blocks development or introduces a severe issue that cannot be fixed internally.",3,4,12,Medium,"WI-021, WI-023, WI-027, WI-030","The project is heavily reliant on open-source libraries for core functionalities. Vortice.Windows is a community-driven wrapper, which may have slower support cycles than a commercial product.","1. Before full implementation, build small PoCs for the most complex features that rely on these libraries. 2. Encourage developers to engage with the library communities (e.g., GitHub issues, Gitter) to clarify usage and report issues early. 3. Lock dependency versions and only upgrade deliberately after testing.","Fork the library's repository and attempt to fix the issue internally. If not feasible, investigate alternative libraries (if they exist) or descope the affected feature.",A critical feature is blocked for more than a week due to a confirmed bug in an external library with no available workaround or patch.,Project Manager,2025-02-28,Open
R-QUA-001,Quality,Automated End-to-End (E2E) testing using Appium/WinAppDriver proves to be too brittle and time-consuming to maintain, leading to inadequate testing coverage for the complex client-server interactions and potential for regressions.,4,3,12,Medium,"EPIC-001 to EPIC-006","Automating desktop applications, especially those with custom-rendered graphics (the viewer) and complex IPC, is notoriously difficult. Tests often break due to minor UI changes.","1. Prioritize E2E automation for critical-path workflows only (e.g., login, search, open study). 2. Rely on robust integration tests for backend logic (data access, message handling) and unit tests for ViewModels. 3. Allocate significant time for manual, exploratory testing in each sprint.","Increase the budget and time allocated for manual QA testing before each release. Create detailed manual test scripts for testers to follow.",The CI build shows E2E tests failing more than 50% of the time due to non-product-related issues (e.g., timing, control recognition). The effort to fix tests exceeds the effort of new feature development.,QA Lead,2025-06-30,Open
R-SEC-002,Technical,The business logic to prevent an administrator from deleting or demoting the last admin account contains a flaw, allowing a lockout scenario that requires direct database intervention to fix.,2,5,10,Medium,WI-015,"A race condition or an off-by-one error in the logic that counts active administrators could lead to the check being bypassed, resulting in a critical operational failure.",1. The check must be performed within a pessimistic database transaction to prevent race conditions. 2. Implement multiple, dedicated integration tests for this specific scenario, including concurrent attempts to modify the last admin account.,The recovery procedure (requiring manual database access to update a user's role) must be documented in the Administrator's Guide and tested by the development team.,An admin is able to successfully save a change that leaves zero active administrator accounts in the system during integration testing.,Developer,2025-04-15,Open
R-TIM-002,Timeline,Scope creep occurs within the Printing & Exporting epic due to requests for additional layouts, branding options, or de-identification rules, delaying the overall project delivery.,3,3,9,Medium,"EPIC-006, WI-032, WI-034","The printing feature is feature-rich (layouts, branding, overlays, PDF, email) and is a prime candidate for stakeholder-driven scope expansion.",1. Firmly define the list of print layouts and configuration options for the initial release and document them as ""in-scope"". 2. All new requests for printing features must go through a formal change request process. 3. Develop the printing module in a way that makes adding new layouts a low-effort task in the future.,Defer requested additional features to a subsequent release (Phase 2). Communicate the impact on the timeline to stakeholders if a new feature is deemed critical.,A stakeholder requests a new print layout or feature not explicitly listed in the requirements after the feature freeze date for the release.,Project Manager,2025-05-31,Open