test_id,feature_area,test_type,test_level,priority,automation_candidate,test_description,preconditions,test_steps,expected_result,test_data_needs,tools_required,estimated_effort,dependencies
TEST-ARC-001,Architecture,Smoke,System,Critical,High,"Verify that the scaffolded solution and projects build successfully.","Visual Studio or .NET 8 SDK is installed.","1. Clone the repository. 2. Open the solution in Visual Studio or use `dotnet build` from the command line.","The build process completes without any errors. All project references are resolved correctly.",N/A,"Visual Studio, .NET CLI",0.5,TASK-ARC-001
TEST-ARC-002,Architecture,Functional,Integration,Critical,High,"Verify that a service can be successfully registered and resolved via Dependency Injection in the Windows Service.","The Windows Service project is set up with `Microsoft.Extensions.Hosting`.","1. Define a sample interface `ISampleService` and a class `SampleService`. 2. Register it as a singleton in the `Host.CreateDefaultBuilder` configuration. 3. In a hosted service's constructor, request an instance of `ISampleService`. 4. Run the service.","The service starts up without any exceptions, and the `ISampleService` instance is not null, confirming successful resolution.",N/A,"xUnit, .NET Generic Host",2,TASK-ARC-002
TEST-ARC-003,Architecture,Functional,Integration,Critical,High,"Verify that a ViewModel can be successfully registered and resolved via Dependency Injection in the WPF Client.","The WPF Client project is set up with `Microsoft.Extensions.DependencyInjection`.","1. Define a `MainViewModel`. 2. Register it as transient in the `App.xaml.cs` service provider configuration. 3. Resolve an instance of `MainViewModel` and set it as the `DataContext` for the `MainWindow`. 4. Launch the application.","The application launches without exceptions, and the `MainWindow`'s `DataContext` is a valid instance of `MainViewModel`.",N/A,"WPF, DI Container",2,TASK-ARC-003
TEST-LOG-001,Logging,Functional,Integration,Critical,High,"Verify that Serilog correctly writes log events to a rolling text file from the Windows Service.","Serilog is configured in the Windows Service to write to a file sink. The service has permissions to write to the log file location.","1. Start the Windows Service. 2. Trigger an action in the service that generates a log message (e.g., on start). 3. Check the configured log file directory.","A log file is created, and it contains the expected log message with the correct timestamp, level, and content.",N/A,"Windows Services, File Explorer",2,TASK-LOG-001
TEST-LOG-002,Logging,Functional,Integration,Critical,High,"Verify that Serilog correctly writes log events to the Windows Event Log from the WPF Client.","Serilog is configured in the WPF Client to write to the Windows Event Log sink. The application is run with sufficient privileges to write to the event log.","1. Launch the WPF client application. 2. Perform an action that generates a log message (e.g., successful login). 3. Open the Windows Event Viewer. 4. Navigate to the 'Application' log.","A new event from the application's source is present, containing the expected log message.",N/A,"Windows Event Viewer",2,TASK-LOG-001
TEST-LOG-003,Security,Functional,Unit,Critical,High,"Verify the PHI Masking Enricher redacts properties identified as containing PHI.","The `PhiMaskingEnricher` class is available.","1. Create a sample object with properties like `PatientName = ""John Doe""` and `StudyDescription = ""Routine Checkup""`. 2. Configure a test logger with the `PhiMaskingEnricher`. 3. Log the sample object. 4. Capture the log output.","The captured log output shows `PatientName: ""[REDACTED]""` while `StudyDescription` remains unchanged.",Sample object with PHI and non-PHI properties,"xUnit, Serilog",4,TASK-LOG-002
TEST-LOG-004,Security,System,Critical,Manual Only,"End-to-end validation of PHI masking in a production-like scenario.","The PHI masking enricher is integrated into both client and service log configurations.","1. Perform a full workflow: receive a DICOM study, search for it in the client, open it, and attempt to print. 2. After the workflow, collect the log files from the client and service, and check the Windows Event Log.","Inspect all collected logs. No instances of patient name, PatientID, or other PHI should be found in plain text. They must all be redacted.",A sample DICOM file with identifiable PHI.,File Explorer,Windows Event Viewer,4,TASK-LOG-004
TEST-IPC-001,IPC,Functional,Integration,High,High,"Verify the Named Pipe server in the service correctly responds with 'PONG' to a 'PING' message.","The Windows Service with the Named Pipe server is running.","1. Create a separate test client application. 2. Use `NamedPipeClientStream` to connect to the service's pipe. 3. Write the string 'PING' to the stream. 4. Read the response from the stream.","The test client successfully reads the string 'PONG' from the pipe within the expected timeout.",N/A,"xUnit, .NET Named Pipes",4,TASK-IPC-001
TEST-IPC-002,IPC,Non-Functional,Integration,High,High,"Verify the Named Pipe client in the WPF app correctly handles a timeout when the service is not running.","The Windows Service is stopped.","1. In a test environment, call the `IServiceStatusClient.IsServiceRunningAsync` method.","The method should not hang indefinitely. It should return `false` or throw a `TimeoutException` after a configured timeout period (e.g., 2 seconds).",N/A,"xUnit, Moq",3,TASK-IPC-002
TEST-IPC-003,IPC,Functional,System,High,Medium,"Verify the WPF client UI correctly disables dependent controls when the background service is not available.","The Windows Service is stopped.","1. Launch the WPF client application. 2. Navigate to a view that has a 'Print' button.","The 'Print' button should be disabled (greyed out). A status indicator or notification should inform the user that the print service is unavailable.",N/A,"Appium/WinAppDriver, Manual",4,TASK-IPC-002
TEST-IPC-004,IPC,Functional,Integration,Critical,High,"Verify the RabbitMQ topology declaration is idempotent.","RabbitMQ server is running.","1. Run the service startup logic that declares exchanges and queues. 2. Verify in the RabbitMQ Management UI that all topology is created correctly. 3. Stop and restart the service.","The service starts without errors. The topology in RabbitMQ remains unchanged, demonstrating that re-declaring existing queues/exchanges does not cause an error.",N/A,"RabbitMQ Management UI",3,TASK-IPC-005
TEST-IPC-005,IPC,Reliability,Integration,Critical,Medium,"Verify that a persistent message sent to a durable queue is not lost during a RabbitMQ broker restart.","RabbitMQ is running. The consumer service is stopped.","1. Publish a message marked as 'persistent' to a 'durable' queue. 2. Verify the message is in the queue via the Management UI. 3. Restart the RabbitMQ broker service. 4. After restart, check the Management UI again. 5. Start the consumer service.","The message is still present in the queue after the broker restart. The consumer service successfully processes the message upon startup.",Sample message payload.,"RabbitMQ Management UI, Windows Services",6,TASK-IPC-004
TEST-IPC-006,IPC,Reliability,Integration,Critical,Medium,"Verify that a message failing processing is correctly routed to the Dead-Letter Queue (DLQ).","RabbitMQ topology including a main queue, DLX, and DLQ is configured.","1. Create a consumer that consistently throws an exception when processing a message. 2. Configure the main queue with a low retry count (e.g., 3). 3. Publish a message to the main queue. 4. Observe the consumer as it fails to process the message.","After the configured number of retries, the message is removed from the main queue and appears in the Dead-Letter Queue. The main queue is not blocked.",N/A,"RabbitMQ Management UI",6,TASK-IPC-005
TEST-AUTH-001,Authentication,Functional,Unit,Critical,High,"Verify the BCrypt Password Hashing Service correctly hashes a password.","The `IPasswordHasher` service is available.","1. Call `HashPassword(""mySecurePassword123"")`. 2. Check the returned hash.","The method returns a non-empty string that is a valid BCrypt hash format. The returned hash is different from the original password.",N/A,"xUnit",1,TASK-AUTH-003
TEST-AUTH-002,Authentication,Functional,Unit,Critical,High,"Verify the BCrypt Password Hashing Service correctly verifies a correct password and rejects an incorrect one.","A valid password hash has been generated for ""mySecurePassword123"".","1. Call `VerifyPassword(""mySecurePassword123"", validHash)`. 2. Call `VerifyPassword(""wrongPassword"", validHash)`.","The first call returns `true`. The second call returns `false`.",A pre-computed BCrypt hash,"xUnit",1,TASK-AUTH-003
TEST-AUTH-003,Authentication,Functional,Integration,Critical,High,"Verify the Authentication Service successfully logs in a user with valid credentials.","PostgreSQL is running with the user schema applied. An active user exists with a known password.","1. Instantiate the `AuthenticationService` with a real `DbContext` and `PasswordHasher`. 2. Call `LoginAsync` with the correct username and password.","The method returns a user session object containing the correct user ID, username, and role. No exception is thrown.",Active user account (username, password),"xUnit, Testcontainers/Live DB",4,TASK-AUTH-004
TEST-AUTH-004,Authentication,Functional,Integration,Critical,High,"Verify the Authentication Service rejects a login attempt with an incorrect password.","An active user exists with a known password.","1. Instantiate the `AuthenticationService`. 2. Call `LoginAsync` with the correct username but an incorrect password.","The method throws a specific `InvalidCredentialsException` or returns a result indicating failure.",Active user account (username, password),"xUnit, Testcontainers/Live DB",3,TASK-AUTH-004
TEST-AUTH-005,Authentication,Functional,Integration,Critical,High,"Verify the Authentication Service rejects a login attempt for a disabled account.","A user account exists that is marked as inactive/disabled.","1. Instantiate the `AuthenticationService`. 2. Call `LoginAsync` with the correct credentials for the disabled account.","The method throws a specific `AccountDisabledException` or returns a result indicating the account is disabled.",A disabled user account (username, password),"xUnit, Testcontainers/Live DB",3,TASK-AUTH-004
TEST-AUTH-006,Authentication,System,Critical,High,"End-to-end test of a successful login for a Technician user.","The application is installed and running. A valid, active Technician user exists in the database.","1. Launch the WPF client. 2. Enter the Technician's username and password. 3. Click 'Login'.","The login screen closes and the main application is displayed. The 'Administration' tab is NOT visible.",Active Technician user account,"Appium/WinAppDriver, Manual",4,TASK-AUTH-023
TEST-AUTH-007,Authentication,System,Critical,Manual Only,"End-to-end test of a failed login attempt due to incorrect password.","The application is running. A valid user account exists.","1. Launch the WPF client. 2. Enter a valid username and an incorrect password. 3. Click 'Login'.","An error message 'Invalid username or password.' is displayed. The password field is cleared. The user remains on the login screen.",Active user account,"Manual Testing",2,TASK-AUTH-023
TEST-AUTH-008,RBAC,Functional,Unit,Critical,High,"Verify the Session Context service correctly stores and retrieves the current user's session data.","The `ISessionContext` service is implemented as a singleton.","1. After a mock successful login, call a method to set the session context with a user ID, username, and 'Admin' role. 2. From another part of the code, retrieve the session context. 3. Check the properties of the retrieved context.","The retrieved context has the same user ID, username, and role that were set initially.",Sample user session data,"xUnit, Moq",2,TASK-AUTH-010
TEST-AUTH-009,RBAC,Functional,System,Critical,High,"Verify UI elements are correctly hidden/disabled for a Technician role.","User is logged in as a 'Technician'.","1. Navigate to the main window. 2. Navigate to the User Management screen (if possible). 3. Navigate to a study viewer.","1. The 'Administration' main menu item is not visible. 2. The User Management screen is inaccessible. 3. The 'Edit DICOM Metadata' button is disabled or not visible.",Technician user account,"Appium/WinAppDriver, Manual",4,TASK-AUTH-011
TEST-AUTH-010,RBAC,Functional,System,Critical,High,"Verify UI elements are correctly visible/enabled for an Administrator role.","User is logged in as an 'Administrator'.","1. Navigate to the main window. 2. Navigate to the User Management screen. 3. Navigate to a study viewer.","1. The 'Administration' main menu item is visible and enabled. 2. The User Management screen is accessible. 3. The 'Edit DICOM Metadata' button is enabled.",Administrator user account,"Appium/WinAppDriver, Manual",4,TASK-AUTH-011
TEST-AUTH-011,RBAC,Security,Integration,Critical,High,"Verify backend service method rejects a call from a user with an insufficient role.","An 'Admin-only' method is defined in a service. The `ISessionContext` is mocked to represent a 'Technician'.","1. In an integration test, set the current session context to a 'Technician' user. 2. Directly call the admin-only service method (e.g., `UserService.CreateUserAsync`).","The service method throws an `UnauthorizedAccessException` or similar security exception.",N/A,"xUnit, Moq",3,TASK-AUTH-012
TEST-AUTH-012,Session Management,System,Critical,Manual Only,"Verify the session automatically locks after the configured inactivity period.","User is logged into the application. Inactivity timeout is configured to 1 minute for testing.","1. Log in to the application. 2. Leave the mouse and keyboard untouched for 1 minute.","The modal lock screen overlay appears, obscuring the entire application window and prompting for a password.",Any valid user account,"Manual Testing",4,TASK-AUTH-019
TEST-AUTH-013,Session Management,System,Critical,Manual Only,"Verify the session can be successfully unlocked with the correct password, preserving application state.","The application is in a locked state. A study is open in the viewer.","1. Enter the correct password for the logged-in user into the lock screen. 2. Click 'Unlock'.","The lock screen overlay is removed. The application is in the exact same state as before it was locked (the study is still open in the viewer).",Any valid user account,"Manual Testing",3,TASK-AUTH-019
TEST-AUTH-014,Session Management,Security,System,High,Manual Only,"Verify the session is terminated after 5 consecutive failed unlock attempts.","The application is in a locked state.","1. Enter an incorrect password and click 'Unlock'. 2. Repeat this action 4 more times (5 total).","After the 5th incorrect attempt, the application state is cleared and the user is returned to the main login screen. An audit event for multiple failed unlocks is logged.",Any valid user account,"Manual Testing",4,TASK-AUTH-018
TEST-AUTH-015,Session Management,Performance,Non-Functional,High,Manual Only,"Verify the global input hook service has negligible performance impact.","The application is running and the user is actively interacting with it.","1. Open Task Manager or a profiler. 2. Observe the application's CPU usage during normal, intensive use (e.g., scrolling through a large image series).","The application's CPU usage remains within acceptable limits (<1% overhead from the hook service), and the UI remains responsive without any noticeable lag.",N/A,"Windows Task Manager, Performance Profiler",4,TASK-AUTH-013
TEST-ADMIN-001,Audit,Functional,Integration,Critical,High,"Verify the Audit Logging Service can successfully write an event to the database.","The `AuditLog` table exists in the database.","1. In a test, create an `AuditEvent` object. 2. Call `IAuditService.LogEventAsync()` with the object. 3. Query the `AuditLogs` table in the database.","A new row exists in the `AuditLogs` table that matches the data from the `AuditEvent` object.",Sample audit event data,"xUnit, Testcontainers/Live DB",3,TASK-ADMIN-002
TEST-ADMIN-002,Audit,System,High,Manual Only,"Verify the Audit Trail Viewer correctly displays and filters log entries.","Several audit log entries exist in the database for different users and dates. The user is logged in as an Administrator.","1. Navigate to the 'Audit Trail' view. 2. Verify all entries are loaded. 3. Select a specific user from the filter dropdown. 4. Select a specific date range using the date pickers.","2. The grid populates with log data. 3. The grid updates to show only logs for the selected user. 4. The grid updates again to show only logs within the selected date range for that user.",Multiple audit log entries for at least 2 users,"Manual Testing",4,TASK-ADMIN-004
TEST-ADMIN-003,Audit,Functional,System,High,Medium,"Verify the 'Export to CSV' functionality correctly generates a CSV file of the filtered audit logs.","The user is on the 'Audit Trail' view with a filtered set of logs displayed.","1. Click the 'Export to CSV' button. 2. In the file save dialog, specify a filename and location and save. 3. Open the saved file with a spreadsheet program.","The CSV file contains the exact same data and number of rows as displayed in the filtered grid. The columns and data are formatted correctly.",Filtered audit log data,"Manual Testing, Appium/WinAppDriver",3,TASK-ADMIN-005
TEST-ADMIN-004,User Management,Functional,Integration,Critical,High,"Verify the 'Create User' service logic works transactionally.","Database is running. Audit and Password Hashing services are available.","1. Call `UserService.CreateUserAsync` with valid new user data. 2. Verify the database state. 3. Configure the `AuditService` to throw an exception. 4. Call `UserService.CreateUserAsync` again. 5. Verify the database state.","1. A new User record is created, the 'force password change' flag is true, and a new AuditLog record is created. 2. No new User record is created, demonstrating the transaction was rolled back.",Unique username and role,"xUnit, Moq, Testcontainers/Live DB",6,TASK-ADMIN-009
TEST-ADMIN-005,User Management,Security,System,Critical,Medium,"Verify an Admin can create a new Technician user, and the temporary password is displayed.","User is logged in as an Administrator.","1. Navigate to User Management. 2. Click 'Add User'. 3. Enter a unique username and select the 'Technician' role. 4. Click 'Create'.","The 'Add User' dialog closes. The user list refreshes to show the new user. A success notification appears containing a temporary password.",Administrator account,"Appium/WinAppDriver, Manual",4,TASK-ADMIN-010
TEST-ADMIN-006,User Management,System,Critical,Medium,"Verify a newly created user is forced to change their password on first login.","A new user has been created with a temporary password.","1. Log out the Administrator. 2. Log in using the new user's username and the provided temporary password.","Instead of the main application, the user is presented with a non-dismissible 'Create New Password' screen.",New user account with temporary password,"Appium/WinAppDriver, Manual",5,TASK-AUTH-022
TEST-ADMIN-007,User Management,Security,Integration,Critical,High,"Verify an Administrator cannot disable or demote the last remaining active Administrator account.","The database contains only one active Administrator user.","1. In a test, log in as the sole Administrator. 2. Attempt to call `UserService.UpdateUserAsync` to change the user's role to 'Technician'. 3. Attempt to call `UserService.UpdateUserAsync` to set the user's status to inactive.","Both calls should fail and throw a specific business rule violation exception. The user's record in the database remains unchanged.",Test data with only one admin user,"xUnit, Testcontainers/Live DB",5,TASK-ADMIN-012
TEST-ADMIN-008,User Management,Security,System,High,Manual Only,"Verify an Administrator cannot delete their own account.","User is logged in as an Administrator.","1. Navigate to the User Management page. 2. Locate the row corresponding to the currently logged-in administrator.","The 'Delete' and 'Edit' buttons for that row are disabled.",Administrator account,"Manual Testing",2,TASK-ADMIN-013
TEST-DICOM-001,DICOM Ingestion,Functional,Integration,Critical,Medium,"Verify the C-STORE SCP listener receives a DICOM file and publishes a message to RabbitMQ.","The Windows Service is running. RabbitMQ is running. A DICOM modality/SCU tool is available.","1. Use a DICOM SCU tool (like `dcmsend`) to send a DICOM file to the service's AE Title and port. 2. Monitor the RabbitMQ 'dicom_store_queue'.","The DICOM C-STORE operation succeeds. A new message appears in the RabbitMQ queue, and its payload contains metadata extracted from the sent file.",Sample DICOM file,"DCMTK (`dcmsend`), RabbitMQ Management UI",8,TASK-DICOM-002
TEST-DICOM-002,DICOM Ingestion,Functional,Integration,Critical,High,"Verify the DICOM metadata persistence consumer correctly processes a message and creates database records.","A message is in the 'dicom_store_queue'. PostgreSQL is running. The consumer service is running.","1. Let the consumer service process the message from the queue. 2. After the message is acknowledged, query the Patient, Study, Series, and Image tables in the database.","The message is removed from the queue. New records corresponding to the DICOM metadata exist in all four tables. The physical DICOM file has been moved to its permanent storage location.",Message in RabbitMQ queue,"RabbitMQ Management UI, pgAdmin",6,TASK-DICOM-003
TEST-DICOM-003,DICOM Ingestion,Performance,Non-Functional,High,Medium,"Verify the C-STORE SCP can handle 10 simultaneous associations without significant performance degradation.","The Windows Service and its dependencies are running on hardware meeting recommended specs.","1. Use a scripting tool or multiple instances of a DICOM SCU tool to initiate 10 simultaneous C-STORE transfers to the service. 2. While the transfers are in progress, interact with the WPF client application.","All 10 transfers complete successfully. The WPF client UI remains responsive (actions complete in <500ms). The RabbitMQ queue depth increases and then decreases as the consumer processes the backlog.",10 different DICOM studies,"DCMTK (`dcmsend`), Scripting, Performance monitoring tools",16,TASK-DICOM-002
TEST-DICOM-004,PACS Query,Functional,System,Critical,Manual Only,"Verify the user can query a remote PACS and retrieve studies using C-FIND/C-MOVE.","A test PACS server is running and configured in the application. The local C-STORE SCP is running.","1. Navigate to the PACS Query view. 2. Enter a valid Patient ID known to exist on the test PACS. 3. Click 'Search'. 4. Select a study from the results. 5. Click 'Retrieve'.","3. A list of matching studies is displayed. 5. The C-MOVE operation starts, and progress is shown in the UI. The study is successfully received by the local SCP and appears in the local study browser.",Test PACS server with known data, valid user account,"Test PACS Server (e.g., Orthanc), Manual Testing",12,TASK-PACS-001
TEST-DICOM-005,DICOM Import,Functional,System,High,Medium,"Verify drag-and-drop import correctly queues a study for processing.","Application is running. A folder with DICOM files is on the desktop.","1. Drag the folder from the desktop and drop it onto the main application window.","A non-blocking notification appears indicating 'Import Queued'. A message for the new study is published to the appropriate RabbitMQ queue. The study eventually appears in the local browser after background processing.",Folder with valid DICOM files,"Appium/WinAppDriver, Manual",6,TASK-IMPORT-001
TEST-DICOM-006,DICOM Import,Functional,System,High,Manual Only,"Verify duplicate import conflict resolution.","A study already exists in the local database. The user has a folder with the same study to import.","1. Drag and drop the folder containing the duplicate study.","A modal dialog appears offering three choices: 'Overwrite', 'Discard', 'Save as New'. Choosing each option performs the correct action.",An existing study and a folder with the same study's files,"Manual Testing",5,TASK-IMPORT-001
TEST-VIEWER-001,DICOM Viewer,Performance,Non-Functional,Critical,Manual Only,"Verify a large, multi-frame DICOM series loads in the viewer with an acceptable time-to-first-image.","A large DICOM series is available for testing.","1. From the study browser, double-click a study containing a 500+ slice CT series. 2. Time how long it takes for the first image to be displayed.","A low-resolution preview of the first image appears in under 3 seconds. The UI remains responsive while the full-resolution data loads in the background.",500+ slice CT DICOM series,"Stopwatch, Manual Testing",8,TASK-VIEWER-001
TEST-VIEWER-002,DICOM Viewer,Functional,System,Critical,Manual Only,"Verify standard image manipulation tools (zoom, pan, WW/WL) function correctly.","A study is open in the viewer.","1. Scroll the mouse wheel up and down. 2. Hold the left mouse button and drag. 3. Hold the right mouse button and drag vertically and horizontally. 4. Select a WW/WL preset from a dropdown.","1. The image zooms in and out smoothly. 2. The image pans with the mouse. 3. The image brightness and contrast (window/level) change interactively. 4. The preset is applied, and the image appearance changes accordingly.",Any viewable DICOM series,"Manual Testing",6,TASK-VIEWER-003
TEST-VIEWER-003,DICOM Viewer,Functional,System,High,Manual Only,"Verify creation and persistence of annotations via GSPS objects.","A study is open in the viewer.","1. Select the 'length' measurement tool. 2. Draw a line on the image. 3. Click 'Save Annotations'. 4. Close and reopen the same study.","2. A line appears with a calculated length. 3. A success notification is shown. 4. The previously drawn line is displayed on the image, having been loaded from the saved GSPS object.",Writable DICOM series,"Manual Testing",10,TASK-VIEWER-004
TEST-PRINT-001,Printing,System,Critical,Manual Only,"Verify end-to-end happy path for printing a '2x2 grid on A4' layout.","A study with at least 4 images is available. A physical or virtual printer is installed. The background service is running.","1. Open the study. 2. Select 4 images. 3. Open the Print Preview. 4. Select the '2x2 grid on A4' layout. 5. Click 'Print'.","The job appears in the Print Queue UI with status 'Queued', then 'Processing', then 'Completed'. The physical/virtual printer outputs a single A4 page with the 4 images arranged in a 2x2 grid.",Study with 4+ images, configured printer,"Manual Testing, Virtual PDF Printer",8,TASK-PRINT-001
TEST-PRINT-002,Printing,System,High,Manual Only,"Verify the Print Queue UI correctly reflects job status changes, including failure.","A study is available to print.","1. Submit a print job. 2. While the job is 'Queued', pause the target printer in Windows settings. 3. Wait for the job to be processed. 4. Check the Print Queue UI.","The job status changes to 'Failed', and a descriptive reason like 'Printer is in an error state' is displayed.",Any DICOM study,"Manual Testing, Windows Print Management",6,TASK-PRINT-002
TEST-PRINT-003,Exporting,System,High,Manual Only,"Verify PDF export with AES-256 password encryption.","A study is open in the Print Preview.","1. Arrange a layout. 2. Click 'Export to PDF'. 3. In the save dialog, set a password for the file. 4. Save the file. 5. Try to open the generated PDF with and without the password.","The PDF cannot be opened without the password. When opened with the correct password, it displays the correct layout. A PDF validator tool confirms it is PDF/A-3 compliant.",Any DICOM study,"Manual Testing, PDF Reader, PDF Validator",8,TASK-PRINT-003
TEST-MONITOR-001,Monitoring,System,High,Manual Only,"Verify the System Health Dashboard accurately reflects the real-time status of dependencies.","User is logged in as an Administrator. All services are running correctly.","1. Navigate to the System Health Dashboard. 2. Observe the status indicators. 3. Stop the PostgreSQL database service. 4. Refresh the dashboard or wait for the next polling interval. 5. Restart the DB service and refresh.","2. All indicators are green. 4. The PostgreSQL connectivity indicator turns red. 5. The indicator returns to green.",Administrator account,"Manual Testing, Windows Services",6,TASK-ADMIN-020
TEST-MONITOR-002,Monitoring,Functional,Integration,High,Medium,"Verify that a critical alert email is sent when a health metric crosses its threshold.","SMTP settings are configured. A recipient email address is set. The health monitoring service is running.","1. Create a condition that violates a threshold (e.g., fill the DICOM storage disk to have less than 5% free space). 2. Wait for the next health check interval. 3. Check the recipient's email inbox.","An alert email is received with a subject like 'CRITICAL ALERT: Low Disk Space on DICOM Storage' and a body detailing the issue.",Configured SMTP server, test email account,"Manual disk space manipulation, Email client",8,TASK-ALERT-001
TEST-DEPLOY-001,Deployment,System,Critical,Manual Only,"Verify the MSIX installer correctly installs the client and registers/starts the Windows Service.","A clean Windows 10/11 machine without the application installed.","1. Run the MSIX installer package. 2. Follow the on-screen prompts to complete the installation. 3. Check the Start Menu for the client application icon. 4. Open Windows Services and look for 'DICOM Service'.","3. The application icon is present. 4. The 'DICOM Service' exists, is set to 'Automatic' startup, and is in the 'Running' state.",Clean virtual machine,"Manual Testing, Windows Services",6,TASK-DEPLOY-001
TEST-DEPLOY-002,Deployment,System,Critical,Manual Only,"Verify the installer prerequisite check fails if PostgreSQL is unreachable.","A clean machine with RabbitMQ installed but PostgreSQL not installed or firewalled.","1. Run the application for the first time after installation. 2. When prompted for connection details, provide the correct RabbitMQ details but incorrect/unreachable PostgreSQL details. 3. Click 'Verify' or 'Proceed'.","The application displays a specific error message stating it cannot connect to the PostgreSQL server and does not allow the user to proceed to the main login screen.",Clean VM with RabbitMQ only,"Manual Testing",5,TASK-DEPLOY-002
TEST-DOC-001,Documentation,Review,UAT,High,Manual Only,"Verify the Deployment Guide is accurate and complete.","The Deployment Guide document is available. A clean test machine is available.","1. Follow the guide step-by-step, starting from prerequisite installation (PostgreSQL, RabbitMQ) through to running the MSIX installer and performing initial configuration.","The user is able to successfully deploy and configure the entire system using only the information provided in the guide. All steps are clear and correct.",N/A,"Manual Review",16,TASK-DOC-001
TEST-DOC-002,Documentation,Review,UAT,High,Manual Only,"Verify the Administrator's Guide covers all administrative tasks, including a successful database restore.","The Administrator's Guide is available. A fully functional, populated instance of the application is running.","1. Perform a database backup using the `pg_dump` command as described in the guide. 2. Simulate a disaster by dropping the application's database. 3. Follow the database restore procedure in the guide using `pg_restore`. 4. Launch the application.","The application launches successfully and all data (users, studies, etc.) from before the 'disaster' is present and correct.",N/A,"Manual Review, pg_dump, pg_restore",24,TASK-DOC-002