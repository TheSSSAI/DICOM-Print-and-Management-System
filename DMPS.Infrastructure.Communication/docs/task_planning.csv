"task_id","title","description","type","status","priority","assignee","reporter","due_date","estimated_hours","story_points","labels","sprint","sprint_goal","epic","epic_id","project","parent_id","dependencies","skills_required","complexity","risk_level","acceptance_criteria","definition_of_done","created_at","updated_at","sprint_start_date","sprint_end_date","capacity_allocation","collaboration_required","external_dependencies","testing_requirements","deployment_notes","business_value"
"TASK-AUTH-001","Design & Implement User/Role/PasswordHistory EF Core Entities","Define the C# entities for User, Role, and PasswordHistory. Configure their relationships, constraints (e.g., unique username), and indexes in the ApplicationDbContext using the Fluent API. Create the initial EF Core migration.","Task","Sprint Backlog","Critical","backend.dev@company.com","product.owner@company.com","2024-11-08","8.3","8","database,ef-core,backend","Sprint 1","Implement a secure, end-to-end user authentication system and de-risk the DICOM viewer.","User Authentication & Authorization","EPIC-002","DICOM Management & Printing System","US-001","","Entity Framework Core 8,PostgreSQL","Medium","Low","User, Role, and PasswordHistory entities are created; Relationships are configured; An EF Core migration is generated and applies cleanly.","Code reviewed; Migration created and tested against a local PostgreSQL instance.","2024-10-21T09:00:00Z","2024-10-21T09:00:00Z","2024-10-28","2024-11-08","100%","","","Integration test for migration.","Initial database schema creation.","Foundation for all user-related features."
"TASK-AUTH-002","Implement BCrypt Password Hashing and Verification Service","Create an IPasswordHasher service with an implementation using BCrypt.Net-Next. The service will provide methods to hash a password and verify a password against a hash.","Task","Sprint Backlog","Critical","backend.dev@company.com","product.owner@company.com","2024-11-08","4.2","8","security,backend,crypto","Sprint 1","Implement a secure, end-to-end user authentication system and de-risk the DICOM viewer.","User Authentication & Authorization","EPIC-002","DICOM Management & Printing System","US-001","","C#,Cryptography","Medium","Low","HashPassword returns valid hash; VerifyPassword correctly validates correct/incorrect passwords; Unit tests >90% coverage.","Code reviewed; Unit tests passing.","2024-10-21T09:00:00Z","2024-10-21T09:00:00Z","2024-10-28","2024-11-08","100%","","","Unit tests for all methods.","","Core security component for password management."
"TASK-SEC-001","Implement Secure Credential Storage Service (Windows Credential Manager)","Create a service to abstract reading from and writing to the Windows Credential Manager. This service will be used at startup to retrieve database passwords and other secrets.","Task","Sprint Backlog","Critical","backend.dev@company.com","product.owner@company.com","2024-11-08","12","5","security,backend,devops","Sprint 1","Implement a secure, end-to-end user authentication system and de-risk the DICOM viewer.","Security & Compliance","EPIC-008","DICOM Management & Printing System","US-010","","C#,Windows API,Security","Medium","Low","Service can store and retrieve secrets from Credential Manager; Secrets are removed from appsettings.json.","Code reviewed; Integration test passing; Configuration files clean of secrets.","2024-10-21T09:00:00Z","2024-10-21T09:00:00Z","2024-10-28","2024-11-08","100%","","","Integration test.","Requires documentation for administrators on how to pre-populate credentials.","Hardens application security by removing plaintext secrets from configuration files."
"TASK-SEC-002","Configure EF Core for TLS Connection & pgcrypto","Configure the PostgreSQL connection string to require TLS/SSL. Modify the DbContext to use value converters or other EF Core 8 features to transparently encrypt/decrypt columns marked as PHI using the pgcrypto extension.","Task","Sprint Backlog","Critical","backend.dev@company.com","product.owner@company.com","2024-11-08","16","8","security,backend,database,encryption","Sprint 1","Implement a secure, end-to-end user authentication system and de-risk the DICOM viewer.","Security & Compliance","EPIC-008","DICOM Management & Printing System","US-011","TASK-AUTH-001","C#,PostgreSQL,Entity Framework Core 8,Encryption","High","Medium","Database connections fail if TLS is not available; Data in specified PHI columns is unreadable via direct DB query; Application can read/write data transparently.","Code reviewed; Integration tests passing; Direct database inspection confirms encryption.","2024-10-21T09:00:00Z","2024-10-21T09:00:00Z","2024-10-28","2024-11-08","100%","","pgcrypto extension must be enabled on PostgreSQL server.","Integration tests and manual DB verification.","Installer must verify pgcrypto extension is present.","Fulfills critical HIPAA requirement for data-at-rest and data-in-transit encryption."
"TASK-AUTH-003","Implement Authentication Service Logic","Create the IAuthenticationService to orchestrate the login process. It will use the user repository to fetch a user by username and the IPasswordHasher to verify the password. It must handle cases for non-existent users, incorrect passwords, and disabled accounts.","Task","Sprint Backlog","Critical","fullstack.dev@company.com","product.owner@company.com","2024-11-08","8.3","8","backend,security,business-logic","Sprint 1","Implement a secure, end-to-end user authentication system and de-risk the DICOM viewer.","User Authentication & Authorization","EPIC-002","DICOM Management & Printing System","US-001","TASK-AUTH-001,TASK-AUTH-002","C#,Entity Framework Core 8","Medium","Low","Service returns UserSession on success; Returns specific results for disabled accounts or invalid credentials; Prevents user enumeration.","Code reviewed; Integration tests passing for all scenarios.","2024-10-21T09:00:00Z","2024-10-21T09:00:00Z","2024-10-28","2024-11-08","100%","","","Integration tests.","","Implements the core logic for verifying user identity."
"TASK-AUTH-004","Develop WPF Login View and ViewModel","Create the LoginView.xaml using Material Design in XAML Toolkit controls. Implement LoginViewModel with properties for username/password, an ICommand for the login action, and properties for displaying error messages. Wire the ViewModel to the IAuthenticationService.","Task","Sprint Backlog","Critical","frontend.dev@company.com","product.owner@company.com","2024-11-08","12.2","8","frontend,wpf,ui,mvvm","Sprint 1","Implement a secure, end-to-end user authentication system and de-risk the DICOM viewer.","User Authentication & Authorization","EPIC-002","DICOM Management & Printing System","US-001","TASK-AUTH-003","WPF,MVVM,Material Design in XAML Toolkit","Medium","Low","Login screen displayed at startup; Data binding functional; Login command calls auth service; Error messages displayed correctly.","Code reviewed; UI matches design; Unit tests for ViewModel passing.","2024-10-21T09:00:00Z","2024-10-21T09:00:00Z","2024-10-28","2024-11-08","100%","fullstack.dev@company.com for service integration.","","Unit tests and manual UI testing.","","Provides the user interface for application entry."
"TASK-AUTH-005","Implement Application Startup and Session Flow","Modify the application's entry point (App.xaml.cs) to show the LoginView modally. Upon successful login, close the LoginView and initialize/show the MainWindow, passing the created UserSession to the main application context/shell ViewModel.","Task","Sprint Backlog","Critical","frontend.dev@company.com","product.owner@company.com","2024-11-08","6.5","8","frontend,wpf,architecture","Sprint 1","Implement a secure, end-to-end user authentication system and de-risk the DICOM viewer.","User Authentication & Authorization","EPIC-002","DICOM Management & Printing System","US-001","TASK-AUTH-004","WPF,C#","Medium","Low","App starts with login window; Main window appears after successful login; UserSession is stored centrally; Closing login window terminates app.","Code reviewed; E2E manual testing of login flow successful.","2024-10-21T09:00:00Z","2024-10-21T09:00:00Z","2024-10-28","2024-11-08","100%","","","E2E manual testing.","","Integrates the login process into the application lifecycle."
"TASK-VIEW-001","[SPIKE] Validate DirectX Rendering in WPF","Create a Proof-of-Concept project to validate hosting a DirectX surface in a WPF window using D3DImage, loading a DICOM image with fo-dicom, creating a DirectX texture, and rendering it to the surface.","Analysis","Sprint Backlog","Critical","graphics.dev@company.com","product.owner@company.com","2024-11-08","16.7","13","spike,graphics,directx,wpf,risky","Sprint 1","Implement a secure, end-to-end user authentication system and de-risk the DICOM viewer.","DICOM Viewer & Image Manipulation","EPIC-005","DICOM Management & Printing System","US-015","","WPF,DirectX,Vortice.Windows,fo-dicom","High","High","A DICOM image is displayed inside a WPF window via DirectX; PoC project is checked in; A brief feasibility report is written.","Working PoC demonstrated; Feasibility report delivered to team.","2024-10-21T09:00:00Z","2024-10-21T09:00:00Z","2024-10-28","2024-11-08","100%","","","Demonstration of PoC.","","De-risks the most technically challenging part of the project."
"TASK-RBAC-001","Design and Implement IAuthorizationService","Create a service that holds the current user's role and provides methods to check permissions (e.g., CanEditDicomMetadata(), IsAdmin()).","Task","Sprint Backlog","Critical","backend.dev@company.com","product.owner@company.com","2024-11-22","6","8","backend,security,rbac","Sprint 2","Implement Role-Based Access Control and foundational user management capabilities.","User Authentication & Authorization","EPIC-002","DICOM Management & Printing System","US-002","TASK-AUTH-005","C#","Low","Low","Service can be initialized with a user's role; Permission-check methods return correct boolean values for Technician and Admin roles.","Code reviewed; Unit tests passing with >90% coverage.","2024-10-21T09:00:00Z","2024-10-21T09:00:00Z","2024-11-11","2024-11-22","100%","","","Unit tests.","","Provides a centralized point for all authorization checks."
"TASK-RBAC-002","Integrate Authorization into Shell and ViewModels","Inject the IAuthorizationService into ViewModels. Create properties on ViewModels (e.g., IsAdminAreaVisible) backed by calls to the service. Bind UI element Visibility and IsEnabled properties to these ViewModel properties.","Task","Sprint Backlog","Critical","frontend.dev@company.com","product.owner@company.com","2024-11-22","12.3","8","frontend,wpf,mvvm,rbac","Sprint 2","Implement Role-Based Access Control and foundational user management capabilities.","User Authentication & Authorization","EPIC-002","DICOM Management & Printing System","US-002","TASK-RBAC-001","WPF,MVVM","Medium","Low","UI for Admin functions is hidden for Technicians; Edit buttons are disabled for Technicians; UI updates dynamically based on user role.","Code reviewed; Manual E2E testing confirms UI state for both Admin and Technician roles.","2024-10-21T09:00:00Z","2024-10-21T09:00:00Z","2024-11-11","2024-11-22","100%","backend.dev@company.com","","Manual E2E testing.","","Enforces security policies at the user interface level."
"TASK-AUDIT-001","Design and Implement AuditLog Entity and Repository","Create the AuditLog EF Core entity to store event details. Implement a repository for writing audit log entries to the database.","Task","Sprint Backlog","High","backend.dev@company.com","product.owner@company.com","2024-11-22","8","8","backend,database,ef-core,security","Sprint 2","Implement Role-Based Access Control and foundational user management capabilities.","Security & Compliance","EPIC-008","DICOM Management & Printing System","US-018","TASK-AUTH-001","C#,Entity Framework Core 8","Low","Low","AuditLog entity created; Repository can successfully write records to the database.","Code reviewed; Integration tests passing for repository.","2024-10-21T09:00:00Z","2024-10-21T09:00:00Z","2024-11-11","2024-11-22","100%","","","Integration tests.","","Provides the data storage mechanism for HIPAA-compliant auditing."
"TASK-ADMIN-001","Develop User Management UI Shell (View/VM)","Create the main view and viewmodel for the User Management screen. This will display a list of users and contain buttons for Add, Edit, and Delete.","Task","Sprint Backlog","High","frontend.dev@company.com","product.owner@company.com","2024-11-22","8","5","frontend,wpf,mvvm,ui","Sprint 2","Implement Role-Based Access Control and foundational user management capabilities.","System Administration & Configuration","EPIC-007","DICOM Management & Printing System","US-006","TASK-RBAC-002","WPF,MVVM","Medium","Low","UI displays a list of users fetched from a service; Action buttons are present.","Code reviewed; UI loads and displays mock data.","2024-10-21T09:00:00Z","2024-10-21T09:00:00Z","2024-11-11","2024-11-22","100%","fullstack.dev@company.com","","Unit tests for ViewModel.","","Provides the main interface for administrators to manage users."
"TASK-ADMIN-002","Implement 'Create User' backend service logic","In a UserManagementService, implement the logic to create a new user. This includes checking for duplicate usernames, generating a temporary password, hashing it, and saving the new user to the database.","Task","Sprint Backlog","High","fullstack.dev@company.com","product.owner@company.com","2024-11-22","10","5","backend,business-logic","Sprint 2","Implement Role-Based Access Control and foundational user management capabilities.","System Administration & Configuration","EPIC-007","DICOM Management & Printing System","US-006","TASK-AUTH-001,TASK-AUTH-002,TASK-RBAC-003","C#,Entity Framework Core 8","Medium","Low","Service method creates a new user record; Sets 'IsTemporaryPassword' flag; Returns temporary password.","Code reviewed; Integration tests passing.","2024-10-21T09:00:00Z","2024-10-21T09:00:00Z","2024-11-11","2024-11-22","100%","","","Integration tests.","","Enables the provisioning of new user accounts."
"TASK-AUDIT-003","Integrate audit logging into User Creation flow","Call the IAuditLogger service from within the UserManagementService when a user is successfully created. The entire operation (user creation + audit log) must be transactional.","Task","Sprint Backlog","High","fullstack.dev@company.com","product.owner@company.com","2024-11-22","4","8","backend,security,integration","Sprint 2","Implement Role-Based Access Control and foundational user management capabilities.","Security & Compliance","EPIC-008","DICOM Management & Printing System","US-018","TASK-AUDIT-001,TASK-ADMIN-002","C#,Entity Framework Core 8","Medium","Low","Creating a user also creates a corresponding audit log entry in the same transaction.","Code reviewed; Integration test verifies atomicity of the operation.","2024-10-21T09:00:00Z","2024-10-21T09:00:00Z","2024-11-11","2024-11-22","100%","","","Integration test.","","Ensures user provisioning actions are auditable for compliance."
"TASK-VIEW-002","Implement GPU-Accelerated DICOM Rendering Control","Based on the PoC, build the reusable DicomImageControl. Implement the full DirectX rendering pipeline: device and resource management, shaders for monochrome (with WW/WL) and color image rendering, and handling of various DICOM pixel formats.","Task","Sprint Backlog","Critical","graphics.dev@company.com","product.owner@company.com","2024-11-22","33.3","13","graphics,directx,wpf,performance","Sprint 2","Implement Role-Based Access Control and foundational user management capabilities.","DICOM Viewer & Image Manipulation","EPIC-005","DICOM Management & Printing System","US-015","TASK-VIEW-001","WPF,DirectX,Vortice.Windows,HLSL","Critical","High","Control renders monochrome and color DICOMs; Window/Level is applied by shader; No memory leaks.","Code reviewed by peer; Integration tests load and render various DICOM file types; Memory profiling shows no leaks.","2024-10-21T09:00:00Z","2024-10-21T09:00:00Z","2024-11-11","2024-11-22","100%","Pair programming with another developer is recommended.","","Integration tests, performance profiling, memory profiling.","","Core component for the application's primary clinical function."
"TASK-LOCK-001","Implement Inactivity Monitor Service","Implement a robust, low-overhead mechanism to globally monitor keyboard and mouse input within the application, likely using P/Invoke to use Windows hooks.","Task","Sprint Backlog","High","fullstack.dev@company.com","product.owner@company.com","2024-12-06","13","5","frontend,wpf,security,p-invoke","Sprint 3","Secure user sessions with auto-lock and enable the core DICOM data ingestion pipeline.","User Authentication & Authorization","EPIC-002","DICOM Management & Printing System","US-003","","C#,WPF,P/Invoke","High","High","Service detects activity; Timer resets on activity; 'OnInactive' event fires after 15 minutes of no activity; Negligible CPU footprint.","Code reviewed; Manual testing with short timeout confirms functionality; Performance profiling confirms low overhead.","2024-10-21T09:00:00Z","2024-10-21T09:00:00Z","2024-11-25","2024-12-06","100%","","","Manual testing, Performance profiling.","","Enables HIPAA-compliant automatic session locking."
"TASK-SCP-001","Implement DICOM C-STORE SCP listener in Windows Service","Using fo-dicom, implement the C-STORE SCP functionality within the background Windows Service. It must listen on a configurable port and accept incoming associations.","Task","Sprint Backlog","Critical","backend.dev@company.com","product.owner@company.com","2024-12-06","16","13","backend,dicom,networking,fo-dicom","Sprint 3","Secure user sessions with auto-lock and enable the core DICOM data ingestion pipeline.","DICOM C-STORE SCP & Data Ingestion","EPIC-012","DICOM Management & Printing System","US-012","","C#,fo-dicom,DICOM","High","Medium","Service listens on configured port; Accepts C-STORE associations; Receives DICOM files and saves them to a temporary location.","Code reviewed; Integration test with a DICOM SCU tool (like DCMTK) succeeds.","2024-10-21T09:00:00Z","2024-10-21T09:00:00Z","2024-11-25","2024-12-06","100%","","","Integration testing with DICOM SCU tool.","Requires firewall rule configuration.","Enables the system to receive medical images, its primary function."
"TASK-VIEW-003","Implement Progressive Loading Service for Large Series","Create a service for loading DICOM series. For large series, it should first quickly load/generate low-resolution versions, then use a background Task to load full-resolution images, updating the UI as they become available.","Task","Sprint Backlog","High","graphics.dev@company.com","product.owner@company.com","2024-12-06","24","13","performance,backend,frontend,dicom","Sprint 3","Secure user sessions with auto-lock and enable the core DICOM data ingestion pipeline.","DICOM Viewer & Image Manipulation","EPIC-005","DICOM Management & Printing System","US-015","TASK-VIEW-002","C#,TPL (Task Parallel Library),fo-dicom","High","Medium","Large series displays low-res previews instantly; UI remains responsive during background load; Full-res images replace previews as they load.","Code reviewed; Performance testing with large CT/MR series meets acceptance criteria.","2024-10-21T09:00:00Z","2024-10-21T09:00:00Z","2024-11-25","2024-12-06","100%","","","Performance testing with large DICOM series.","","Improves user experience significantly when working with large studies."
"TASK-TOOLS-001","Implement Interactive Window/Level Tool","Capture mouse drag input in the viewer. Translate the mouse's X and Y movement into changes in Window Width and Window Level values and update the shader in real-time.","Task","Sprint Backlog","Critical","graphics.dev@company.com","product.owner@company.com","2024-12-20","8.3","5","frontend,wpf,graphics,dicom","Sprint 4","Deliver a clinically useful viewer with essential tools and enable PACS integration.","DICOM Viewer & Image Manipulation","EPIC-005","DICOM Management & Printing System","US-016","TASK-VIEW-002","WPF,C#","Medium","Low","Dragging mouse horizontally changes brightness; Dragging vertically changes contrast; Update is smooth and interactive.","Code reviewed; Manual testing confirms smooth, interactive feel.","2024-10-21T09:00:00Z","2024-10-21T09:00:00Z","2024-12-09","2024-12-20","100%","","","Manual user acceptance testing.","","Provides the most fundamental image analysis tool for radiologists."
"TASK-QR-001","Implement DICOM C-FIND SCU client logic","Using fo-dicom, create a service that can construct and send a C-FIND request to a configured PACS and parse the stream of responses into a list of study results.","Task","Sprint Backlog","High","backend.dev@company.com","product.owner@company.com","2024-12-20","12","13","backend,dicom,networking,fo-dicom","Sprint 4","Deliver a clinically useful viewer with essential tools and enable PACS integration.","DICOM Query/Retrieve (C-FIND/C-MOVE)","EPIC-014","DICOM Management & Printing System","US-014","TASK-PACS-001","C#,fo-dicom,DICOM","High","Medium","Service can query a PACS by Patient ID; Service returns a structured list of matching studies.","Code reviewed; Integration test against a test PACS (e.g., Orthanc) is successful.","2024-10-21T09:00:00Z","2024-10-21T09:00:00Z","2024-12-09","2024-12-20","100%","","Requires a running test PACS server.","Integration testing.","","Allows users to search for studies on a central archive."
"TASK-DEPLOY-001","Create and Configure MSIX Packaging Project","Add a Windows Application Packaging Project to the solution. Configure it to include the WPF client and a PowerShell script to register the background Windows Service during installation.","Task","Sprint Backlog","High","fullstack.dev@company.com","product.owner@company.com","2025-01-10","12.7","8","devops,msix,installer,deployment","Sprint 5","Create a reliable deployment and operational framework.","Deployment & Operations","EPIC-009","DICOM Management & Printing System","US-020","","MSIX,PowerShell,Visual Studio","High","Medium","Solution builds a single .msix file; Installing the package installs the app and registers/starts the service; Uninstalling removes both.","Code reviewed; Successful install/uninstall test on a clean Windows VM.","2024-10-21T09:00:00Z","2024-10-21T09:00:00Z","2025-01-06","2025-01-17","100%","","","Manual testing on a clean VM.","","Provides a professional and reliable method for deploying the application."